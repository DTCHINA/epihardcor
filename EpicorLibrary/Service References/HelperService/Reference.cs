//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpicorLibrary.HelperService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://epicor.com/webservices/", ConfigurationName="HelperService.PSAClientHelperWSSoap")]
    public interface PSAClientHelperWSSoap {
        
        // CODEGEN: Generating message contract since message GetResourceMonthlyCalendarRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetResourceMonthlyCalendar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.GetResourceMonthlyCalendarResponse GetResourceMonthlyCalendar(EpicorLibrary.HelperService.GetResourceMonthlyCalendarRequest request);
        
        // CODEGEN: Generating message contract since message GetResourceDailyCalendarRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetResourceDailyCalendar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.GetResourceDailyCalendarResponse GetResourceDailyCalendar(EpicorLibrary.HelperService.GetResourceDailyCalendarRequest request);
        
        // CODEGEN: Generating message contract since message GetOrganizationUnitListForCompanyRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetOrganizationUnitListForCompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.GetOrganizationUnitListForCompanyResponse GetOrganizationUnitListForCompany(EpicorLibrary.HelperService.GetOrganizationUnitListForCompanyRequest request);
        
        // CODEGEN: Generating message contract since message GetOrganizationUnitTreeForSitePickListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetOrganizationUnitTreeForSitePickList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.GetOrganizationUnitTreeForSitePickListResponse GetOrganizationUnitTreeForSitePickList(EpicorLibrary.HelperService.GetOrganizationUnitTreeForSitePickListRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectForEmployeeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetProjectForEmployee", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.GetProjectForEmployeeResponse GetProjectForEmployee(EpicorLibrary.HelperService.GetProjectForEmployeeRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectEmployeeForPDARequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetProjectEmployeeForPDA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.GetProjectEmployeeForPDAResponse GetProjectEmployeeForPDA(EpicorLibrary.HelperService.GetProjectEmployeeForPDARequest request);
        
        // CODEGEN: Generating message contract since message GetProjectPlannerDataForTaskRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetProjectPlannerDataForTask", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.GetProjectPlannerDataForTaskResponse GetProjectPlannerDataForTask(EpicorLibrary.HelperService.GetProjectPlannerDataForTaskRequest request);
        
        // CODEGEN: Generating message contract since message UpdateResourcePlannerRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateResourcePlanner", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.UpdateResourcePlannerResponse UpdateResourcePlanner(EpicorLibrary.HelperService.UpdateResourcePlannerRequest request);
        
        // CODEGEN: Generating message contract since message ChangeProjectPlannerEntryViewRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/ChangeProjectPlannerEntryView", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.ChangeProjectPlannerEntryViewResponse ChangeProjectPlannerEntryView(EpicorLibrary.HelperService.ChangeProjectPlannerEntryViewRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectPlannerCostRevenueRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetProjectPlannerCostRevenue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.GetProjectPlannerCostRevenueResponse GetProjectPlannerCostRevenue(EpicorLibrary.HelperService.GetProjectPlannerCostRevenueRequest request);
        
        // CODEGEN: Generating message contract since message UpdateCreditFormRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateCreditForm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.UpdateCreditFormResponse UpdateCreditForm(EpicorLibrary.HelperService.UpdateCreditFormRequest request);
        
        // CODEGEN: Generating message contract since message UpdateBillingFormRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateBillingForm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.UpdateBillingFormResponse UpdateBillingForm(EpicorLibrary.HelperService.UpdateBillingFormRequest request);
        
        // CODEGEN: Generating message contract since message RoundValueRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/RoundValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.RoundValueResponse RoundValue(EpicorLibrary.HelperService.RoundValueRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectTeamRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetProjectTeam", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.GetProjectTeamResponse GetProjectTeam(EpicorLibrary.HelperService.GetProjectTeamRequest request);
        
        // CODEGEN: Generating message contract since message GetTeamListForSiteRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTeamListForSite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.GetTeamListForSiteResponse GetTeamListForSite(EpicorLibrary.HelperService.GetTeamListForSiteRequest request);
        
        // CODEGEN: Generating message contract since message ClientHelperGetProjectTreeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/ClientHelperGetProjectTree", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.ClientHelperGetProjectTreeResponse ClientHelperGetProjectTree(EpicorLibrary.HelperService.ClientHelperGetProjectTreeRequest request);
        
        // CODEGEN: Generating message contract since message GetNavigatorRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetNavigator", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.GetNavigatorResponse GetNavigator(EpicorLibrary.HelperService.GetNavigatorRequest request);
        
        // CODEGEN: Generating message contract since message ApproveAndEngageProjectRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/ApproveAndEngageProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.ApproveAndEngageProjectResponse ApproveAndEngageProject(EpicorLibrary.HelperService.ApproveAndEngageProjectRequest request);
        
        // CODEGEN: Generating message contract since message UpdateRecurringHoursRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateRecurringHours", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.UpdateRecurringHoursResponse UpdateRecurringHours(EpicorLibrary.HelperService.UpdateRecurringHoursRequest request);
        
        // CODEGEN: Generating message contract since message UpdateRecurringExpensesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateRecurringExpenses", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.UpdateRecurringExpensesResponse UpdateRecurringExpenses(EpicorLibrary.HelperService.UpdateRecurringExpensesRequest request);
        
        // CODEGEN: Generating message contract since message GetArtifactDocumentListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetArtifactDocumentList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.HelperService.GetArtifactDocumentListResponse GetArtifactDocumentList(EpicorLibrary.HelperService.GetArtifactDocumentListRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class ICERequestHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CCMRequest ccmRequestField;
        
        private HoldListRequest hlRequestField;
        
        private string tipUrlField;
        
        private string remoteSessionKeyField;
        
        private string authorizationTokenField;
        
        private string ccmSessionIDField;
        
        private OriginalUserInfo userInfoField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public CCMRequest ccmRequest {
            get {
                return this.ccmRequestField;
            }
            set {
                this.ccmRequestField = value;
                this.RaisePropertyChanged("ccmRequest");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public HoldListRequest hlRequest {
            get {
                return this.hlRequestField;
            }
            set {
                this.hlRequestField = value;
                this.RaisePropertyChanged("hlRequest");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string tipUrl {
            get {
                return this.tipUrlField;
            }
            set {
                this.tipUrlField = value;
                this.RaisePropertyChanged("tipUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string remoteSessionKey {
            get {
                return this.remoteSessionKeyField;
            }
            set {
                this.remoteSessionKeyField = value;
                this.RaisePropertyChanged("remoteSessionKey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string authorizationToken {
            get {
                return this.authorizationTokenField;
            }
            set {
                this.authorizationTokenField = value;
                this.RaisePropertyChanged("authorizationToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ccmSessionID {
            get {
                return this.ccmSessionIDField;
            }
            set {
                this.ccmSessionIDField = value;
                this.RaisePropertyChanged("ccmSessionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public OriginalUserInfo userInfo {
            get {
                return this.userInfoField;
            }
            set {
                this.userInfoField = value;
                this.RaisePropertyChanged("userInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class CCMRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CCMOperation ccmOperationField;
        
        private string artifactField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public CCMOperation ccmOperation {
            get {
                return this.ccmOperationField;
            }
            set {
                this.ccmOperationField = value;
                this.RaisePropertyChanged("ccmOperation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string artifact {
            get {
                return this.artifactField;
            }
            set {
                this.artifactField = value;
                this.RaisePropertyChanged("artifact");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public enum CCMOperation {
        
        /// <remarks/>
        NoOperation,
        
        /// <remarks/>
        Claim,
        
        /// <remarks/>
        Release,
        
        /// <remarks/>
        ReleaseAll,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class artifactValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class Artifact : object, System.ComponentModel.INotifyPropertyChanged {
        
        private artifactValue artifactValueField;
        
        private string artifactNameField;
        
        private string artifactNodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public artifactValue ArtifactValue {
            get {
                return this.artifactValueField;
            }
            set {
                this.artifactValueField = value;
                this.RaisePropertyChanged("ArtifactValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string artifactName {
            get {
                return this.artifactNameField;
            }
            set {
                this.artifactNameField = value;
                this.RaisePropertyChanged("artifactName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string artifactNode {
            get {
                return this.artifactNodeField;
            }
            set {
                this.artifactNodeField = value;
                this.RaisePropertyChanged("artifactNode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class AttachmentListReply : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Artifact[] artifactField;
        
        private string clientQueryStringField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Artifact", Order=0)]
        public Artifact[] Artifact {
            get {
                return this.artifactField;
            }
            set {
                this.artifactField = value;
                this.RaisePropertyChanged("Artifact");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ClientQueryString {
            get {
                return this.clientQueryStringField;
            }
            set {
                this.clientQueryStringField = value;
                this.RaisePropertyChanged("ClientQueryString");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class HeldEvent : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string inhibitedArtifactNameField;
        
        private string inhibitedArtifactValueField;
        
        private string inhibitedEventNameField;
        
        private string inhibitingHoldClassField;
        
        private string inhibitingArtifactNameField;
        
        private string inhibitingArtifactValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string inhibitedArtifactName {
            get {
                return this.inhibitedArtifactNameField;
            }
            set {
                this.inhibitedArtifactNameField = value;
                this.RaisePropertyChanged("inhibitedArtifactName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string inhibitedArtifactValue {
            get {
                return this.inhibitedArtifactValueField;
            }
            set {
                this.inhibitedArtifactValueField = value;
                this.RaisePropertyChanged("inhibitedArtifactValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string inhibitedEventName {
            get {
                return this.inhibitedEventNameField;
            }
            set {
                this.inhibitedEventNameField = value;
                this.RaisePropertyChanged("inhibitedEventName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string inhibitingHoldClass {
            get {
                return this.inhibitingHoldClassField;
            }
            set {
                this.inhibitingHoldClassField = value;
                this.RaisePropertyChanged("inhibitingHoldClass");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string inhibitingArtifactName {
            get {
                return this.inhibitingArtifactNameField;
            }
            set {
                this.inhibitingArtifactNameField = value;
                this.RaisePropertyChanged("inhibitingArtifactName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string inhibitingArtifactValue {
            get {
                return this.inhibitingArtifactValueField;
            }
            set {
                this.inhibitingArtifactValueField = value;
                this.RaisePropertyChanged("inhibitingArtifactValue");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class CCMReply : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CCMArtifactStatus ccmStatusField;
        
        private string ccmMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public CCMArtifactStatus ccmStatus {
            get {
                return this.ccmStatusField;
            }
            set {
                this.ccmStatusField = value;
                this.RaisePropertyChanged("ccmStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ccmMessage {
            get {
                return this.ccmMessageField;
            }
            set {
                this.ccmMessageField = value;
                this.RaisePropertyChanged("ccmMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public enum CCMArtifactStatus {
        
        /// <remarks/>
        Unclaimed,
        
        /// <remarks/>
        ClaimedByThisSession,
        
        /// <remarks/>
        ClaimedByAnotherSession,
        
        /// <remarks/>
        Error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class ICEResponseHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CCMReply ccmReplyField;
        
        private string ccmSessionIDField;
        
        private HeldEvent[] holdListField;
        
        private AttachmentListReply attachmentListField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public CCMReply ccmReply {
            get {
                return this.ccmReplyField;
            }
            set {
                this.ccmReplyField = value;
                this.RaisePropertyChanged("ccmReply");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ccmSessionID {
            get {
                return this.ccmSessionIDField;
            }
            set {
                this.ccmSessionIDField = value;
                this.RaisePropertyChanged("ccmSessionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Artifact", IsNullable=false)]
        public HeldEvent[] HoldList {
            get {
                return this.holdListField;
            }
            set {
                this.holdListField = value;
                this.RaisePropertyChanged("HoldList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public AttachmentListReply AttachmentList {
            get {
                return this.attachmentListField;
            }
            set {
                this.attachmentListField = value;
                this.RaisePropertyChanged("AttachmentList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class OriginalUserInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string securityManagerURLField;
        
        private string userIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string securityManagerURL {
            get {
                return this.securityManagerURLField;
            }
            set {
                this.securityManagerURLField = value;
                this.RaisePropertyChanged("securityManagerURL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("userID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class HoldListRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private HoldListRequestType hlRequestTypeField;
        
        private string artifactField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public HoldListRequestType hlRequestType {
            get {
                return this.hlRequestTypeField;
            }
            set {
                this.hlRequestTypeField = value;
                this.RaisePropertyChanged("hlRequestType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string artifact {
            get {
                return this.artifactField;
            }
            set {
                this.artifactField = value;
                this.RaisePropertyChanged("artifact");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public enum HoldListRequestType {
        
        /// <remarks/>
        NoHoldListRequest,
        
        /// <remarks/>
        GetHoldList,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResourceMonthlyCalendar", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetResourceMonthlyCalendarRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string organizationID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string xmlResourceListDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public System.DateTime beginDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public int MonthsDuration;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public bool FlagFilter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=5)]
        public bool FlagPlanned;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=6)]
        public bool FlagTentative;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=7)]
        public bool FlagConfirmed;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=8)]
        public bool FlagPlanner;
        
        public GetResourceMonthlyCalendarRequest() {
        }
        
        public GetResourceMonthlyCalendarRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string organizationID, string xmlResourceListDoc, System.DateTime beginDate, int MonthsDuration, bool FlagFilter, bool FlagPlanned, bool FlagTentative, bool FlagConfirmed, bool FlagPlanner) {
            this.ICERequestHeader = ICERequestHeader;
            this.organizationID = organizationID;
            this.xmlResourceListDoc = xmlResourceListDoc;
            this.beginDate = beginDate;
            this.MonthsDuration = MonthsDuration;
            this.FlagFilter = FlagFilter;
            this.FlagPlanned = FlagPlanned;
            this.FlagTentative = FlagTentative;
            this.FlagConfirmed = FlagConfirmed;
            this.FlagPlanner = FlagPlanner;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResourceMonthlyCalendarResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetResourceMonthlyCalendarResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode xmlMonthlyCalendarDoc;
        
        public GetResourceMonthlyCalendarResponse() {
        }
        
        public GetResourceMonthlyCalendarResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode xmlMonthlyCalendarDoc) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.xmlMonthlyCalendarDoc = xmlMonthlyCalendarDoc;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResourceDailyCalendar", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetResourceDailyCalendarRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string xmlResourceListDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.DateTime beginDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public int MonthsDuration;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public bool FlagFilter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public bool FlagPlanned;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=5)]
        public bool FlagTentative;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=6)]
        public bool FlagConfirmed;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=7)]
        public bool FlagPlanner;
        
        public GetResourceDailyCalendarRequest() {
        }
        
        public GetResourceDailyCalendarRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string xmlResourceListDoc, System.DateTime beginDate, int MonthsDuration, bool FlagFilter, bool FlagPlanned, bool FlagTentative, bool FlagConfirmed, bool FlagPlanner) {
            this.ICERequestHeader = ICERequestHeader;
            this.xmlResourceListDoc = xmlResourceListDoc;
            this.beginDate = beginDate;
            this.MonthsDuration = MonthsDuration;
            this.FlagFilter = FlagFilter;
            this.FlagPlanned = FlagPlanned;
            this.FlagTentative = FlagTentative;
            this.FlagConfirmed = FlagConfirmed;
            this.FlagPlanner = FlagPlanner;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResourceDailyCalendarResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetResourceDailyCalendarResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode xmlDailyCalendarDoc;
        
        public GetResourceDailyCalendarResponse() {
        }
        
        public GetResourceDailyCalendarResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode xmlDailyCalendarDoc) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.xmlDailyCalendarDoc = xmlDailyCalendarDoc;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrganizationUnitListForCompany", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetOrganizationUnitListForCompanyRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string companyURN;
        
        public GetOrganizationUnitListForCompanyRequest() {
        }
        
        public GetOrganizationUnitListForCompanyRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string companyURN) {
            this.ICERequestHeader = ICERequestHeader;
            this.companyURN = companyURN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrganizationUnitListForCompanyResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetOrganizationUnitListForCompanyResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetOrganizationUnitListForCompanyResult;
        
        public GetOrganizationUnitListForCompanyResponse() {
        }
        
        public GetOrganizationUnitListForCompanyResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetOrganizationUnitListForCompanyResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetOrganizationUnitListForCompanyResult = GetOrganizationUnitListForCompanyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrganizationUnitTreeForSitePickList", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetOrganizationUnitTreeForSitePickListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string siteURN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string pOutlineNum;
        
        public GetOrganizationUnitTreeForSitePickListRequest() {
        }
        
        public GetOrganizationUnitTreeForSitePickListRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string siteURN, string pOutlineNum) {
            this.ICERequestHeader = ICERequestHeader;
            this.siteURN = siteURN;
            this.pOutlineNum = pOutlineNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrganizationUnitTreeForSitePickListResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetOrganizationUnitTreeForSitePickListResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetOrganizationUnitTreeForSitePickListResult;
        
        public GetOrganizationUnitTreeForSitePickListResponse() {
        }
        
        public GetOrganizationUnitTreeForSitePickListResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetOrganizationUnitTreeForSitePickListResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetOrganizationUnitTreeForSitePickListResult = GetOrganizationUnitTreeForSitePickListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectForEmployee", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectForEmployeeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string resourceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public int treeType;
        
        public GetProjectForEmployeeRequest() {
        }
        
        public GetProjectForEmployeeRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string resourceID, int treeType) {
            this.ICERequestHeader = ICERequestHeader;
            this.resourceID = resourceID;
            this.treeType = treeType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectForEmployeeResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectForEmployeeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetProjectForEmployeeResult;
        
        public GetProjectForEmployeeResponse() {
        }
        
        public GetProjectForEmployeeResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetProjectForEmployeeResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetProjectForEmployeeResult = GetProjectForEmployeeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectEmployeeForPDA", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectEmployeeForPDARequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string resourceID;
        
        public GetProjectEmployeeForPDARequest() {
        }
        
        public GetProjectEmployeeForPDARequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string resourceID) {
            this.ICERequestHeader = ICERequestHeader;
            this.resourceID = resourceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectEmployeeForPDAResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectEmployeeForPDAResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetProjectEmployeeForPDAResult;
        
        public GetProjectEmployeeForPDAResponse() {
        }
        
        public GetProjectEmployeeForPDAResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetProjectEmployeeForPDAResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetProjectEmployeeForPDAResult = GetProjectEmployeeForPDAResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectPlannerDataForTask", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectPlannerDataForTaskRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string projectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public int revisionNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public int taskUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public string dailyWeeklyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public System.DateTime requestedStartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=5)]
        public string projectCurrencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=6)]
        public string includeChildren;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=7)]
        public string plannedItemTypeCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=8)]
        public string outlineNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=9)]
        public string scrollForwardBackward;
        
        public GetProjectPlannerDataForTaskRequest() {
        }
        
        public GetProjectPlannerDataForTaskRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string projectCode, int revisionNum, int taskUID, string dailyWeeklyCode, System.DateTime requestedStartDate, string projectCurrencyCode, string includeChildren, string plannedItemTypeCode, string outlineNum, string scrollForwardBackward) {
            this.ICERequestHeader = ICERequestHeader;
            this.projectCode = projectCode;
            this.revisionNum = revisionNum;
            this.taskUID = taskUID;
            this.dailyWeeklyCode = dailyWeeklyCode;
            this.requestedStartDate = requestedStartDate;
            this.projectCurrencyCode = projectCurrencyCode;
            this.includeChildren = includeChildren;
            this.plannedItemTypeCode = plannedItemTypeCode;
            this.outlineNum = outlineNum;
            this.scrollForwardBackward = scrollForwardBackward;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectPlannerDataForTaskResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectPlannerDataForTaskResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetProjectPlannerDataForTaskResult;
        
        public GetProjectPlannerDataForTaskResponse() {
        }
        
        public GetProjectPlannerDataForTaskResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetProjectPlannerDataForTaskResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetProjectPlannerDataForTaskResult = GetProjectPlannerDataForTaskResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateResourcePlanner", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateResourcePlannerRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string projectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public int revisionNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string projectDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public string taskList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public string xmlProjectPlannerEntryDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=5)]
        public string xmlResourcesInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=6)]
        public int recurringHoursFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=7)]
        public int ReqApprovalFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=8)]
        public System.DateTime dlgRecHrsStartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=9)]
        public System.DateTime dlgRecHrsEndDate;
        
        public UpdateResourcePlannerRequest() {
        }
        
        public UpdateResourcePlannerRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string projectCode, int revisionNum, string projectDoc, string taskList, string xmlProjectPlannerEntryDoc, string xmlResourcesInfo, int recurringHoursFlag, int ReqApprovalFlag, System.DateTime dlgRecHrsStartDate, System.DateTime dlgRecHrsEndDate) {
            this.ICERequestHeader = ICERequestHeader;
            this.projectCode = projectCode;
            this.revisionNum = revisionNum;
            this.projectDoc = projectDoc;
            this.taskList = taskList;
            this.xmlProjectPlannerEntryDoc = xmlProjectPlannerEntryDoc;
            this.xmlResourcesInfo = xmlResourcesInfo;
            this.recurringHoursFlag = recurringHoursFlag;
            this.ReqApprovalFlag = ReqApprovalFlag;
            this.dlgRecHrsStartDate = dlgRecHrsStartDate;
            this.dlgRecHrsEndDate = dlgRecHrsEndDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateResourcePlannerResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateResourcePlannerResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string UpdateResourcePlannerResult;
        
        public UpdateResourcePlannerResponse() {
        }
        
        public UpdateResourcePlannerResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, string UpdateResourcePlannerResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateResourcePlannerResult = UpdateResourcePlannerResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeProjectPlannerEntryView", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class ChangeProjectPlannerEntryViewRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string projectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public int revisionNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public int taskUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public string newDailyWeeklyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public System.DateTime startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=5)]
        public string scrollForwardBackward;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=6)]
        public string projectCurrencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=7)]
        public string xmlProjectPlannerEntryDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=8)]
        public string includeChildren;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=9)]
        public string plannedItemTypeCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=10)]
        public string outlineNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=11)]
        public string xmlResourcesInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=12)]
        public int ReqApprovalFlag;
        
        public ChangeProjectPlannerEntryViewRequest() {
        }
        
        public ChangeProjectPlannerEntryViewRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string projectCode, int revisionNum, int taskUID, string newDailyWeeklyCode, System.DateTime startDate, string scrollForwardBackward, string projectCurrencyCode, string xmlProjectPlannerEntryDoc, string includeChildren, string plannedItemTypeCode, string outlineNum, string xmlResourcesInfo, int ReqApprovalFlag) {
            this.ICERequestHeader = ICERequestHeader;
            this.projectCode = projectCode;
            this.revisionNum = revisionNum;
            this.taskUID = taskUID;
            this.newDailyWeeklyCode = newDailyWeeklyCode;
            this.startDate = startDate;
            this.scrollForwardBackward = scrollForwardBackward;
            this.projectCurrencyCode = projectCurrencyCode;
            this.xmlProjectPlannerEntryDoc = xmlProjectPlannerEntryDoc;
            this.includeChildren = includeChildren;
            this.plannedItemTypeCode = plannedItemTypeCode;
            this.outlineNum = outlineNum;
            this.xmlResourcesInfo = xmlResourcesInfo;
            this.ReqApprovalFlag = ReqApprovalFlag;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeProjectPlannerEntryViewResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class ChangeProjectPlannerEntryViewResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode ChangeProjectPlannerEntryViewResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string excessWarningStr;
        
        public ChangeProjectPlannerEntryViewResponse() {
        }
        
        public ChangeProjectPlannerEntryViewResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode ChangeProjectPlannerEntryViewResult, string excessWarningStr) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.ChangeProjectPlannerEntryViewResult = ChangeProjectPlannerEntryViewResult;
            this.excessWarningStr = excessWarningStr;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectPlannerCostRevenue", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectPlannerCostRevenueRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string projectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public int revisionNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public int taskUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public string projectCurrencyCode;
        
        public GetProjectPlannerCostRevenueRequest() {
        }
        
        public GetProjectPlannerCostRevenueRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string projectCode, int revisionNum, int taskUID, string projectCurrencyCode) {
            this.ICERequestHeader = ICERequestHeader;
            this.projectCode = projectCode;
            this.revisionNum = revisionNum;
            this.taskUID = taskUID;
            this.projectCurrencyCode = projectCurrencyCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectPlannerCostRevenueResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectPlannerCostRevenueResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetProjectPlannerCostRevenueResult;
        
        public GetProjectPlannerCostRevenueResponse() {
        }
        
        public GetProjectPlannerCostRevenueResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetProjectPlannerCostRevenueResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetProjectPlannerCostRevenueResult = GetProjectPlannerCostRevenueResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCreditForm", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateCreditFormRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string CreditDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string NewFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string taxDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public string GetTimeEntryByID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public string GetExpenseEntryByID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=5)]
        public string materialDetailShipDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=6)]
        public string billScheduleDoc;
        
        public UpdateCreditFormRequest() {
        }
        
        public UpdateCreditFormRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string CreditDoc, string NewFlag, string taxDoc, string GetTimeEntryByID, string GetExpenseEntryByID, string materialDetailShipDoc, string billScheduleDoc) {
            this.ICERequestHeader = ICERequestHeader;
            this.CreditDoc = CreditDoc;
            this.NewFlag = NewFlag;
            this.taxDoc = taxDoc;
            this.GetTimeEntryByID = GetTimeEntryByID;
            this.GetExpenseEntryByID = GetExpenseEntryByID;
            this.materialDetailShipDoc = materialDetailShipDoc;
            this.billScheduleDoc = billScheduleDoc;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCreditFormResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateCreditFormResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        public UpdateCreditFormResponse() {
        }
        
        public UpdateCreditFormResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader) {
            this.ICEResponseHeader = ICEResponseHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateBillingForm", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateBillingFormRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string BillingDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string TaxDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string GetTimeEntryByID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public string GetExpenseEntryByID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public string MaterialDetailShipDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=5)]
        public string BillScheduleDoc1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=6)]
        public string BillScheduleDoc2;
        
        public UpdateBillingFormRequest() {
        }
        
        public UpdateBillingFormRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string BillingDoc, string TaxDoc, string GetTimeEntryByID, string GetExpenseEntryByID, string MaterialDetailShipDoc, string BillScheduleDoc1, string BillScheduleDoc2) {
            this.ICERequestHeader = ICERequestHeader;
            this.BillingDoc = BillingDoc;
            this.TaxDoc = TaxDoc;
            this.GetTimeEntryByID = GetTimeEntryByID;
            this.GetExpenseEntryByID = GetExpenseEntryByID;
            this.MaterialDetailShipDoc = MaterialDetailShipDoc;
            this.BillScheduleDoc1 = BillScheduleDoc1;
            this.BillScheduleDoc2 = BillScheduleDoc2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateBillingFormResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateBillingFormResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode xmlExceedBillingCap;
        
        public UpdateBillingFormResponse() {
        }
        
        public UpdateBillingFormResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode xmlExceedBillingCap) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.xmlExceedBillingCap = xmlExceedBillingCap;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RoundValue", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class RoundValueRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public decimal amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string roundType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string currency;
        
        public RoundValueRequest() {
        }
        
        public RoundValueRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, decimal amount, string roundType, string currency) {
            this.ICERequestHeader = ICERequestHeader;
            this.amount = amount;
            this.roundType = roundType;
            this.currency = currency;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RoundValueResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class RoundValueResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public decimal RoundValueResult;
        
        public RoundValueResponse() {
        }
        
        public RoundValueResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, decimal RoundValueResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.RoundValueResult = RoundValueResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectTeam", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectTeamRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string RevisionNum;
        
        public GetProjectTeamRequest() {
        }
        
        public GetProjectTeamRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string ProjectCode, string RevisionNum) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCode = ProjectCode;
            this.RevisionNum = RevisionNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectTeamResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectTeamResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetProjectTeamResult;
        
        public GetProjectTeamResponse() {
        }
        
        public GetProjectTeamResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetProjectTeamResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetProjectTeamResult = GetProjectTeamResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTeamListForSite", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTeamListForSiteRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string siteURN;
        
        public GetTeamListForSiteRequest() {
        }
        
        public GetTeamListForSiteRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string siteURN) {
            this.ICERequestHeader = ICERequestHeader;
            this.siteURN = siteURN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTeamListForSiteResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTeamListForSiteResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTeamListForSiteResult;
        
        public GetTeamListForSiteResponse() {
        }
        
        public GetTeamListForSiteResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTeamListForSiteResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTeamListForSiteResult = GetTeamListForSiteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClientHelperGetProjectTree", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class ClientHelperGetProjectTreeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectTreeCriteriaDoc;
        
        public ClientHelperGetProjectTreeRequest() {
        }
        
        public ClientHelperGetProjectTreeRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string ProjectTreeCriteriaDoc) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectTreeCriteriaDoc = ProjectTreeCriteriaDoc;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClientHelperGetProjectTreeResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class ClientHelperGetProjectTreeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode ClientHelperGetProjectTreeResult;
        
        public ClientHelperGetProjectTreeResponse() {
        }
        
        public ClientHelperGetProjectTreeResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode ClientHelperGetProjectTreeResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.ClientHelperGetProjectTreeResult = ClientHelperGetProjectTreeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNavigator", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetNavigatorRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string criteriaDoc;
        
        public GetNavigatorRequest() {
        }
        
        public GetNavigatorRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string criteriaDoc) {
            this.ICERequestHeader = ICERequestHeader;
            this.criteriaDoc = criteriaDoc;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNavigatorResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetNavigatorResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetNavigatorResult;
        
        public GetNavigatorResponse() {
        }
        
        public GetNavigatorResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetNavigatorResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetNavigatorResult = GetNavigatorResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ApproveAndEngageProject", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class ApproveAndEngageProjectRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string projectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public int revisionNum;
        
        public ApproveAndEngageProjectRequest() {
        }
        
        public ApproveAndEngageProjectRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string projectCode, int revisionNum) {
            this.ICERequestHeader = ICERequestHeader;
            this.projectCode = projectCode;
            this.revisionNum = revisionNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ApproveAndEngageProjectResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class ApproveAndEngageProjectResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool ApproveAndEngageProjectResult;
        
        public ApproveAndEngageProjectResponse() {
        }
        
        public ApproveAndEngageProjectResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, bool ApproveAndEngageProjectResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.ApproveAndEngageProjectResult = ApproveAndEngageProjectResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateRecurringHours", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateRecurringHoursRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string xmlCreateCriteria;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string xmlDatesAndHours;
        
        public UpdateRecurringHoursRequest() {
        }
        
        public UpdateRecurringHoursRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string xmlCreateCriteria, string xmlDatesAndHours) {
            this.ICERequestHeader = ICERequestHeader;
            this.xmlCreateCriteria = xmlCreateCriteria;
            this.xmlDatesAndHours = xmlDatesAndHours;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateRecurringHoursResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateRecurringHoursResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string UpdateRecurringHoursResult;
        
        public UpdateRecurringHoursResponse() {
        }
        
        public UpdateRecurringHoursResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, string UpdateRecurringHoursResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateRecurringHoursResult = UpdateRecurringHoursResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateRecurringExpenses", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateRecurringExpensesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string xmlCreateCriteria;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string xmlDatesAndAmount;
        
        public UpdateRecurringExpensesRequest() {
        }
        
        public UpdateRecurringExpensesRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string xmlCreateCriteria, string xmlDatesAndAmount) {
            this.ICERequestHeader = ICERequestHeader;
            this.xmlCreateCriteria = xmlCreateCriteria;
            this.xmlDatesAndAmount = xmlDatesAndAmount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateRecurringExpensesResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateRecurringExpensesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool UpdateRecurringExpensesResult;
        
        public UpdateRecurringExpensesResponse() {
        }
        
        public UpdateRecurringExpensesResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, bool UpdateRecurringExpensesResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateRecurringExpensesResult = UpdateRecurringExpensesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetArtifactDocumentList", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetArtifactDocumentListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string sArtifact;
        
        public GetArtifactDocumentListRequest() {
        }
        
        public GetArtifactDocumentListRequest(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string sArtifact) {
            this.ICERequestHeader = ICERequestHeader;
            this.sArtifact = sArtifact;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetArtifactDocumentListResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetArtifactDocumentListResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetArtifactDocumentListResult;
        
        public GetArtifactDocumentListResponse() {
        }
        
        public GetArtifactDocumentListResponse(EpicorLibrary.HelperService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetArtifactDocumentListResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetArtifactDocumentListResult = GetArtifactDocumentListResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PSAClientHelperWSSoapChannel : EpicorLibrary.HelperService.PSAClientHelperWSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PSAClientHelperWSSoapClient : System.ServiceModel.ClientBase<EpicorLibrary.HelperService.PSAClientHelperWSSoap>, EpicorLibrary.HelperService.PSAClientHelperWSSoap {
        
        public PSAClientHelperWSSoapClient() {
        }
        
        public PSAClientHelperWSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PSAClientHelperWSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PSAClientHelperWSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PSAClientHelperWSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.GetResourceMonthlyCalendarResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.GetResourceMonthlyCalendar(EpicorLibrary.HelperService.GetResourceMonthlyCalendarRequest request) {
            return base.Channel.GetResourceMonthlyCalendar(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader GetResourceMonthlyCalendar(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string organizationID, string xmlResourceListDoc, System.DateTime beginDate, int MonthsDuration, bool FlagFilter, bool FlagPlanned, bool FlagTentative, bool FlagConfirmed, bool FlagPlanner, out System.Xml.XmlNode xmlMonthlyCalendarDoc) {
            EpicorLibrary.HelperService.GetResourceMonthlyCalendarRequest inValue = new EpicorLibrary.HelperService.GetResourceMonthlyCalendarRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.organizationID = organizationID;
            inValue.xmlResourceListDoc = xmlResourceListDoc;
            inValue.beginDate = beginDate;
            inValue.MonthsDuration = MonthsDuration;
            inValue.FlagFilter = FlagFilter;
            inValue.FlagPlanned = FlagPlanned;
            inValue.FlagTentative = FlagTentative;
            inValue.FlagConfirmed = FlagConfirmed;
            inValue.FlagPlanner = FlagPlanner;
            EpicorLibrary.HelperService.GetResourceMonthlyCalendarResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).GetResourceMonthlyCalendar(inValue);
            xmlMonthlyCalendarDoc = retVal.xmlMonthlyCalendarDoc;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.GetResourceDailyCalendarResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.GetResourceDailyCalendar(EpicorLibrary.HelperService.GetResourceDailyCalendarRequest request) {
            return base.Channel.GetResourceDailyCalendar(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader GetResourceDailyCalendar(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string xmlResourceListDoc, System.DateTime beginDate, int MonthsDuration, bool FlagFilter, bool FlagPlanned, bool FlagTentative, bool FlagConfirmed, bool FlagPlanner, out System.Xml.XmlNode xmlDailyCalendarDoc) {
            EpicorLibrary.HelperService.GetResourceDailyCalendarRequest inValue = new EpicorLibrary.HelperService.GetResourceDailyCalendarRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.xmlResourceListDoc = xmlResourceListDoc;
            inValue.beginDate = beginDate;
            inValue.MonthsDuration = MonthsDuration;
            inValue.FlagFilter = FlagFilter;
            inValue.FlagPlanned = FlagPlanned;
            inValue.FlagTentative = FlagTentative;
            inValue.FlagConfirmed = FlagConfirmed;
            inValue.FlagPlanner = FlagPlanner;
            EpicorLibrary.HelperService.GetResourceDailyCalendarResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).GetResourceDailyCalendar(inValue);
            xmlDailyCalendarDoc = retVal.xmlDailyCalendarDoc;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.GetOrganizationUnitListForCompanyResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.GetOrganizationUnitListForCompany(EpicorLibrary.HelperService.GetOrganizationUnitListForCompanyRequest request) {
            return base.Channel.GetOrganizationUnitListForCompany(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader GetOrganizationUnitListForCompany(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string companyURN, out System.Xml.XmlNode GetOrganizationUnitListForCompanyResult) {
            EpicorLibrary.HelperService.GetOrganizationUnitListForCompanyRequest inValue = new EpicorLibrary.HelperService.GetOrganizationUnitListForCompanyRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.companyURN = companyURN;
            EpicorLibrary.HelperService.GetOrganizationUnitListForCompanyResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).GetOrganizationUnitListForCompany(inValue);
            GetOrganizationUnitListForCompanyResult = retVal.GetOrganizationUnitListForCompanyResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.GetOrganizationUnitTreeForSitePickListResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.GetOrganizationUnitTreeForSitePickList(EpicorLibrary.HelperService.GetOrganizationUnitTreeForSitePickListRequest request) {
            return base.Channel.GetOrganizationUnitTreeForSitePickList(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader GetOrganizationUnitTreeForSitePickList(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string siteURN, string pOutlineNum, out System.Xml.XmlNode GetOrganizationUnitTreeForSitePickListResult) {
            EpicorLibrary.HelperService.GetOrganizationUnitTreeForSitePickListRequest inValue = new EpicorLibrary.HelperService.GetOrganizationUnitTreeForSitePickListRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.siteURN = siteURN;
            inValue.pOutlineNum = pOutlineNum;
            EpicorLibrary.HelperService.GetOrganizationUnitTreeForSitePickListResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).GetOrganizationUnitTreeForSitePickList(inValue);
            GetOrganizationUnitTreeForSitePickListResult = retVal.GetOrganizationUnitTreeForSitePickListResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.GetProjectForEmployeeResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.GetProjectForEmployee(EpicorLibrary.HelperService.GetProjectForEmployeeRequest request) {
            return base.Channel.GetProjectForEmployee(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader GetProjectForEmployee(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string resourceID, int treeType, out System.Xml.XmlNode GetProjectForEmployeeResult) {
            EpicorLibrary.HelperService.GetProjectForEmployeeRequest inValue = new EpicorLibrary.HelperService.GetProjectForEmployeeRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.resourceID = resourceID;
            inValue.treeType = treeType;
            EpicorLibrary.HelperService.GetProjectForEmployeeResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).GetProjectForEmployee(inValue);
            GetProjectForEmployeeResult = retVal.GetProjectForEmployeeResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.GetProjectEmployeeForPDAResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.GetProjectEmployeeForPDA(EpicorLibrary.HelperService.GetProjectEmployeeForPDARequest request) {
            return base.Channel.GetProjectEmployeeForPDA(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader GetProjectEmployeeForPDA(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string resourceID, out System.Xml.XmlNode GetProjectEmployeeForPDAResult) {
            EpicorLibrary.HelperService.GetProjectEmployeeForPDARequest inValue = new EpicorLibrary.HelperService.GetProjectEmployeeForPDARequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.resourceID = resourceID;
            EpicorLibrary.HelperService.GetProjectEmployeeForPDAResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).GetProjectEmployeeForPDA(inValue);
            GetProjectEmployeeForPDAResult = retVal.GetProjectEmployeeForPDAResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.GetProjectPlannerDataForTaskResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.GetProjectPlannerDataForTask(EpicorLibrary.HelperService.GetProjectPlannerDataForTaskRequest request) {
            return base.Channel.GetProjectPlannerDataForTask(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader GetProjectPlannerDataForTask(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string projectCode, int revisionNum, int taskUID, string dailyWeeklyCode, System.DateTime requestedStartDate, string projectCurrencyCode, string includeChildren, string plannedItemTypeCode, string outlineNum, string scrollForwardBackward, out System.Xml.XmlNode GetProjectPlannerDataForTaskResult) {
            EpicorLibrary.HelperService.GetProjectPlannerDataForTaskRequest inValue = new EpicorLibrary.HelperService.GetProjectPlannerDataForTaskRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.projectCode = projectCode;
            inValue.revisionNum = revisionNum;
            inValue.taskUID = taskUID;
            inValue.dailyWeeklyCode = dailyWeeklyCode;
            inValue.requestedStartDate = requestedStartDate;
            inValue.projectCurrencyCode = projectCurrencyCode;
            inValue.includeChildren = includeChildren;
            inValue.plannedItemTypeCode = plannedItemTypeCode;
            inValue.outlineNum = outlineNum;
            inValue.scrollForwardBackward = scrollForwardBackward;
            EpicorLibrary.HelperService.GetProjectPlannerDataForTaskResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).GetProjectPlannerDataForTask(inValue);
            GetProjectPlannerDataForTaskResult = retVal.GetProjectPlannerDataForTaskResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.UpdateResourcePlannerResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.UpdateResourcePlanner(EpicorLibrary.HelperService.UpdateResourcePlannerRequest request) {
            return base.Channel.UpdateResourcePlanner(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader UpdateResourcePlanner(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string projectCode, int revisionNum, string projectDoc, string taskList, string xmlProjectPlannerEntryDoc, string xmlResourcesInfo, int recurringHoursFlag, int ReqApprovalFlag, System.DateTime dlgRecHrsStartDate, System.DateTime dlgRecHrsEndDate, out string UpdateResourcePlannerResult) {
            EpicorLibrary.HelperService.UpdateResourcePlannerRequest inValue = new EpicorLibrary.HelperService.UpdateResourcePlannerRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.projectCode = projectCode;
            inValue.revisionNum = revisionNum;
            inValue.projectDoc = projectDoc;
            inValue.taskList = taskList;
            inValue.xmlProjectPlannerEntryDoc = xmlProjectPlannerEntryDoc;
            inValue.xmlResourcesInfo = xmlResourcesInfo;
            inValue.recurringHoursFlag = recurringHoursFlag;
            inValue.ReqApprovalFlag = ReqApprovalFlag;
            inValue.dlgRecHrsStartDate = dlgRecHrsStartDate;
            inValue.dlgRecHrsEndDate = dlgRecHrsEndDate;
            EpicorLibrary.HelperService.UpdateResourcePlannerResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).UpdateResourcePlanner(inValue);
            UpdateResourcePlannerResult = retVal.UpdateResourcePlannerResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.ChangeProjectPlannerEntryViewResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.ChangeProjectPlannerEntryView(EpicorLibrary.HelperService.ChangeProjectPlannerEntryViewRequest request) {
            return base.Channel.ChangeProjectPlannerEntryView(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader ChangeProjectPlannerEntryView(
                    EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, 
                    string projectCode, 
                    int revisionNum, 
                    int taskUID, 
                    string newDailyWeeklyCode, 
                    System.DateTime startDate, 
                    string scrollForwardBackward, 
                    string projectCurrencyCode, 
                    string xmlProjectPlannerEntryDoc, 
                    string includeChildren, 
                    string plannedItemTypeCode, 
                    string outlineNum, 
                    string xmlResourcesInfo, 
                    int ReqApprovalFlag, 
                    out System.Xml.XmlNode ChangeProjectPlannerEntryViewResult, 
                    out string excessWarningStr) {
            EpicorLibrary.HelperService.ChangeProjectPlannerEntryViewRequest inValue = new EpicorLibrary.HelperService.ChangeProjectPlannerEntryViewRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.projectCode = projectCode;
            inValue.revisionNum = revisionNum;
            inValue.taskUID = taskUID;
            inValue.newDailyWeeklyCode = newDailyWeeklyCode;
            inValue.startDate = startDate;
            inValue.scrollForwardBackward = scrollForwardBackward;
            inValue.projectCurrencyCode = projectCurrencyCode;
            inValue.xmlProjectPlannerEntryDoc = xmlProjectPlannerEntryDoc;
            inValue.includeChildren = includeChildren;
            inValue.plannedItemTypeCode = plannedItemTypeCode;
            inValue.outlineNum = outlineNum;
            inValue.xmlResourcesInfo = xmlResourcesInfo;
            inValue.ReqApprovalFlag = ReqApprovalFlag;
            EpicorLibrary.HelperService.ChangeProjectPlannerEntryViewResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).ChangeProjectPlannerEntryView(inValue);
            ChangeProjectPlannerEntryViewResult = retVal.ChangeProjectPlannerEntryViewResult;
            excessWarningStr = retVal.excessWarningStr;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.GetProjectPlannerCostRevenueResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.GetProjectPlannerCostRevenue(EpicorLibrary.HelperService.GetProjectPlannerCostRevenueRequest request) {
            return base.Channel.GetProjectPlannerCostRevenue(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader GetProjectPlannerCostRevenue(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string projectCode, int revisionNum, int taskUID, string projectCurrencyCode, out System.Xml.XmlNode GetProjectPlannerCostRevenueResult) {
            EpicorLibrary.HelperService.GetProjectPlannerCostRevenueRequest inValue = new EpicorLibrary.HelperService.GetProjectPlannerCostRevenueRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.projectCode = projectCode;
            inValue.revisionNum = revisionNum;
            inValue.taskUID = taskUID;
            inValue.projectCurrencyCode = projectCurrencyCode;
            EpicorLibrary.HelperService.GetProjectPlannerCostRevenueResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).GetProjectPlannerCostRevenue(inValue);
            GetProjectPlannerCostRevenueResult = retVal.GetProjectPlannerCostRevenueResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.UpdateCreditFormResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.UpdateCreditForm(EpicorLibrary.HelperService.UpdateCreditFormRequest request) {
            return base.Channel.UpdateCreditForm(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader UpdateCreditForm(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string CreditDoc, string NewFlag, string taxDoc, string GetTimeEntryByID, string GetExpenseEntryByID, string materialDetailShipDoc, string billScheduleDoc) {
            EpicorLibrary.HelperService.UpdateCreditFormRequest inValue = new EpicorLibrary.HelperService.UpdateCreditFormRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.CreditDoc = CreditDoc;
            inValue.NewFlag = NewFlag;
            inValue.taxDoc = taxDoc;
            inValue.GetTimeEntryByID = GetTimeEntryByID;
            inValue.GetExpenseEntryByID = GetExpenseEntryByID;
            inValue.materialDetailShipDoc = materialDetailShipDoc;
            inValue.billScheduleDoc = billScheduleDoc;
            EpicorLibrary.HelperService.UpdateCreditFormResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).UpdateCreditForm(inValue);
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.UpdateBillingFormResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.UpdateBillingForm(EpicorLibrary.HelperService.UpdateBillingFormRequest request) {
            return base.Channel.UpdateBillingForm(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader UpdateBillingForm(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string BillingDoc, string TaxDoc, string GetTimeEntryByID, string GetExpenseEntryByID, string MaterialDetailShipDoc, string BillScheduleDoc1, string BillScheduleDoc2, out System.Xml.XmlNode xmlExceedBillingCap) {
            EpicorLibrary.HelperService.UpdateBillingFormRequest inValue = new EpicorLibrary.HelperService.UpdateBillingFormRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.BillingDoc = BillingDoc;
            inValue.TaxDoc = TaxDoc;
            inValue.GetTimeEntryByID = GetTimeEntryByID;
            inValue.GetExpenseEntryByID = GetExpenseEntryByID;
            inValue.MaterialDetailShipDoc = MaterialDetailShipDoc;
            inValue.BillScheduleDoc1 = BillScheduleDoc1;
            inValue.BillScheduleDoc2 = BillScheduleDoc2;
            EpicorLibrary.HelperService.UpdateBillingFormResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).UpdateBillingForm(inValue);
            xmlExceedBillingCap = retVal.xmlExceedBillingCap;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.RoundValueResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.RoundValue(EpicorLibrary.HelperService.RoundValueRequest request) {
            return base.Channel.RoundValue(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader RoundValue(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, decimal amount, string roundType, string currency, out decimal RoundValueResult) {
            EpicorLibrary.HelperService.RoundValueRequest inValue = new EpicorLibrary.HelperService.RoundValueRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.amount = amount;
            inValue.roundType = roundType;
            inValue.currency = currency;
            EpicorLibrary.HelperService.RoundValueResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).RoundValue(inValue);
            RoundValueResult = retVal.RoundValueResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.GetProjectTeamResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.GetProjectTeam(EpicorLibrary.HelperService.GetProjectTeamRequest request) {
            return base.Channel.GetProjectTeam(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader GetProjectTeam(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string ProjectCode, string RevisionNum, out System.Xml.XmlNode GetProjectTeamResult) {
            EpicorLibrary.HelperService.GetProjectTeamRequest inValue = new EpicorLibrary.HelperService.GetProjectTeamRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCode = ProjectCode;
            inValue.RevisionNum = RevisionNum;
            EpicorLibrary.HelperService.GetProjectTeamResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).GetProjectTeam(inValue);
            GetProjectTeamResult = retVal.GetProjectTeamResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.GetTeamListForSiteResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.GetTeamListForSite(EpicorLibrary.HelperService.GetTeamListForSiteRequest request) {
            return base.Channel.GetTeamListForSite(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader GetTeamListForSite(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string siteURN, out System.Xml.XmlNode GetTeamListForSiteResult) {
            EpicorLibrary.HelperService.GetTeamListForSiteRequest inValue = new EpicorLibrary.HelperService.GetTeamListForSiteRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.siteURN = siteURN;
            EpicorLibrary.HelperService.GetTeamListForSiteResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).GetTeamListForSite(inValue);
            GetTeamListForSiteResult = retVal.GetTeamListForSiteResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.ClientHelperGetProjectTreeResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.ClientHelperGetProjectTree(EpicorLibrary.HelperService.ClientHelperGetProjectTreeRequest request) {
            return base.Channel.ClientHelperGetProjectTree(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader ClientHelperGetProjectTree(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string ProjectTreeCriteriaDoc, out System.Xml.XmlNode ClientHelperGetProjectTreeResult) {
            EpicorLibrary.HelperService.ClientHelperGetProjectTreeRequest inValue = new EpicorLibrary.HelperService.ClientHelperGetProjectTreeRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectTreeCriteriaDoc = ProjectTreeCriteriaDoc;
            EpicorLibrary.HelperService.ClientHelperGetProjectTreeResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).ClientHelperGetProjectTree(inValue);
            ClientHelperGetProjectTreeResult = retVal.ClientHelperGetProjectTreeResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.GetNavigatorResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.GetNavigator(EpicorLibrary.HelperService.GetNavigatorRequest request) {
            return base.Channel.GetNavigator(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader GetNavigator(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string criteriaDoc, out System.Xml.XmlNode GetNavigatorResult) {
            EpicorLibrary.HelperService.GetNavigatorRequest inValue = new EpicorLibrary.HelperService.GetNavigatorRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.criteriaDoc = criteriaDoc;
            EpicorLibrary.HelperService.GetNavigatorResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).GetNavigator(inValue);
            GetNavigatorResult = retVal.GetNavigatorResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.ApproveAndEngageProjectResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.ApproveAndEngageProject(EpicorLibrary.HelperService.ApproveAndEngageProjectRequest request) {
            return base.Channel.ApproveAndEngageProject(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader ApproveAndEngageProject(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string projectCode, int revisionNum, out bool ApproveAndEngageProjectResult) {
            EpicorLibrary.HelperService.ApproveAndEngageProjectRequest inValue = new EpicorLibrary.HelperService.ApproveAndEngageProjectRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.projectCode = projectCode;
            inValue.revisionNum = revisionNum;
            EpicorLibrary.HelperService.ApproveAndEngageProjectResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).ApproveAndEngageProject(inValue);
            ApproveAndEngageProjectResult = retVal.ApproveAndEngageProjectResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.UpdateRecurringHoursResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.UpdateRecurringHours(EpicorLibrary.HelperService.UpdateRecurringHoursRequest request) {
            return base.Channel.UpdateRecurringHours(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader UpdateRecurringHours(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string xmlCreateCriteria, string xmlDatesAndHours, out string UpdateRecurringHoursResult) {
            EpicorLibrary.HelperService.UpdateRecurringHoursRequest inValue = new EpicorLibrary.HelperService.UpdateRecurringHoursRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.xmlCreateCriteria = xmlCreateCriteria;
            inValue.xmlDatesAndHours = xmlDatesAndHours;
            EpicorLibrary.HelperService.UpdateRecurringHoursResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).UpdateRecurringHours(inValue);
            UpdateRecurringHoursResult = retVal.UpdateRecurringHoursResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.UpdateRecurringExpensesResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.UpdateRecurringExpenses(EpicorLibrary.HelperService.UpdateRecurringExpensesRequest request) {
            return base.Channel.UpdateRecurringExpenses(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader UpdateRecurringExpenses(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string xmlCreateCriteria, string xmlDatesAndAmount, out bool UpdateRecurringExpensesResult) {
            EpicorLibrary.HelperService.UpdateRecurringExpensesRequest inValue = new EpicorLibrary.HelperService.UpdateRecurringExpensesRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.xmlCreateCriteria = xmlCreateCriteria;
            inValue.xmlDatesAndAmount = xmlDatesAndAmount;
            EpicorLibrary.HelperService.UpdateRecurringExpensesResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).UpdateRecurringExpenses(inValue);
            UpdateRecurringExpensesResult = retVal.UpdateRecurringExpensesResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.HelperService.GetArtifactDocumentListResponse EpicorLibrary.HelperService.PSAClientHelperWSSoap.GetArtifactDocumentList(EpicorLibrary.HelperService.GetArtifactDocumentListRequest request) {
            return base.Channel.GetArtifactDocumentList(request);
        }
        
        public EpicorLibrary.HelperService.ICEResponseHeader GetArtifactDocumentList(EpicorLibrary.HelperService.ICERequestHeader ICERequestHeader, string sArtifact, out System.Xml.XmlNode GetArtifactDocumentListResult) {
            EpicorLibrary.HelperService.GetArtifactDocumentListRequest inValue = new EpicorLibrary.HelperService.GetArtifactDocumentListRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.sArtifact = sArtifact;
            EpicorLibrary.HelperService.GetArtifactDocumentListResponse retVal = ((EpicorLibrary.HelperService.PSAClientHelperWSSoap)(this)).GetArtifactDocumentList(inValue);
            GetArtifactDocumentListResult = retVal.GetArtifactDocumentListResult;
            return retVal.ICEResponseHeader;
        }
    }
}
