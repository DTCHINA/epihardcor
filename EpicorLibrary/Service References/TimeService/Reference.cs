//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpicorLibrary.TimeService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://epicor.com/webservices/", ConfigurationName="TimeService.TimeWSSoap")]
    public interface TimeWSSoap {
        
        // CODEGEN: Generating message contract since message GetInternalActivitiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetInternalActivities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetInternalActivitiesResponse GetInternalActivities(EpicorLibrary.TimeService.GetInternalActivitiesRequest request);
        
        // CODEGEN: Generating message contract since message UpdateActivitiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateActivities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateActivitiesResponse UpdateActivities(EpicorLibrary.TimeService.UpdateActivitiesRequest request);
        
        // CODEGEN: Generating message contract since message VerifyActivityDeleteRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/VerifyActivityDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.VerifyActivityDeleteResponse VerifyActivityDelete(EpicorLibrary.TimeService.VerifyActivityDeleteRequest request);
        
        // CODEGEN: Generating message contract since message VerifyActivityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/VerifyActivity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.VerifyActivityResponse VerifyActivity(EpicorLibrary.TimeService.VerifyActivityRequest request);
        
        // CODEGEN: Generating message contract since message VerifyTimeForProjectTaskRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/VerifyTimeForProjectTask", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.VerifyTimeForProjectTaskResponse VerifyTimeForProjectTask(EpicorLibrary.TimeService.VerifyTimeForProjectTaskRequest request);
        
        // CODEGEN: Generating message contract since message VerifyTimeForProjectResourceRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/VerifyTimeForProjectResource", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.VerifyTimeForProjectResourceResponse VerifyTimeForProjectResource(EpicorLibrary.TimeService.VerifyTimeForProjectResourceRequest request);
        
        // CODEGEN: Generating message contract since message VerifyNonApprovedTimeForActivityCodeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/VerifyNonApprovedTimeForActivityCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.VerifyNonApprovedTimeForActivityCodeResponse VerifyNonApprovedTimeForActivityCode(EpicorLibrary.TimeService.VerifyNonApprovedTimeForActivityCodeRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeEntryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeEntry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeEntryResponse GetTimeEntry(EpicorLibrary.TimeService.GetTimeEntryRequest request);
        
        // CODEGEN: Generating message contract since message GetAllTimeEntriesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetAllTimeEntries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetAllTimeEntriesResponse GetAllTimeEntries(EpicorLibrary.TimeService.GetAllTimeEntriesRequest request);
        
        // CODEGEN: Generating message contract since message UpdateTimeListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTimeList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTimeListResponse UpdateTimeList(EpicorLibrary.TimeService.UpdateTimeListRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeEntryByIDRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeEntryByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeEntryByIDResponse GetTimeEntryByID(EpicorLibrary.TimeService.GetTimeEntryByIDRequest request);
        
        // CODEGEN: Generating message contract since message UpdateTimeEntryByIDRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTimeEntryByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTimeEntryByIDResponse UpdateTimeEntryByID(EpicorLibrary.TimeService.UpdateTimeEntryByIDRequest request);
        
        // CODEGEN: Generating message contract since message UpdateTimeBatchEntriesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTimeBatchEntries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTimeBatchEntriesResponse UpdateTimeBatchEntries(EpicorLibrary.TimeService.UpdateTimeBatchEntriesRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeBatchHeaderRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeBatchHeader", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeBatchHeaderResponse GetTimeBatchHeader(EpicorLibrary.TimeService.GetTimeBatchHeaderRequest request);
        
        // CODEGEN: Generating message contract since message GetNextTimeBatchSeqIDRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetNextTimeBatchSeqID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetNextTimeBatchSeqIDResponse GetNextTimeBatchSeqID(EpicorLibrary.TimeService.GetNextTimeBatchSeqIDRequest request);
        
        // CODEGEN: Generating message contract since message VerifyTimeBatchRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/VerifyTimeBatch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.VerifyTimeBatchResponse VerifyTimeBatch(EpicorLibrary.TimeService.VerifyTimeBatchRequest request);
        
        // CODEGEN: Generating message contract since message DeleteTimeBatchRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/DeleteTimeBatch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.DeleteTimeBatchResponse DeleteTimeBatch(EpicorLibrary.TimeService.DeleteTimeBatchRequest request);
        
        // CODEGEN: Generating message contract since message GetAllTimeBatchEntriesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetAllTimeBatchEntries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetAllTimeBatchEntriesResponse GetAllTimeBatchEntries(EpicorLibrary.TimeService.GetAllTimeBatchEntriesRequest request);
        
        // CODEGEN: Generating message contract since message GetTaskETCRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTaskETC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTaskETCResponse GetTaskETC(EpicorLibrary.TimeService.GetTaskETCRequest request);
        
        // CODEGEN: Generating message contract since message UpdateTaskETCRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTaskETC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTaskETCResponse UpdateTaskETC(EpicorLibrary.TimeService.UpdateTaskETCRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeActualAndETCForProjectTasksRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeActualAndETCForProjectTasks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeActualAndETCForProjectTasksResponse GetTimeActualAndETCForProjectTasks(EpicorLibrary.TimeService.GetTimeActualAndETCForProjectTasksRequest request);
        
        // CODEGEN: Generating message contract since message GetTaskETCForProjectRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTaskETCForProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTaskETCForProjectResponse GetTaskETCForProject(EpicorLibrary.TimeService.GetTaskETCForProjectRequest request);
        
        // CODEGEN: Generating message contract since message GetActualTimeCostAndChargeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActualTimeCostAndCharge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActualTimeCostAndChargeResponse GetActualTimeCostAndCharge(EpicorLibrary.TimeService.GetActualTimeCostAndChargeRequest request);
        
        // CODEGEN: Generating message contract since message GetApprovalsByResourceTimeTreeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetApprovalsByResourceTimeTree", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetApprovalsByResourceTimeTreeResponse GetApprovalsByResourceTimeTree(EpicorLibrary.TimeService.GetApprovalsByResourceTimeTreeRequest request);
        
        // CODEGEN: Generating message contract since message GetApprovalsByProjectTimeTreeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetApprovalsByProjectTimeTree", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetApprovalsByProjectTimeTreeResponse GetApprovalsByProjectTimeTree(EpicorLibrary.TimeService.GetApprovalsByProjectTimeTreeRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeHomeCostAndChargeForProjectsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeHomeCostAndChargeForProjects", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeHomeCostAndChargeForProjectsResponse GetTimeHomeCostAndChargeForProjects(EpicorLibrary.TimeService.GetTimeHomeCostAndChargeForProjectsRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeOperCostAndChargeForProjectsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeOperCostAndChargeForProjects", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeOperCostAndChargeForProjectsResponse GetTimeOperCostAndChargeForProjects(EpicorLibrary.TimeService.GetTimeOperCostAndChargeForProjectsRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeETCResourceApprovedHoursRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeETCResourceApprovedHours", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeETCResourceApprovedHoursResponse GetTimeETCResourceApprovedHours(EpicorLibrary.TimeService.GetTimeETCResourceApprovedHoursRequest request);
        
        // CODEGEN: Generating message contract since message GetActualTimeForProjectsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActualTimeForProjects", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActualTimeForProjectsResponse GetActualTimeForProjects(EpicorLibrary.TimeService.GetActualTimeForProjectsRequest request);
        
        // CODEGEN: Generating message contract since message VerifyActiveInternalActivityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/VerifyActiveInternalActivity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.VerifyActiveInternalActivityResponse VerifyActiveInternalActivity(EpicorLibrary.TimeService.VerifyActiveInternalActivityRequest request);
        
        // CODEGEN: Generating message contract since message VerifyActiveExternalActivityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/VerifyActiveExternalActivity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.VerifyActiveExternalActivityResponse VerifyActiveExternalActivity(EpicorLibrary.TimeService.VerifyActiveExternalActivityRequest request);
        
        // CODEGEN: Generating message contract since message VerifyActivityStatusRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/VerifyActivityStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.VerifyActivityStatusResponse VerifyActivityStatus(EpicorLibrary.TimeService.VerifyActivityStatusRequest request);
        
        // CODEGEN: Generating message contract since message GetSiteExternalActivitiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetSiteExternalActivities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetSiteExternalActivitiesResponse GetSiteExternalActivities(EpicorLibrary.TimeService.GetSiteExternalActivitiesRequest request);
        
        // CODEGEN: Generating message contract since message SearchTimeTransactionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/SearchTimeTransactions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.SearchTimeTransactionsResponse SearchTimeTransactions(EpicorLibrary.TimeService.SearchTimeTransactionsRequest request);
        
        // CODEGEN: Generating message contract since message UpdateTimeTransactionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTimeTransactions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTimeTransactionsResponse UpdateTimeTransactions(EpicorLibrary.TimeService.UpdateTimeTransactionsRequest request);
        
        // CODEGEN: Generating message contract since message UpdateTimeReversalsForSiteRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTimeReversalsForSite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTimeReversalsForSiteResponse UpdateTimeReversalsForSite(EpicorLibrary.TimeService.UpdateTimeReversalsForSiteRequest request);
        
        // CODEGEN: Generating message contract since message UpdateTimeTransfersForSiteRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTimeTransfersForSite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTimeTransfersForSiteResponse UpdateTimeTransfersForSite(EpicorLibrary.TimeService.UpdateTimeTransfersForSiteRequest request);
        
        // CODEGEN: Generating message contract since message CalculateTotalsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/CalculateTotals", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.CalculateTotalsResponse CalculateTotals(EpicorLibrary.TimeService.CalculateTotalsRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeEntryIncludingMCByIDRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeEntryIncludingMCByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeEntryIncludingMCByIDResponse GetTimeEntryIncludingMCByID(EpicorLibrary.TimeService.GetTimeEntryIncludingMCByIDRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectActualRollupStandardHoursRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetProjectActualRollupStandardHours", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetProjectActualRollupStandardHoursResponse GetProjectActualRollupStandardHours(EpicorLibrary.TimeService.GetProjectActualRollupStandardHoursRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectActualRollupOvertimeHoursRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetProjectActualRollupOvertimeHours", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetProjectActualRollupOvertimeHoursResponse GetProjectActualRollupOvertimeHours(EpicorLibrary.TimeService.GetProjectActualRollupOvertimeHoursRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeEntryOnLoadDataRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeEntryOnLoadData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeEntryOnLoadDataResponse GetTimeEntryOnLoadData(EpicorLibrary.TimeService.GetTimeEntryOnLoadDataRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeOnLoadDataRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeOnLoadData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeOnLoadDataResponse GetTimeOnLoadData(EpicorLibrary.TimeService.GetTimeOnLoadDataRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeEntryOnLoadDataDisconnectedRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeEntryOnLoadDataDisconnected", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeEntryOnLoadDataDisconnectedResponse GetTimeEntryOnLoadDataDisconnected(EpicorLibrary.TimeService.GetTimeEntryOnLoadDataDisconnectedRequest request);
        
        // CODEGEN: Generating message contract since message GetActivitiesFromActivityGroupsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActivitiesFromActivityGroups", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActivitiesFromActivityGroupsResponse GetActivitiesFromActivityGroups(EpicorLibrary.TimeService.GetActivitiesFromActivityGroupsRequest request);
        
        // CODEGEN: Generating message contract since message GetActivitiesForTheWeekRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActivitiesForTheWeek", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActivitiesForTheWeekResponse GetActivitiesForTheWeek(EpicorLibrary.TimeService.GetActivitiesForTheWeekRequest request);
        
        // CODEGEN: Generating message contract since message FillEmptyActivitiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/FillEmptyActivities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.FillEmptyActivitiesResponse FillEmptyActivities(EpicorLibrary.TimeService.FillEmptyActivitiesRequest request);
        
        // CODEGEN: Generating message contract since message GetActivitiesForTheDayRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActivitiesForTheDay", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActivitiesForTheDayResponse GetActivitiesForTheDay(EpicorLibrary.TimeService.GetActivitiesForTheDayRequest request);
        
        // CODEGEN: Generating message contract since message GetResourceCalendarTimeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetResourceCalendarTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetResourceCalendarTimeResponse GetResourceCalendarTime(EpicorLibrary.TimeService.GetResourceCalendarTimeRequest request);
        
        // CODEGEN: Generating message contract since message GetDirectRecognitionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetDirectRecognition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetDirectRecognitionResponse GetDirectRecognition(EpicorLibrary.TimeService.GetDirectRecognitionRequest request);
        
        // CODEGEN: Generating message contract since message GetDirectRecognitionForProjectRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetDirectRecognitionForProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetDirectRecognitionForProjectResponse GetDirectRecognitionForProject(EpicorLibrary.TimeService.GetDirectRecognitionForProjectRequest request);
        
        // CODEGEN: Generating message contract since message GetNonChargeableDirectRecognitionForProjectRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetNonChargeableDirectRecognitionForProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetNonChargeableDirectRecognitionForProjectResponse GetNonChargeableDirectRecognitionForProject(EpicorLibrary.TimeService.GetNonChargeableDirectRecognitionForProjectRequest request);
        
        // CODEGEN: Generating message contract since message UpdateDirectRecognitionAmtsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateDirectRecognitionAmts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateDirectRecognitionAmtsResponse UpdateDirectRecognitionAmts(EpicorLibrary.TimeService.UpdateDirectRecognitionAmtsRequest request);
        
        // CODEGEN: Generating message contract since message UpdateDirectRecognitionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateDirectRecognition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateDirectRecognitionResponse UpdateDirectRecognition(EpicorLibrary.TimeService.UpdateDirectRecognitionRequest request);
        
        // CODEGEN: Generating message contract since message GetRevRecDirectFPItemsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetRevRecDirectFPItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetRevRecDirectFPItemsResponse GetRevRecDirectFPItems(EpicorLibrary.TimeService.GetRevRecDirectFPItemsRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeSummaryReportRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeSummaryReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeSummaryReportResponse GetTimeSummaryReport(EpicorLibrary.TimeService.GetTimeSummaryReportRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeSummaryReportForCompanyRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeSummaryReportForCompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeSummaryReportForCompanyResponse GetTimeSummaryReportForCompany(EpicorLibrary.TimeService.GetTimeSummaryReportForCompanyRequest request);
        
        // CODEGEN: Generating message contract since message GetExternalTimeTypesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetExternalTimeTypes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetExternalTimeTypesResponse GetExternalTimeTypes(EpicorLibrary.TimeService.GetExternalTimeTypesRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeTypeListForSiteRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeTypeListForSite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeTypeListForSiteResponse GetTimeTypeListForSite(EpicorLibrary.TimeService.GetTimeTypeListForSiteRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeTypeListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeTypeList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeTypeListResponse GetTimeTypeList(EpicorLibrary.TimeService.GetTimeTypeListRequest request);
        
        // CODEGEN: Generating message contract since message UpdateTimeTypeListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTimeTypeList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTimeTypeListResponse UpdateTimeTypeList(EpicorLibrary.TimeService.UpdateTimeTypeListRequest request);
        
        // CODEGEN: Generating message contract since message GetUnbilledTransactionReportRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetUnbilledTransactionReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetUnbilledTransactionReportResponse GetUnbilledTransactionReport(EpicorLibrary.TimeService.GetUnbilledTransactionReportRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeSummaryForSiteURLRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeSummaryForSiteURL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeSummaryForSiteURLResponse GetTimeSummaryForSiteURL(EpicorLibrary.TimeService.GetTimeSummaryForSiteURLRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectReportTimeRevenueAndCostRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetProjectReportTimeRevenueAndCost", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetProjectReportTimeRevenueAndCostResponse GetProjectReportTimeRevenueAndCost(EpicorLibrary.TimeService.GetProjectReportTimeRevenueAndCostRequest request);
        
        // CODEGEN: Generating message contract since message ApproveAllTimeForApproverAndDateRangeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/ApproveAllTimeForApproverAndDateRange", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.ApproveAllTimeForApproverAndDateRangeResponse ApproveAllTimeForApproverAndDateRange(EpicorLibrary.TimeService.ApproveAllTimeForApproverAndDateRangeRequest request);
        
        // CODEGEN: Generating message contract since message InsertTimeAwaitingApprovalListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/InsertTimeAwaitingApprovalList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.InsertTimeAwaitingApprovalListResponse InsertTimeAwaitingApprovalList(EpicorLibrary.TimeService.InsertTimeAwaitingApprovalListRequest request);
        
        // CODEGEN: Generating message contract since message DeleteTimeRequiredApproverListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/DeleteTimeRequiredApproverList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.DeleteTimeRequiredApproverListResponse DeleteTimeRequiredApproverList(EpicorLibrary.TimeService.DeleteTimeRequiredApproverListRequest request);
        
        // CODEGEN: Generating message contract since message GetArtifactDocumentListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetArtifactDocumentList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetArtifactDocumentListResponse GetArtifactDocumentList(EpicorLibrary.TimeService.GetArtifactDocumentListRequest request);
        
        // CODEGEN: Generating message contract since message DeleteTimeAwaitingApprovalListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/DeleteTimeAwaitingApprovalList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.DeleteTimeAwaitingApprovalListResponse DeleteTimeAwaitingApprovalList(EpicorLibrary.TimeService.DeleteTimeAwaitingApprovalListRequest request);
        
        // CODEGEN: Generating message contract since message GetCalendarCodeForActivityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetCalendarCodeForActivity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetCalendarCodeForActivityResponse GetCalendarCodeForActivity(EpicorLibrary.TimeService.GetCalendarCodeForActivityRequest request);
        
        // CODEGEN: Generating message contract since message IsTimeCompletelyApprovedRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/IsTimeCompletelyApproved", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.IsTimeCompletelyApprovedResponse IsTimeCompletelyApproved(EpicorLibrary.TimeService.IsTimeCompletelyApprovedRequest request);
        
        // CODEGEN: Generating message contract since message IsSingleRequiredApproverRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/IsSingleRequiredApprover", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.IsSingleRequiredApproverResponse IsSingleRequiredApprover(EpicorLibrary.TimeService.IsSingleRequiredApproverRequest request);
        
        // CODEGEN: Generating message contract since message GetActualHoursAndCostTotalsForProjectRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActualHoursAndCostTotalsForProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActualHoursAndCostTotalsForProjectResponse GetActualHoursAndCostTotalsForProject(EpicorLibrary.TimeService.GetActualHoursAndCostTotalsForProjectRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeActualAndETCForProjectRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeActualAndETCForProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeActualAndETCForProjectResponse GetTimeActualAndETCForProject(EpicorLibrary.TimeService.GetTimeActualAndETCForProjectRequest request);
        
        // CODEGEN: Generating message contract since message GetActivityDescriptionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActivityDescription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActivityDescriptionResponse GetActivityDescription(EpicorLibrary.TimeService.GetActivityDescriptionRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeTypeDescriptionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeTypeDescription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeTypeDescriptionResponse GetTimeTypeDescription(EpicorLibrary.TimeService.GetTimeTypeDescriptionRequest request);
        
        // CODEGEN: Generating message contract since message GetActiveTimeTypeListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActiveTimeTypeList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActiveTimeTypeListResponse GetActiveTimeTypeList(EpicorLibrary.TimeService.GetActiveTimeTypeListRequest request);
        
        // CODEGEN: Generating message contract since message ValidateTimeBatchEntriesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/ValidateTimeBatchEntries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.ValidateTimeBatchEntriesResponse ValidateTimeBatchEntries(EpicorLibrary.TimeService.ValidateTimeBatchEntriesRequest request);
        
        // CODEGEN: Generating message contract since message UpdateTimeBatchEntriesAtRemoteRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTimeBatchEntriesAtRemote", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTimeBatchEntriesAtRemoteResponse UpdateTimeBatchEntriesAtRemote(EpicorLibrary.TimeService.UpdateTimeBatchEntriesAtRemoteRequest request);
        
        // CODEGEN: Generating message contract since message InterBranchExportRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/InterBranchExport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.InterBranchExportResponse InterBranchExport(EpicorLibrary.TimeService.InterBranchExportRequest request);
        
        // CODEGEN: Generating message contract since message CreateInterOrgErrorRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/CreateInterOrgError", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.CreateInterOrgErrorResponse CreateInterOrgError(EpicorLibrary.TimeService.CreateInterOrgErrorRequest request);
        
        // CODEGEN: Generating message contract since message ReserveNewTimeIDRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/ReserveNewTimeID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.ReserveNewTimeIDResponse ReserveNewTimeID(EpicorLibrary.TimeService.ReserveNewTimeIDRequest request);
        
        // CODEGEN: Generating message contract since message RemoveTimeBillingNumForCancelledBillingRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/RemoveTimeBillingNumForCancelledBilling", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.RemoveTimeBillingNumForCancelledBillingResponse RemoveTimeBillingNumForCancelledBilling(EpicorLibrary.TimeService.RemoveTimeBillingNumForCancelledBillingRequest request);
        
        // CODEGEN: Generating message contract since message GetInterOrgFlagCountForTimeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetInterOrgFlagCountForTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetInterOrgFlagCountForTimeResponse GetInterOrgFlagCountForTime(EpicorLibrary.TimeService.GetInterOrgFlagCountForTimeRequest request);
        
        // CODEGEN: Generating message contract since message GetActualTimeForProjectPortfolioRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActualTimeForProjectPortfolio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActualTimeForProjectPortfolioResponse GetActualTimeForProjectPortfolio(EpicorLibrary.TimeService.GetActualTimeForProjectPortfolioRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeSheetReportFilterDataRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeSheetReportFilterData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeSheetReportFilterDataResponse GetTimeSheetReportFilterData(EpicorLibrary.TimeService.GetTimeSheetReportFilterDataRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeSheetReportDefaultsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeSheetReportDefaults", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeSheetReportDefaultsResponse GetTimeSheetReportDefaults(EpicorLibrary.TimeService.GetTimeSheetReportDefaultsRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeSheetReportRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeSheetReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeSheetReportResponse GetTimeSheetReport(EpicorLibrary.TimeService.GetTimeSheetReportRequest request);
        
        // CODEGEN: Generating message contract since message GetPCodeListWithTimesByResourceIDsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetPCodeListWithTimesByResourceIDs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetPCodeListWithTimesByResourceIDsResponse GetPCodeListWithTimesByResourceIDs(EpicorLibrary.TimeService.GetPCodeListWithTimesByResourceIDsRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectListWithTimesByPCodesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetProjectListWithTimesByPCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetProjectListWithTimesByPCodesResponse GetProjectListWithTimesByPCodes(EpicorLibrary.TimeService.GetProjectListWithTimesByPCodesRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectListWithTimesByPCodesForProjectManagersRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetProjectListWithTimesByPCodesForProjectManagers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetProjectListWithTimesByPCodesForProjectManagersResponse GetProjectListWithTimesByPCodesForProjectManagers(EpicorLibrary.TimeService.GetProjectListWithTimesByPCodesForProjectManagersRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectListWithTimesByTimeEntryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetProjectListWithTimesByTimeEntry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetProjectListWithTimesByTimeEntryResponse GetProjectListWithTimesByTimeEntry(EpicorLibrary.TimeService.GetProjectListWithTimesByTimeEntryRequest request);
        
        // CODEGEN: Generating message contract since message GetResIDListWithTimesByTimeEntryDateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetResIDListWithTimesByTimeEntryDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetResIDListWithTimesByTimeEntryDateResponse GetResIDListWithTimesByTimeEntryDate(EpicorLibrary.TimeService.GetResIDListWithTimesByTimeEntryDateRequest request);
        
        // CODEGEN: Generating message contract since message CheckForTimeOutOfRangeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/CheckForTimeOutOfRange", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.CheckForTimeOutOfRangeResponse CheckForTimeOutOfRange(EpicorLibrary.TimeService.CheckForTimeOutOfRangeRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeDetailForTaskETCRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeDetailForTaskETC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeDetailForTaskETCResponse GetTimeDetailForTaskETC(EpicorLibrary.TimeService.GetTimeDetailForTaskETCRequest request);
        
        // CODEGEN: Generating message contract since message GetActiveActivityGroupListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActiveActivityGroupList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActiveActivityGroupListResponse GetActiveActivityGroupList(EpicorLibrary.TimeService.GetActiveActivityGroupListRequest request);
        
        // CODEGEN: Generating message contract since message GetTMTimeItemsForImmediateRecognitionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTMTimeItemsForImmediateRecognition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTMTimeItemsForImmediateRecognitionResponse GetTMTimeItemsForImmediateRecognition(EpicorLibrary.TimeService.GetTMTimeItemsForImmediateRecognitionRequest request);
        
        // CODEGEN: Generating message contract since message UpdateTimeForImmediateRecognitionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTimeForImmediateRecognition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTimeForImmediateRecognitionResponse UpdateTimeForImmediateRecognition(EpicorLibrary.TimeService.UpdateTimeForImmediateRecognitionRequest request);
        
        // CODEGEN: Generating message contract since message GetInternalTreeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetInternalTree", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetInternalTreeResponse GetInternalTree(EpicorLibrary.TimeService.GetInternalTreeRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeDetailForProjectByResourceRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeDetailForProjectByResource", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeDetailForProjectByResourceResponse GetTimeDetailForProjectByResource(EpicorLibrary.TimeService.GetTimeDetailForProjectByResourceRequest request);
        
        // CODEGEN: Generating message contract since message IsLocaleIDInUseRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/IsLocaleIDInUse", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.IsLocaleIDInUseResponse IsLocaleIDInUse(EpicorLibrary.TimeService.IsLocaleIDInUseRequest request);
        
        // CODEGEN: Generating message contract since message GetTranslationDescriptionForActivityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTranslationDescriptionForActivity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTranslationDescriptionForActivityResponse GetTranslationDescriptionForActivity(EpicorLibrary.TimeService.GetTranslationDescriptionForActivityRequest request);
        
        // CODEGEN: Generating message contract since message UpdateTranslationDescriptionForActivityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTranslationDescriptionForActivity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTranslationDescriptionForActivityResponse UpdateTranslationDescriptionForActivity(EpicorLibrary.TimeService.UpdateTranslationDescriptionForActivityRequest request);
        
        // CODEGEN: Generating message contract since message GetTranslationDescriptionForTimeTypeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTranslationDescriptionForTimeType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTranslationDescriptionForTimeTypeResponse GetTranslationDescriptionForTimeType(EpicorLibrary.TimeService.GetTranslationDescriptionForTimeTypeRequest request);
        
        // CODEGEN: Generating message contract since message UpdateTranslationDescriptionForTimeTypeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTranslationDescriptionForTimeType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTranslationDescriptionForTimeTypeResponse UpdateTranslationDescriptionForTimeType(EpicorLibrary.TimeService.UpdateTranslationDescriptionForTimeTypeRequest request);
        
        // CODEGEN: Generating message contract since message GetActivityGroupListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActivityGroupList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActivityGroupListResponse GetActivityGroupList(EpicorLibrary.TimeService.GetActivityGroupListRequest request);
        
        // CODEGEN: Generating message contract since message GetActivityForActualsEntryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActivityForActualsEntry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActivityForActualsEntryResponse GetActivityForActualsEntry(EpicorLibrary.TimeService.GetActivityForActualsEntryRequest request);
        
        // CODEGEN: Generating message contract since message GetActivityListForActualsEntryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActivityListForActualsEntry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActivityListForActualsEntryResponse GetActivityListForActualsEntry(EpicorLibrary.TimeService.GetActivityListForActualsEntryRequest request);
        
        // CODEGEN: Generating message contract since message UpdateUnassignedFlagForResourceTimeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateUnassignedFlagForResourceTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateUnassignedFlagForResourceTimeResponse UpdateUnassignedFlagForResourceTime(EpicorLibrary.TimeService.UpdateUnassignedFlagForResourceTimeRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeDetailForTransferReversalRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeDetailForTransferReversal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeDetailForTransferReversalResponse GetTimeDetailForTransferReversal(EpicorLibrary.TimeService.GetTimeDetailForTransferReversalRequest request);
        
        // CODEGEN: Generating message contract since message GetActivityListForDisconnectedRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActivityListForDisconnected", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActivityListForDisconnectedResponse GetActivityListForDisconnected(EpicorLibrary.TimeService.GetActivityListForDisconnectedRequest request);
        
        // CODEGEN: Generating message contract since message UpdateTimeEntryTransactionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTimeEntryTransactions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTimeEntryTransactionsResponse UpdateTimeEntryTransactions(EpicorLibrary.TimeService.UpdateTimeEntryTransactionsRequest request);
        
        // CODEGEN: Generating message contract since message VerifyTimeForProjectTaskResourceRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/VerifyTimeForProjectTaskResource", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.VerifyTimeForProjectTaskResourceResponse VerifyTimeForProjectTaskResource(EpicorLibrary.TimeService.VerifyTimeForProjectTaskResourceRequest request);
        
        // CODEGEN: Generating message contract since message GetActualTimeForOpportunityProjectRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActualTimeForOpportunityProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActualTimeForOpportunityProjectResponse GetActualTimeForOpportunityProject(EpicorLibrary.TimeService.GetActualTimeForOpportunityProjectRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeApprovalDateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeApprovalDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeApprovalDateResponse GetTimeApprovalDate(EpicorLibrary.TimeService.GetTimeApprovalDateRequest request);
        
        // CODEGEN: Generating message contract since message RecognizeAndFinalizeApprovedTimeForSiteRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/RecognizeAndFinalizeApprovedTimeForSite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.RecognizeAndFinalizeApprovedTimeForSiteResponse RecognizeAndFinalizeApprovedTimeForSite(EpicorLibrary.TimeService.RecognizeAndFinalizeApprovedTimeForSiteRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeTypeMaskingValuesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeTypeMaskingValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeTypeMaskingValuesResponse GetTimeTypeMaskingValues(EpicorLibrary.TimeService.GetTimeTypeMaskingValuesRequest request);
        
        // CODEGEN: Generating message contract since message GetWorkHourListForResourceRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetWorkHourListForResource", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetWorkHourListForResourceResponse GetWorkHourListForResource(EpicorLibrary.TimeService.GetWorkHourListForResourceRequest request);
        
        // CODEGEN: Generating message contract since message GetActivitiesForResourceInRangeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActivitiesForResourceInRange", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActivitiesForResourceInRangeResponse GetActivitiesForResourceInRange(EpicorLibrary.TimeService.GetActivitiesForResourceInRangeRequest request);
        
        // CODEGEN: Generating message contract since message ValidateActivitiesForResourceRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/ValidateActivitiesForResource", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.ValidateActivitiesForResourceResponse ValidateActivitiesForResource(EpicorLibrary.TimeService.ValidateActivitiesForResourceRequest request);
        
        // CODEGEN: Generating message contract since message GetInternalTreeForDisconnectedRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetInternalTreeForDisconnected", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetInternalTreeForDisconnectedResponse GetInternalTreeForDisconnected(EpicorLibrary.TimeService.GetInternalTreeForDisconnectedRequest request);
        
        // CODEGEN: Generating message contract since message GetActivityListForDisconnectedForActualsEntryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActivityListForDisconnectedForActualsEntry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActivityListForDisconnectedForActualsEntryResponse GetActivityListForDisconnectedForActualsEntry(EpicorLibrary.TimeService.GetActivityListForDisconnectedForActualsEntryRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectCodesForPMForTimeReportRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetProjectCodesForPMForTimeReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetProjectCodesForPMForTimeReportResponse GetProjectCodesForPMForTimeReport(EpicorLibrary.TimeService.GetProjectCodesForPMForTimeReportRequest request);
        
        // CODEGEN: Generating message contract since message UpdateTimeAndTaskETCForTimeEntryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTimeAndTaskETCForTimeEntry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTimeAndTaskETCForTimeEntryResponse UpdateTimeAndTaskETCForTimeEntry(EpicorLibrary.TimeService.UpdateTimeAndTaskETCForTimeEntryRequest request);
        
        // CODEGEN: Generating message contract since message GetInvalidTimeTransactionForRecallRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetInvalidTimeTransactionForRecall", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetInvalidTimeTransactionForRecallResponse GetInvalidTimeTransactionForRecall(EpicorLibrary.TimeService.GetInvalidTimeTransactionForRecallRequest request);
        
        // CODEGEN: Generating message contract since message GetPartialTransferReverseAmountsForTimeIDRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetPartialTransferReverseAmountsForTimeID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetPartialTransferReverseAmountsForTimeIDResponse GetPartialTransferReverseAmountsForTimeID(EpicorLibrary.TimeService.GetPartialTransferReverseAmountsForTimeIDRequest request);
        
        // CODEGEN: Generating message contract since message UpdateTimeAndTaskETCForBatchTimeEntryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTimeAndTaskETCForBatchTimeEntry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTimeAndTaskETCForBatchTimeEntryResponse UpdateTimeAndTaskETCForBatchTimeEntry(EpicorLibrary.TimeService.UpdateTimeAndTaskETCForBatchTimeEntryRequest request);
        
        // CODEGEN: Generating message contract since message UpdateTimeEntryForICE3Request has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTimeEntryForICE3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTimeEntryForICE3Response UpdateTimeEntryForICE3(EpicorLibrary.TimeService.UpdateTimeEntryForICE3Request request);
        
        // CODEGEN: Generating message contract since message UpdateTimeDetailForICE3Request has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTimeDetailForICE3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTimeDetailForICE3Response UpdateTimeDetailForICE3(EpicorLibrary.TimeService.UpdateTimeDetailForICE3Request request);
        
        // CODEGEN: Generating message contract since message ApproveAllTimeForICE3Request has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/ApproveAllTimeForICE3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.ApproveAllTimeForICE3Response ApproveAllTimeForICE3(EpicorLibrary.TimeService.ApproveAllTimeForICE3Request request);
        
        // CODEGEN: Generating message contract since message GetTimeEntryByIDsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeEntryByIDs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeEntryByIDsResponse GetTimeEntryByIDs(EpicorLibrary.TimeService.GetTimeEntryByIDsRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeDetailRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeDetailResponse GetTimeDetail(EpicorLibrary.TimeService.GetTimeDetailRequest request);
        
        // CODEGEN: Generating message contract since message UpdateTimeDetailRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTimeDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTimeDetailResponse UpdateTimeDetail(EpicorLibrary.TimeService.UpdateTimeDetailRequest request);
        
        // CODEGEN: Generating message contract since message UpdatePreviewTimeDetailRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdatePreviewTimeDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdatePreviewTimeDetailResponse UpdatePreviewTimeDetail(EpicorLibrary.TimeService.UpdatePreviewTimeDetailRequest request);
        
        // CODEGEN: Generating message contract since message GetNumOfApprovesForTimeIDRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetNumOfApprovesForTimeID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetNumOfApprovesForTimeIDResponse GetNumOfApprovesForTimeID(EpicorLibrary.TimeService.GetNumOfApprovesForTimeIDRequest request);
        
        // CODEGEN: Generating message contract since message ExistTimeApproverRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/ExistTimeApprover", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.ExistTimeApproverResponse ExistTimeApprover(EpicorLibrary.TimeService.ExistTimeApproverRequest request);
        
        // CODEGEN: Generating message contract since message GetResourceListForProjectTimeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetResourceListForProjectTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetResourceListForProjectTimeResponse GetResourceListForProjectTime(EpicorLibrary.TimeService.GetResourceListForProjectTimeRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeDetailForProjectRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetTimeDetailForProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetTimeDetailForProjectResponse GetTimeDetailForProject(EpicorLibrary.TimeService.GetTimeDetailForProjectRequest request);
        
        // CODEGEN: Generating message contract since message UpdatePreviewTimeDetailForProjectRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdatePreviewTimeDetailForProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdatePreviewTimeDetailForProjectResponse UpdatePreviewTimeDetailForProject(EpicorLibrary.TimeService.UpdatePreviewTimeDetailForProjectRequest request);
        
        // CODEGEN: Generating message contract since message UpdateTimeDetailForProjectRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateTimeDetailForProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateTimeDetailForProjectResponse UpdateTimeDetailForProject(EpicorLibrary.TimeService.UpdateTimeDetailForProjectRequest request);
        
        // CODEGEN: Generating message contract since message GetActivityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActivity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActivityResponse GetActivity(EpicorLibrary.TimeService.GetActivityRequest request);
        
        // CODEGEN: Generating message contract since message GetAllActivitiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetAllActivities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetAllActivitiesResponse GetAllActivities(EpicorLibrary.TimeService.GetAllActivitiesRequest request);
        
        // CODEGEN: Generating message contract since message GetActiveActivitiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActiveActivities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActiveActivitiesResponse GetActiveActivities(EpicorLibrary.TimeService.GetActiveActivitiesRequest request);
        
        // CODEGEN: Generating message contract since message GetActivityGroupRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActivityGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActivityGroupResponse GetActivityGroup(EpicorLibrary.TimeService.GetActivityGroupRequest request);
        
        // CODEGEN: Generating message contract since message UpdateActivityGroupRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/UpdateActivityGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.UpdateActivityGroupResponse UpdateActivityGroup(EpicorLibrary.TimeService.UpdateActivityGroupRequest request);
        
        // CODEGEN: Generating message contract since message DeleteActivityGroupRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/DeleteActivityGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.DeleteActivityGroupResponse DeleteActivityGroup(EpicorLibrary.TimeService.DeleteActivityGroupRequest request);
        
        // CODEGEN: Generating message contract since message GetActiveActivitiesForSiteRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActiveActivitiesForSite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActiveActivitiesForSiteResponse GetActiveActivitiesForSite(EpicorLibrary.TimeService.GetActiveActivitiesForSiteRequest request);
        
        // CODEGEN: Generating message contract since message GetActiveInternalActivitiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetActiveInternalActivities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetActiveInternalActivitiesResponse GetActiveInternalActivities(EpicorLibrary.TimeService.GetActiveInternalActivitiesRequest request);
        
        // CODEGEN: Generating message contract since message GetExternalActivitiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://epicor.com/webservices/GetExternalActivities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EpicorLibrary.TimeService.GetExternalActivitiesResponse GetExternalActivities(EpicorLibrary.TimeService.GetExternalActivitiesRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class ICERequestHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CCMRequest ccmRequestField;
        
        private HoldListRequest hlRequestField;
        
        private string tipUrlField;
        
        private string remoteSessionKeyField;
        
        private string authorizationTokenField;
        
        private string ccmSessionIDField;
        
        private OriginalUserInfo userInfoField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public CCMRequest ccmRequest {
            get {
                return this.ccmRequestField;
            }
            set {
                this.ccmRequestField = value;
                this.RaisePropertyChanged("ccmRequest");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public HoldListRequest hlRequest {
            get {
                return this.hlRequestField;
            }
            set {
                this.hlRequestField = value;
                this.RaisePropertyChanged("hlRequest");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string tipUrl {
            get {
                return this.tipUrlField;
            }
            set {
                this.tipUrlField = value;
                this.RaisePropertyChanged("tipUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string remoteSessionKey {
            get {
                return this.remoteSessionKeyField;
            }
            set {
                this.remoteSessionKeyField = value;
                this.RaisePropertyChanged("remoteSessionKey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string authorizationToken {
            get {
                return this.authorizationTokenField;
            }
            set {
                this.authorizationTokenField = value;
                this.RaisePropertyChanged("authorizationToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ccmSessionID {
            get {
                return this.ccmSessionIDField;
            }
            set {
                this.ccmSessionIDField = value;
                this.RaisePropertyChanged("ccmSessionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public OriginalUserInfo userInfo {
            get {
                return this.userInfoField;
            }
            set {
                this.userInfoField = value;
                this.RaisePropertyChanged("userInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class CCMRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CCMOperation ccmOperationField;
        
        private string artifactField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public CCMOperation ccmOperation {
            get {
                return this.ccmOperationField;
            }
            set {
                this.ccmOperationField = value;
                this.RaisePropertyChanged("ccmOperation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string artifact {
            get {
                return this.artifactField;
            }
            set {
                this.artifactField = value;
                this.RaisePropertyChanged("artifact");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public enum CCMOperation {
        
        /// <remarks/>
        NoOperation,
        
        /// <remarks/>
        Claim,
        
        /// <remarks/>
        Release,
        
        /// <remarks/>
        ReleaseAll,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class artifactValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class Artifact : object, System.ComponentModel.INotifyPropertyChanged {
        
        private artifactValue artifactValueField;
        
        private string artifactNameField;
        
        private string artifactNodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public artifactValue ArtifactValue {
            get {
                return this.artifactValueField;
            }
            set {
                this.artifactValueField = value;
                this.RaisePropertyChanged("ArtifactValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string artifactName {
            get {
                return this.artifactNameField;
            }
            set {
                this.artifactNameField = value;
                this.RaisePropertyChanged("artifactName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string artifactNode {
            get {
                return this.artifactNodeField;
            }
            set {
                this.artifactNodeField = value;
                this.RaisePropertyChanged("artifactNode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class AttachmentListReply : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Artifact[] artifactField;
        
        private string clientQueryStringField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Artifact", Order=0)]
        public Artifact[] Artifact {
            get {
                return this.artifactField;
            }
            set {
                this.artifactField = value;
                this.RaisePropertyChanged("Artifact");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ClientQueryString {
            get {
                return this.clientQueryStringField;
            }
            set {
                this.clientQueryStringField = value;
                this.RaisePropertyChanged("ClientQueryString");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class HeldEvent : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string inhibitedArtifactNameField;
        
        private string inhibitedArtifactValueField;
        
        private string inhibitedEventNameField;
        
        private string inhibitingHoldClassField;
        
        private string inhibitingArtifactNameField;
        
        private string inhibitingArtifactValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string inhibitedArtifactName {
            get {
                return this.inhibitedArtifactNameField;
            }
            set {
                this.inhibitedArtifactNameField = value;
                this.RaisePropertyChanged("inhibitedArtifactName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string inhibitedArtifactValue {
            get {
                return this.inhibitedArtifactValueField;
            }
            set {
                this.inhibitedArtifactValueField = value;
                this.RaisePropertyChanged("inhibitedArtifactValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string inhibitedEventName {
            get {
                return this.inhibitedEventNameField;
            }
            set {
                this.inhibitedEventNameField = value;
                this.RaisePropertyChanged("inhibitedEventName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string inhibitingHoldClass {
            get {
                return this.inhibitingHoldClassField;
            }
            set {
                this.inhibitingHoldClassField = value;
                this.RaisePropertyChanged("inhibitingHoldClass");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string inhibitingArtifactName {
            get {
                return this.inhibitingArtifactNameField;
            }
            set {
                this.inhibitingArtifactNameField = value;
                this.RaisePropertyChanged("inhibitingArtifactName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string inhibitingArtifactValue {
            get {
                return this.inhibitingArtifactValueField;
            }
            set {
                this.inhibitingArtifactValueField = value;
                this.RaisePropertyChanged("inhibitingArtifactValue");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class CCMReply : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CCMArtifactStatus ccmStatusField;
        
        private string ccmMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public CCMArtifactStatus ccmStatus {
            get {
                return this.ccmStatusField;
            }
            set {
                this.ccmStatusField = value;
                this.RaisePropertyChanged("ccmStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ccmMessage {
            get {
                return this.ccmMessageField;
            }
            set {
                this.ccmMessageField = value;
                this.RaisePropertyChanged("ccmMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public enum CCMArtifactStatus {
        
        /// <remarks/>
        Unclaimed,
        
        /// <remarks/>
        ClaimedByThisSession,
        
        /// <remarks/>
        ClaimedByAnotherSession,
        
        /// <remarks/>
        Error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class ICEResponseHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CCMReply ccmReplyField;
        
        private string ccmSessionIDField;
        
        private HeldEvent[] holdListField;
        
        private AttachmentListReply attachmentListField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public CCMReply ccmReply {
            get {
                return this.ccmReplyField;
            }
            set {
                this.ccmReplyField = value;
                this.RaisePropertyChanged("ccmReply");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ccmSessionID {
            get {
                return this.ccmSessionIDField;
            }
            set {
                this.ccmSessionIDField = value;
                this.RaisePropertyChanged("ccmSessionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Artifact", IsNullable=false)]
        public HeldEvent[] HoldList {
            get {
                return this.holdListField;
            }
            set {
                this.holdListField = value;
                this.RaisePropertyChanged("HoldList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public AttachmentListReply AttachmentList {
            get {
                return this.attachmentListField;
            }
            set {
                this.attachmentListField = value;
                this.RaisePropertyChanged("AttachmentList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class OriginalUserInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string securityManagerURLField;
        
        private string userIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string securityManagerURL {
            get {
                return this.securityManagerURLField;
            }
            set {
                this.securityManagerURLField = value;
                this.RaisePropertyChanged("securityManagerURL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("userID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public partial class HoldListRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private HoldListRequestType hlRequestTypeField;
        
        private string artifactField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public HoldListRequestType hlRequestType {
            get {
                return this.hlRequestTypeField;
            }
            set {
                this.hlRequestTypeField = value;
                this.RaisePropertyChanged("hlRequestType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string artifact {
            get {
                return this.artifactField;
            }
            set {
                this.artifactField = value;
                this.RaisePropertyChanged("artifact");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/ice/1/2")]
    public enum HoldListRequestType {
        
        /// <remarks/>
        NoHoldListRequest,
        
        /// <remarks/>
        GetHoldList,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInternalActivities", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetInternalActivitiesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        public GetInternalActivitiesRequest() {
        }
        
        public GetInternalActivitiesRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader) {
            this.ICERequestHeader = ICERequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInternalActivitiesResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetInternalActivitiesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetInternalActivitiesResult;
        
        public GetInternalActivitiesResponse() {
        }
        
        public GetInternalActivitiesResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetInternalActivitiesResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetInternalActivitiesResult = GetInternalActivitiesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateActivities", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateActivitiesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ActivityList;
        
        public UpdateActivitiesRequest() {
        }
        
        public UpdateActivitiesRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityList) {
            this.ICERequestHeader = ICERequestHeader;
            this.ActivityList = ActivityList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateActivitiesResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateActivitiesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool UpdateActivitiesResult;
        
        public UpdateActivitiesResponse() {
        }
        
        public UpdateActivitiesResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool UpdateActivitiesResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateActivitiesResult = UpdateActivitiesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyActivityDelete", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyActivityDeleteRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ActivityCode;
        
        public VerifyActivityDeleteRequest() {
        }
        
        public VerifyActivityDeleteRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityCode) {
            this.ICERequestHeader = ICERequestHeader;
            this.ActivityCode = ActivityCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyActivityDeleteResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyActivityDeleteResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool VerifyActivityDeleteResult;
        
        public VerifyActivityDeleteResponse() {
        }
        
        public VerifyActivityDeleteResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool VerifyActivityDeleteResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.VerifyActivityDeleteResult = VerifyActivityDeleteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyActivity", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyActivityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ActivityCode;
        
        public VerifyActivityRequest() {
        }
        
        public VerifyActivityRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityCode) {
            this.ICERequestHeader = ICERequestHeader;
            this.ActivityCode = ActivityCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyActivityResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyActivityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool VerifyActivityResult;
        
        public VerifyActivityResponse() {
        }
        
        public VerifyActivityResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool VerifyActivityResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.VerifyActivityResult = VerifyActivityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyTimeForProjectTask", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyTimeForProjectTaskRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public int TaskUID;
        
        public VerifyTimeForProjectTaskRequest() {
        }
        
        public VerifyTimeForProjectTaskRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, int TaskUID) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCode = ProjectCode;
            this.TaskUID = TaskUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyTimeForProjectTaskResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyTimeForProjectTaskResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool VerifyTimeForProjectTaskResult;
        
        public VerifyTimeForProjectTaskResponse() {
        }
        
        public VerifyTimeForProjectTaskResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool VerifyTimeForProjectTaskResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.VerifyTimeForProjectTaskResult = VerifyTimeForProjectTaskResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyTimeForProjectResource", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyTimeForProjectResourceRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string ResourceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string ResourceSiteURN;
        
        public VerifyTimeForProjectResourceRequest() {
        }
        
        public VerifyTimeForProjectResourceRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, string ResourceID, string ResourceSiteURN) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCode = ProjectCode;
            this.ResourceID = ResourceID;
            this.ResourceSiteURN = ResourceSiteURN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyTimeForProjectResourceResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyTimeForProjectResourceResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool VerifyTimeForProjectResourceResult;
        
        public VerifyTimeForProjectResourceResponse() {
        }
        
        public VerifyTimeForProjectResourceResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool VerifyTimeForProjectResourceResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.VerifyTimeForProjectResourceResult = VerifyTimeForProjectResourceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyNonApprovedTimeForActivityCode", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyNonApprovedTimeForActivityCodeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ActivityCode;
        
        public VerifyNonApprovedTimeForActivityCodeRequest() {
        }
        
        public VerifyNonApprovedTimeForActivityCodeRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityCode) {
            this.ICERequestHeader = ICERequestHeader;
            this.ActivityCode = ActivityCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyNonApprovedTimeForActivityCodeResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyNonApprovedTimeForActivityCodeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool VerifyNonApprovedTimeForActivityCodeResult;
        
        public VerifyNonApprovedTimeForActivityCodeResponse() {
        }
        
        public VerifyNonApprovedTimeForActivityCodeResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool VerifyNonApprovedTimeForActivityCodeResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.VerifyNonApprovedTimeForActivityCodeResult = VerifyNonApprovedTimeForActivityCodeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeEntry", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeEntryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string TaskUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string ResourceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public System.DateTime FromDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public System.DateTime ToDate;
        
        public GetTimeEntryRequest() {
        }
        
        public GetTimeEntryRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, string TaskUID, string ResourceID, System.DateTime FromDate, System.DateTime ToDate) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCode = ProjectCode;
            this.TaskUID = TaskUID;
            this.ResourceID = ResourceID;
            this.FromDate = FromDate;
            this.ToDate = ToDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeEntryResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeEntryResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeEntryResult;
        
        public GetTimeEntryResponse() {
        }
        
        public GetTimeEntryResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeEntryResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeEntryResult = GetTimeEntryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllTimeEntries", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetAllTimeEntriesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ResourceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.DateTime FromDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public System.DateTime ToDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public System.DateTime preWeekRetrieveDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public System.DateTime postWeekRetrieveDate;
        
        public GetAllTimeEntriesRequest() {
        }
        
        public GetAllTimeEntriesRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ResourceID, System.DateTime FromDate, System.DateTime ToDate, System.DateTime preWeekRetrieveDate, System.DateTime postWeekRetrieveDate) {
            this.ICERequestHeader = ICERequestHeader;
            this.ResourceID = ResourceID;
            this.FromDate = FromDate;
            this.ToDate = ToDate;
            this.preWeekRetrieveDate = preWeekRetrieveDate;
            this.postWeekRetrieveDate = postWeekRetrieveDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllTimeEntriesResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetAllTimeEntriesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetAllTimeEntriesResult;
        
        public GetAllTimeEntriesResponse() {
        }
        
        public GetAllTimeEntriesResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetAllTimeEntriesResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetAllTimeEntriesResult = GetAllTimeEntriesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeList", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string TimeList;
        
        public UpdateTimeListRequest() {
        }
        
        public UpdateTimeListRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeList) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeList = TimeList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeListResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeListResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool UpdateTimeListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.Xml.XmlNode FailedRecallTrx;
        
        public UpdateTimeListResponse() {
        }
        
        public UpdateTimeListResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool UpdateTimeListResult, System.Xml.XmlNode FailedRecallTrx) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateTimeListResult = UpdateTimeListResult;
            this.FailedRecallTrx = FailedRecallTrx;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeEntryByID", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeEntryByIDRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int TimeID;
        
        public GetTimeEntryByIDRequest() {
        }
        
        public GetTimeEntryByIDRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int TimeID) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeID = TimeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeEntryByIDResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeEntryByIDResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeEntryByIDResult;
        
        public GetTimeEntryByIDResponse() {
        }
        
        public GetTimeEntryByIDResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeEntryByIDResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeEntryByIDResult = GetTimeEntryByIDResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeEntryByID", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeEntryByIDRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string GetTimeEntryByID;
        
        public UpdateTimeEntryByIDRequest() {
        }
        
        public UpdateTimeEntryByIDRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string GetTimeEntryByID) {
            this.ICERequestHeader = ICERequestHeader;
            this.GetTimeEntryByID = GetTimeEntryByID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeEntryByIDResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeEntryByIDResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool UpdateTimeEntryByIDResult;
        
        public UpdateTimeEntryByIDResponse() {
        }
        
        public UpdateTimeEntryByIDResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool UpdateTimeEntryByIDResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateTimeEntryByIDResult = UpdateTimeEntryByIDResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeBatchEntries", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeBatchEntriesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string TimeBatchWithDetails;
        
        public UpdateTimeBatchEntriesRequest() {
        }
        
        public UpdateTimeBatchEntriesRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeBatchWithDetails) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeBatchWithDetails = TimeBatchWithDetails;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeBatchEntriesResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeBatchEntriesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string UpdateTimeBatchEntriesResult;
        
        public UpdateTimeBatchEntriesResponse() {
        }
        
        public UpdateTimeBatchEntriesResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, string UpdateTimeBatchEntriesResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateTimeBatchEntriesResult = UpdateTimeBatchEntriesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeBatchHeader", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeBatchHeaderRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int BatchID;
        
        public GetTimeBatchHeaderRequest() {
        }
        
        public GetTimeBatchHeaderRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int BatchID) {
            this.ICERequestHeader = ICERequestHeader;
            this.BatchID = BatchID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeBatchHeaderResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeBatchHeaderResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeBatchHeaderResult;
        
        public GetTimeBatchHeaderResponse() {
        }
        
        public GetTimeBatchHeaderResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeBatchHeaderResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeBatchHeaderResult = GetTimeBatchHeaderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextTimeBatchSeqID", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetNextTimeBatchSeqIDRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        public GetNextTimeBatchSeqIDRequest() {
        }
        
        public GetNextTimeBatchSeqIDRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader) {
            this.ICERequestHeader = ICERequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextTimeBatchSeqIDResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetNextTimeBatchSeqIDResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int GetNextTimeBatchSeqIDResult;
        
        public GetNextTimeBatchSeqIDResponse() {
        }
        
        public GetNextTimeBatchSeqIDResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, int GetNextTimeBatchSeqIDResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetNextTimeBatchSeqIDResult = GetNextTimeBatchSeqIDResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyTimeBatch", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyTimeBatchRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int BatchID;
        
        public VerifyTimeBatchRequest() {
        }
        
        public VerifyTimeBatchRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int BatchID) {
            this.ICERequestHeader = ICERequestHeader;
            this.BatchID = BatchID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyTimeBatchResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyTimeBatchResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool VerifyTimeBatchResult;
        
        public VerifyTimeBatchResponse() {
        }
        
        public VerifyTimeBatchResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool VerifyTimeBatchResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.VerifyTimeBatchResult = VerifyTimeBatchResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteTimeBatch", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class DeleteTimeBatchRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int BatchID;
        
        public DeleteTimeBatchRequest() {
        }
        
        public DeleteTimeBatchRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int BatchID) {
            this.ICERequestHeader = ICERequestHeader;
            this.BatchID = BatchID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteTimeBatchResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class DeleteTimeBatchResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool DeleteTimeBatchResult;
        
        public DeleteTimeBatchResponse() {
        }
        
        public DeleteTimeBatchResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool DeleteTimeBatchResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.DeleteTimeBatchResult = DeleteTimeBatchResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllTimeBatchEntries", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetAllTimeBatchEntriesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int BatchID;
        
        public GetAllTimeBatchEntriesRequest() {
        }
        
        public GetAllTimeBatchEntriesRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int BatchID) {
            this.ICERequestHeader = ICERequestHeader;
            this.BatchID = BatchID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllTimeBatchEntriesResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetAllTimeBatchEntriesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetAllTimeBatchEntriesResult;
        
        public GetAllTimeBatchEntriesResponse() {
        }
        
        public GetAllTimeBatchEntriesResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetAllTimeBatchEntriesResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetAllTimeBatchEntriesResult = GetAllTimeBatchEntriesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTaskETC", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTaskETCRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectTree;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string ResourceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string ResourceSiteURN;
        
        public GetTaskETCRequest() {
        }
        
        public GetTaskETCRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectTree, string ResourceID, string ResourceSiteURN) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectTree = ProjectTree;
            this.ResourceID = ResourceID;
            this.ResourceSiteURN = ResourceSiteURN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTaskETCResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTaskETCResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTaskETCResult;
        
        public GetTaskETCResponse() {
        }
        
        public GetTaskETCResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTaskETCResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTaskETCResult = GetTaskETCResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTaskETC", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTaskETCRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string TaskEstimateToComplete;
        
        public UpdateTaskETCRequest() {
        }
        
        public UpdateTaskETCRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TaskEstimateToComplete) {
            this.ICERequestHeader = ICERequestHeader;
            this.TaskEstimateToComplete = TaskEstimateToComplete;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTaskETCResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTaskETCResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool UpdateTaskETCResult;
        
        public UpdateTaskETCResponse() {
        }
        
        public UpdateTaskETCResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool UpdateTaskETCResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateTaskETCResult = UpdateTaskETCResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeActualAndETCForProjectTasks", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeActualAndETCForProjectTasksRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string TaskList;
        
        public GetTimeActualAndETCForProjectTasksRequest() {
        }
        
        public GetTimeActualAndETCForProjectTasksRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TaskList) {
            this.ICERequestHeader = ICERequestHeader;
            this.TaskList = TaskList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeActualAndETCForProjectTasksResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeActualAndETCForProjectTasksResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeActualAndETCForProjectTasksResult;
        
        public GetTimeActualAndETCForProjectTasksResponse() {
        }
        
        public GetTimeActualAndETCForProjectTasksResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeActualAndETCForProjectTasksResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeActualAndETCForProjectTasksResult = GetTimeActualAndETCForProjectTasksResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTaskETCForProject", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTaskETCForProjectRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string ResourceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string ResourceSiteURN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public string ProjectSiteURN;
        
        public GetTaskETCForProjectRequest() {
        }
        
        public GetTaskETCForProjectRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, string ResourceID, string ResourceSiteURN, string ProjectSiteURN) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCode = ProjectCode;
            this.ResourceID = ResourceID;
            this.ResourceSiteURN = ResourceSiteURN;
            this.ProjectSiteURN = ProjectSiteURN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTaskETCForProjectResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTaskETCForProjectResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTaskETCForProjectResult;
        
        public GetTaskETCForProjectResponse() {
        }
        
        public GetTaskETCForProjectResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTaskETCForProjectResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTaskETCForProjectResult = GetTaskETCForProjectResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActualTimeCostAndCharge", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActualTimeCostAndChargeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCodes;
        
        public GetActualTimeCostAndChargeRequest() {
        }
        
        public GetActualTimeCostAndChargeRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCodes) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCodes = ProjectCodes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActualTimeCostAndChargeResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActualTimeCostAndChargeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetActualTimeCostAndChargeResult;
        
        public GetActualTimeCostAndChargeResponse() {
        }
        
        public GetActualTimeCostAndChargeResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetActualTimeCostAndChargeResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActualTimeCostAndChargeResult = GetActualTimeCostAndChargeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApprovalsByResourceTimeTree", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetApprovalsByResourceTimeTreeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ApproverID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.DateTime FromDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public System.DateTime ToDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public string projList;
        
        public GetApprovalsByResourceTimeTreeRequest() {
        }
        
        public GetApprovalsByResourceTimeTreeRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ApproverID, System.DateTime FromDate, System.DateTime ToDate, string projList) {
            this.ICERequestHeader = ICERequestHeader;
            this.ApproverID = ApproverID;
            this.FromDate = FromDate;
            this.ToDate = ToDate;
            this.projList = projList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApprovalsByResourceTimeTreeResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetApprovalsByResourceTimeTreeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetApprovalsByResourceTimeTreeResult;
        
        public GetApprovalsByResourceTimeTreeResponse() {
        }
        
        public GetApprovalsByResourceTimeTreeResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetApprovalsByResourceTimeTreeResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetApprovalsByResourceTimeTreeResult = GetApprovalsByResourceTimeTreeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApprovalsByProjectTimeTree", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetApprovalsByProjectTimeTreeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ApproverID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.DateTime FromDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public System.DateTime ToDate;
        
        public GetApprovalsByProjectTimeTreeRequest() {
        }
        
        public GetApprovalsByProjectTimeTreeRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ApproverID, System.DateTime FromDate, System.DateTime ToDate) {
            this.ICERequestHeader = ICERequestHeader;
            this.ApproverID = ApproverID;
            this.FromDate = FromDate;
            this.ToDate = ToDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApprovalsByProjectTimeTreeResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetApprovalsByProjectTimeTreeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetApprovalsByProjectTimeTreeResult;
        
        public GetApprovalsByProjectTimeTreeResponse() {
        }
        
        public GetApprovalsByProjectTimeTreeResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetApprovalsByProjectTimeTreeResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetApprovalsByProjectTimeTreeResult = GetApprovalsByProjectTimeTreeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeHomeCostAndChargeForProjects", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeHomeCostAndChargeForProjectsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCodes;
        
        public GetTimeHomeCostAndChargeForProjectsRequest() {
        }
        
        public GetTimeHomeCostAndChargeForProjectsRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCodes) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCodes = ProjectCodes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeHomeCostAndChargeForProjectsResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeHomeCostAndChargeForProjectsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeHomeCostAndChargeForProjectsResult;
        
        public GetTimeHomeCostAndChargeForProjectsResponse() {
        }
        
        public GetTimeHomeCostAndChargeForProjectsResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeHomeCostAndChargeForProjectsResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeHomeCostAndChargeForProjectsResult = GetTimeHomeCostAndChargeForProjectsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeOperCostAndChargeForProjects", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeOperCostAndChargeForProjectsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCodes;
        
        public GetTimeOperCostAndChargeForProjectsRequest() {
        }
        
        public GetTimeOperCostAndChargeForProjectsRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCodes) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCodes = ProjectCodes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeOperCostAndChargeForProjectsResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeOperCostAndChargeForProjectsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeOperCostAndChargeForProjectsResult;
        
        public GetTimeOperCostAndChargeForProjectsResponse() {
        }
        
        public GetTimeOperCostAndChargeForProjectsResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeOperCostAndChargeForProjectsResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeOperCostAndChargeForProjectsResult = GetTimeOperCostAndChargeForProjectsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeETCResourceApprovedHours", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeETCResourceApprovedHoursRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCode;
        
        public GetTimeETCResourceApprovedHoursRequest() {
        }
        
        public GetTimeETCResourceApprovedHoursRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCode = ProjectCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeETCResourceApprovedHoursResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeETCResourceApprovedHoursResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeETCResourceApprovedHoursResult;
        
        public GetTimeETCResourceApprovedHoursResponse() {
        }
        
        public GetTimeETCResourceApprovedHoursResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeETCResourceApprovedHoursResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeETCResourceApprovedHoursResult = GetTimeETCResourceApprovedHoursResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActualTimeForProjects", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActualTimeForProjectsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCodes;
        
        public GetActualTimeForProjectsRequest() {
        }
        
        public GetActualTimeForProjectsRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCodes) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCodes = ProjectCodes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActualTimeForProjectsResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActualTimeForProjectsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetActualTimeForProjectsResult;
        
        public GetActualTimeForProjectsResponse() {
        }
        
        public GetActualTimeForProjectsResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetActualTimeForProjectsResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActualTimeForProjectsResult = GetActualTimeForProjectsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyActiveInternalActivity", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyActiveInternalActivityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ActivityCode;
        
        public VerifyActiveInternalActivityRequest() {
        }
        
        public VerifyActiveInternalActivityRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityCode) {
            this.ICERequestHeader = ICERequestHeader;
            this.ActivityCode = ActivityCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyActiveInternalActivityResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyActiveInternalActivityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool VerifyActiveInternalActivityResult;
        
        public VerifyActiveInternalActivityResponse() {
        }
        
        public VerifyActiveInternalActivityResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool VerifyActiveInternalActivityResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.VerifyActiveInternalActivityResult = VerifyActiveInternalActivityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyActiveExternalActivity", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyActiveExternalActivityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ActivityCode;
        
        public VerifyActiveExternalActivityRequest() {
        }
        
        public VerifyActiveExternalActivityRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityCode) {
            this.ICERequestHeader = ICERequestHeader;
            this.ActivityCode = ActivityCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyActiveExternalActivityResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyActiveExternalActivityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool VerifyActiveExternalActivityResult;
        
        public VerifyActiveExternalActivityResponse() {
        }
        
        public VerifyActiveExternalActivityResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool VerifyActiveExternalActivityResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.VerifyActiveExternalActivityResult = VerifyActiveExternalActivityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyActivityStatus", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyActivityStatusRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ActivityCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public int TypeActivity;
        
        public VerifyActivityStatusRequest() {
        }
        
        public VerifyActivityStatusRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityCode, int TypeActivity) {
            this.ICERequestHeader = ICERequestHeader;
            this.ActivityCode = ActivityCode;
            this.TypeActivity = TypeActivity;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyActivityStatusResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyActivityStatusResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int VerifyActivityStatusResult;
        
        public VerifyActivityStatusResponse() {
        }
        
        public VerifyActivityStatusResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, int VerifyActivityStatusResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.VerifyActivityStatusResult = VerifyActivityStatusResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSiteExternalActivities", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetSiteExternalActivitiesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string SiteURN;
        
        public GetSiteExternalActivitiesRequest() {
        }
        
        public GetSiteExternalActivitiesRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string SiteURN) {
            this.ICERequestHeader = ICERequestHeader;
            this.SiteURN = SiteURN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSiteExternalActivitiesResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetSiteExternalActivitiesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetSiteExternalActivitiesResult;
        
        public GetSiteExternalActivitiesResponse() {
        }
        
        public GetSiteExternalActivitiesResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetSiteExternalActivitiesResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetSiteExternalActivitiesResult = GetSiteExternalActivitiesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchTimeTransactions", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class SearchTimeTransactionsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string xmlCriteriaDoc;
        
        public SearchTimeTransactionsRequest() {
        }
        
        public SearchTimeTransactionsRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string xmlCriteriaDoc) {
            this.ICERequestHeader = ICERequestHeader;
            this.xmlCriteriaDoc = xmlCriteriaDoc;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchTimeTransactionsResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class SearchTimeTransactionsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode SearchTimeTransactionsResult;
        
        public SearchTimeTransactionsResponse() {
        }
        
        public SearchTimeTransactionsResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode SearchTimeTransactionsResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.SearchTimeTransactionsResult = SearchTimeTransactionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeTransactions", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeTransactionsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string xmlTimeTransactions;
        
        public UpdateTimeTransactionsRequest() {
        }
        
        public UpdateTimeTransactionsRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string xmlTimeTransactions) {
            this.ICERequestHeader = ICERequestHeader;
            this.xmlTimeTransactions = xmlTimeTransactions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeTransactionsResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeTransactionsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool UpdateTimeTransactionsResult;
        
        public UpdateTimeTransactionsResponse() {
        }
        
        public UpdateTimeTransactionsResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool UpdateTimeTransactionsResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateTimeTransactionsResult = UpdateTimeTransactionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeReversalsForSite", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeReversalsForSiteRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string xmlTimeTransactions;
        
        public UpdateTimeReversalsForSiteRequest() {
        }
        
        public UpdateTimeReversalsForSiteRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string xmlTimeTransactions) {
            this.ICERequestHeader = ICERequestHeader;
            this.xmlTimeTransactions = xmlTimeTransactions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeReversalsForSiteResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeReversalsForSiteResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool UpdateTimeReversalsForSiteResult;
        
        public UpdateTimeReversalsForSiteResponse() {
        }
        
        public UpdateTimeReversalsForSiteResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool UpdateTimeReversalsForSiteResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateTimeReversalsForSiteResult = UpdateTimeReversalsForSiteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeTransfersForSite", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeTransfersForSiteRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string xmlTimeTransactions;
        
        public UpdateTimeTransfersForSiteRequest() {
        }
        
        public UpdateTimeTransfersForSiteRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string xmlTimeTransactions) {
            this.ICERequestHeader = ICERequestHeader;
            this.xmlTimeTransactions = xmlTimeTransactions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeTransfersForSiteResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeTransfersForSiteResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool UpdateTimeTransfersForSiteResult;
        
        public UpdateTimeTransfersForSiteResponse() {
        }
        
        public UpdateTimeTransfersForSiteResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool UpdateTimeTransfersForSiteResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateTimeTransfersForSiteResult = UpdateTimeTransfersForSiteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateTotals", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class CalculateTotalsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string xmlTimeTransactions;
        
        public CalculateTotalsRequest() {
        }
        
        public CalculateTotalsRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string xmlTimeTransactions) {
            this.ICERequestHeader = ICERequestHeader;
            this.xmlTimeTransactions = xmlTimeTransactions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateTotalsResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class CalculateTotalsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode CalculateTotalsResult;
        
        public CalculateTotalsResponse() {
        }
        
        public CalculateTotalsResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode CalculateTotalsResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.CalculateTotalsResult = CalculateTotalsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeEntryIncludingMCByID", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeEntryIncludingMCByIDRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int TimeID;
        
        public GetTimeEntryIncludingMCByIDRequest() {
        }
        
        public GetTimeEntryIncludingMCByIDRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int TimeID) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeID = TimeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeEntryIncludingMCByIDResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeEntryIncludingMCByIDResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeEntryIncludingMCByIDResult;
        
        public GetTimeEntryIncludingMCByIDResponse() {
        }
        
        public GetTimeEntryIncludingMCByIDResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeEntryIncludingMCByIDResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeEntryIncludingMCByIDResult = GetTimeEntryIncludingMCByIDResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectActualRollupStandardHours", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectActualRollupStandardHoursRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCodes;
        
        public GetProjectActualRollupStandardHoursRequest() {
        }
        
        public GetProjectActualRollupStandardHoursRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCodes) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCodes = ProjectCodes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectActualRollupStandardHoursResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectActualRollupStandardHoursResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetProjectActualRollupStandardHoursResult;
        
        public GetProjectActualRollupStandardHoursResponse() {
        }
        
        public GetProjectActualRollupStandardHoursResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetProjectActualRollupStandardHoursResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetProjectActualRollupStandardHoursResult = GetProjectActualRollupStandardHoursResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectActualRollupOvertimeHours", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectActualRollupOvertimeHoursRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCodes;
        
        public GetProjectActualRollupOvertimeHoursRequest() {
        }
        
        public GetProjectActualRollupOvertimeHoursRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCodes) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCodes = ProjectCodes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectActualRollupOvertimeHoursResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectActualRollupOvertimeHoursResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetProjectActualRollupOvertimeHoursResult;
        
        public GetProjectActualRollupOvertimeHoursResponse() {
        }
        
        public GetProjectActualRollupOvertimeHoursResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetProjectActualRollupOvertimeHoursResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetProjectActualRollupOvertimeHoursResult = GetProjectActualRollupOvertimeHoursResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeEntryOnLoadData", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeEntryOnLoadDataRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        public GetTimeEntryOnLoadDataRequest() {
        }
        
        public GetTimeEntryOnLoadDataRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader) {
            this.ICERequestHeader = ICERequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeEntryOnLoadDataResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeEntryOnLoadDataResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string LoginID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string ResourceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string SiteURN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public int FirstDOW;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public System.DateTime SQLDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=5)]
        public System.Xml.XmlNode xmlResourceAndEntityPrefForResource;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=6)]
        public System.Xml.XmlNode xmlInternalActivityList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=7)]
        public System.Xml.XmlNode xmlExternalActivityList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=8)]
        public System.Xml.XmlNode xmlTimeTypeList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=9)]
        public System.Xml.XmlNode xmlActivityGroups;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=10)]
        public System.Xml.XmlNode xmlActivities;
        
        public GetTimeEntryOnLoadDataResponse() {
        }
        
        public GetTimeEntryOnLoadDataResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, string LoginID, string ResourceID, string SiteURN, int FirstDOW, System.DateTime SQLDate, System.Xml.XmlNode xmlResourceAndEntityPrefForResource, System.Xml.XmlNode xmlInternalActivityList, System.Xml.XmlNode xmlExternalActivityList, System.Xml.XmlNode xmlTimeTypeList, System.Xml.XmlNode xmlActivityGroups, System.Xml.XmlNode xmlActivities) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.LoginID = LoginID;
            this.ResourceID = ResourceID;
            this.SiteURN = SiteURN;
            this.FirstDOW = FirstDOW;
            this.SQLDate = SQLDate;
            this.xmlResourceAndEntityPrefForResource = xmlResourceAndEntityPrefForResource;
            this.xmlInternalActivityList = xmlInternalActivityList;
            this.xmlExternalActivityList = xmlExternalActivityList;
            this.xmlTimeTypeList = xmlTimeTypeList;
            this.xmlActivityGroups = xmlActivityGroups;
            this.xmlActivities = xmlActivities;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeOnLoadData", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeOnLoadDataRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProxyResourceID;
        
        public GetTimeOnLoadDataRequest() {
        }
        
        public GetTimeOnLoadDataRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProxyResourceID) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProxyResourceID = ProxyResourceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeOnLoadDataResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeOnLoadDataResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string LoginID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string ResourceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string SiteURN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public int FirstDOW;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public System.DateTime SQLDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=5)]
        public System.Xml.XmlNode xmlResourceAndEntityPrefForResource;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=6)]
        public System.Xml.XmlNode xmlResourceCategoryForResourceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=7)]
        public System.Xml.XmlNode xmlWorkHourListForResource;
        
        public GetTimeOnLoadDataResponse() {
        }
        
        public GetTimeOnLoadDataResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, string LoginID, string ResourceID, string SiteURN, int FirstDOW, System.DateTime SQLDate, System.Xml.XmlNode xmlResourceAndEntityPrefForResource, System.Xml.XmlNode xmlResourceCategoryForResourceID, System.Xml.XmlNode xmlWorkHourListForResource) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.LoginID = LoginID;
            this.ResourceID = ResourceID;
            this.SiteURN = SiteURN;
            this.FirstDOW = FirstDOW;
            this.SQLDate = SQLDate;
            this.xmlResourceAndEntityPrefForResource = xmlResourceAndEntityPrefForResource;
            this.xmlResourceCategoryForResourceID = xmlResourceCategoryForResourceID;
            this.xmlWorkHourListForResource = xmlWorkHourListForResource;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeEntryOnLoadDataDisconnected", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeEntryOnLoadDataDisconnectedRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.DateTime FirstDateRange;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.DateTime LastDateRange;
        
        public GetTimeEntryOnLoadDataDisconnectedRequest() {
        }
        
        public GetTimeEntryOnLoadDataDisconnectedRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, System.DateTime FirstDateRange, System.DateTime LastDateRange) {
            this.ICERequestHeader = ICERequestHeader;
            this.FirstDateRange = FirstDateRange;
            this.LastDateRange = LastDateRange;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeEntryOnLoadDataDisconnectedResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeEntryOnLoadDataDisconnectedResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string LoginID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string ResourceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string SiteURN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public int FirstDOW;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public System.DateTime SQLDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=5)]
        public System.Xml.XmlNode xmlResourceAndEntityPrefForResource;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=6)]
        public System.Xml.XmlNode xmlInternalActivityList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=7)]
        public System.Xml.XmlNode xmlExternalActivityList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=8)]
        public System.Xml.XmlNode xmlTimeTypeList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=9)]
        public System.Xml.XmlNode xmlActivityGroups;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=10)]
        public System.Xml.XmlNode xmlActivities;
        
        public GetTimeEntryOnLoadDataDisconnectedResponse() {
        }
        
        public GetTimeEntryOnLoadDataDisconnectedResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, string LoginID, string ResourceID, string SiteURN, int FirstDOW, System.DateTime SQLDate, System.Xml.XmlNode xmlResourceAndEntityPrefForResource, System.Xml.XmlNode xmlInternalActivityList, System.Xml.XmlNode xmlExternalActivityList, System.Xml.XmlNode xmlTimeTypeList, System.Xml.XmlNode xmlActivityGroups, System.Xml.XmlNode xmlActivities) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.LoginID = LoginID;
            this.ResourceID = ResourceID;
            this.SiteURN = SiteURN;
            this.FirstDOW = FirstDOW;
            this.SQLDate = SQLDate;
            this.xmlResourceAndEntityPrefForResource = xmlResourceAndEntityPrefForResource;
            this.xmlInternalActivityList = xmlInternalActivityList;
            this.xmlExternalActivityList = xmlExternalActivityList;
            this.xmlTimeTypeList = xmlTimeTypeList;
            this.xmlActivityGroups = xmlActivityGroups;
            this.xmlActivities = xmlActivities;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivitiesFromActivityGroups", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivitiesFromActivityGroupsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ActivityGroupCode;
        
        public GetActivitiesFromActivityGroupsRequest() {
        }
        
        public GetActivitiesFromActivityGroupsRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityGroupCode) {
            this.ICERequestHeader = ICERequestHeader;
            this.ActivityGroupCode = ActivityGroupCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivitiesFromActivityGroupsResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivitiesFromActivityGroupsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetActivitiesFromActivityGroupsResult;
        
        public GetActivitiesFromActivityGroupsResponse() {
        }
        
        public GetActivitiesFromActivityGroupsResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetActivitiesFromActivityGroupsResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActivitiesFromActivityGroupsResult = GetActivitiesFromActivityGroupsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivitiesForTheWeek", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivitiesForTheWeekRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ResourceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public int FirstDOW;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public System.DateTime currentDateTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public System.DateTime LastDateTime;
        
        public GetActivitiesForTheWeekRequest() {
        }
        
        public GetActivitiesForTheWeekRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ResourceID, int FirstDOW, System.DateTime currentDateTime, System.DateTime LastDateTime) {
            this.ICERequestHeader = ICERequestHeader;
            this.ResourceID = ResourceID;
            this.FirstDOW = FirstDOW;
            this.currentDateTime = currentDateTime;
            this.LastDateTime = LastDateTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivitiesForTheWeekResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivitiesForTheWeekResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode xmlActivityGroups;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.Xml.XmlNode xmlActivities;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public System.Xml.XmlNode xmlInternalActivityList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public System.Xml.XmlNode xmlExternalActivityList;
        
        public GetActivitiesForTheWeekResponse() {
        }
        
        public GetActivitiesForTheWeekResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode xmlActivityGroups, System.Xml.XmlNode xmlActivities, System.Xml.XmlNode xmlInternalActivityList, System.Xml.XmlNode xmlExternalActivityList) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.xmlActivityGroups = xmlActivityGroups;
            this.xmlActivities = xmlActivities;
            this.xmlInternalActivityList = xmlInternalActivityList;
            this.xmlExternalActivityList = xmlExternalActivityList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FillEmptyActivities", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class FillEmptyActivitiesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string InternalFlag;
        
        public FillEmptyActivitiesRequest() {
        }
        
        public FillEmptyActivitiesRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string InternalFlag) {
            this.ICERequestHeader = ICERequestHeader;
            this.InternalFlag = InternalFlag;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FillEmptyActivitiesResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class FillEmptyActivitiesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode FillEmptyActivitiesResult;
        
        public FillEmptyActivitiesResponse() {
        }
        
        public FillEmptyActivitiesResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode FillEmptyActivitiesResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.FillEmptyActivitiesResult = FillEmptyActivitiesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivitiesForTheDay", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivitiesForTheDayRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string searchCriteriaXml;
        
        public GetActivitiesForTheDayRequest() {
        }
        
        public GetActivitiesForTheDayRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string searchCriteriaXml) {
            this.ICERequestHeader = ICERequestHeader;
            this.searchCriteriaXml = searchCriteriaXml;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivitiesForTheDayResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivitiesForTheDayResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetActivitiesForTheDayResult;
        
        public GetActivitiesForTheDayResponse() {
        }
        
        public GetActivitiesForTheDayResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetActivitiesForTheDayResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActivitiesForTheDayResult = GetActivitiesForTheDayResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResourceCalendarTime", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetResourceCalendarTimeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ResourceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string ResourceSiteURN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public System.DateTime StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public System.DateTime EndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public int ConfirmedFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=5)]
        public int CancelledFlag;
        
        public GetResourceCalendarTimeRequest() {
        }
        
        public GetResourceCalendarTimeRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ResourceID, string ResourceSiteURN, System.DateTime StartDate, System.DateTime EndDate, int ConfirmedFlag, int CancelledFlag) {
            this.ICERequestHeader = ICERequestHeader;
            this.ResourceID = ResourceID;
            this.ResourceSiteURN = ResourceSiteURN;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
            this.ConfirmedFlag = ConfirmedFlag;
            this.CancelledFlag = CancelledFlag;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResourceCalendarTimeResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetResourceCalendarTimeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetResourceCalendarTimeResult;
        
        public GetResourceCalendarTimeResponse() {
        }
        
        public GetResourceCalendarTimeResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetResourceCalendarTimeResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetResourceCalendarTimeResult = GetResourceCalendarTimeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDirectRecognition", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetDirectRecognitionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int TimeID;
        
        public GetDirectRecognitionRequest() {
        }
        
        public GetDirectRecognitionRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int TimeID) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeID = TimeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDirectRecognitionResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetDirectRecognitionResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetDirectRecognitionResult;
        
        public GetDirectRecognitionResponse() {
        }
        
        public GetDirectRecognitionResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetDirectRecognitionResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetDirectRecognitionResult = GetDirectRecognitionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDirectRecognitionForProject", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetDirectRecognitionForProjectRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCode;
        
        public GetDirectRecognitionForProjectRequest() {
        }
        
        public GetDirectRecognitionForProjectRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCode = ProjectCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDirectRecognitionForProjectResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetDirectRecognitionForProjectResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetDirectRecognitionForProjectResult;
        
        public GetDirectRecognitionForProjectResponse() {
        }
        
        public GetDirectRecognitionForProjectResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetDirectRecognitionForProjectResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetDirectRecognitionForProjectResult = GetDirectRecognitionForProjectResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNonChargeableDirectRecognitionForProject", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetNonChargeableDirectRecognitionForProjectRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.DateTime GLApplyDate;
        
        public GetNonChargeableDirectRecognitionForProjectRequest() {
        }
        
        public GetNonChargeableDirectRecognitionForProjectRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, System.DateTime GLApplyDate) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCode = ProjectCode;
            this.GLApplyDate = GLApplyDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNonChargeableDirectRecognitionForProjectResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetNonChargeableDirectRecognitionForProjectResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetNonChargeableDirectRecognitionForProjectResult;
        
        public GetNonChargeableDirectRecognitionForProjectResponse() {
        }
        
        public GetNonChargeableDirectRecognitionForProjectResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetNonChargeableDirectRecognitionForProjectResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetNonChargeableDirectRecognitionForProjectResult = GetNonChargeableDirectRecognitionForProjectResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDirectRecognitionAmts", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateDirectRecognitionAmtsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string TMERecList;
        
        public UpdateDirectRecognitionAmtsRequest() {
        }
        
        public UpdateDirectRecognitionAmtsRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TMERecList) {
            this.ICERequestHeader = ICERequestHeader;
            this.TMERecList = TMERecList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDirectRecognitionAmtsResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateDirectRecognitionAmtsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        public UpdateDirectRecognitionAmtsResponse() {
        }
        
        public UpdateDirectRecognitionAmtsResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader) {
            this.ICEResponseHeader = ICEResponseHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDirectRecognition", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateDirectRecognitionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int TimeID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public decimal RecognizedCostAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public decimal HomeRecognizedCostAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public decimal OperationalRecognizedCostAmt;
        
        public UpdateDirectRecognitionRequest() {
        }
        
        public UpdateDirectRecognitionRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int TimeID, decimal RecognizedCostAmt, decimal HomeRecognizedCostAmt, decimal OperationalRecognizedCostAmt) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeID = TimeID;
            this.RecognizedCostAmt = RecognizedCostAmt;
            this.HomeRecognizedCostAmt = HomeRecognizedCostAmt;
            this.OperationalRecognizedCostAmt = OperationalRecognizedCostAmt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDirectRecognitionResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateDirectRecognitionResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        public UpdateDirectRecognitionResponse() {
        }
        
        public UpdateDirectRecognitionResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader) {
            this.ICEResponseHeader = ICEResponseHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRevRecDirectFPItems", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetRevRecDirectFPItemsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string TaskUIDs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public System.DateTime GLApplyDate;
        
        public GetRevRecDirectFPItemsRequest() {
        }
        
        public GetRevRecDirectFPItemsRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, string TaskUIDs, System.DateTime GLApplyDate) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCode = ProjectCode;
            this.TaskUIDs = TaskUIDs;
            this.GLApplyDate = GLApplyDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRevRecDirectFPItemsResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetRevRecDirectFPItemsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetRevRecDirectFPItemsResult;
        
        public GetRevRecDirectFPItemsResponse() {
        }
        
        public GetRevRecDirectFPItemsResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetRevRecDirectFPItemsResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetRevRecDirectFPItemsResult = GetRevRecDirectFPItemsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeSummaryReport", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeSummaryReportRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string rptCriteria;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string SiteURN;
        
        public GetTimeSummaryReportRequest() {
        }
        
        public GetTimeSummaryReportRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string rptCriteria, string SiteURN) {
            this.ICERequestHeader = ICERequestHeader;
            this.rptCriteria = rptCriteria;
            this.SiteURN = SiteURN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeSummaryReportResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeSummaryReportResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeSummaryReportResult;
        
        public GetTimeSummaryReportResponse() {
        }
        
        public GetTimeSummaryReportResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeSummaryReportResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeSummaryReportResult = GetTimeSummaryReportResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeSummaryReportForCompany", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeSummaryReportForCompanyRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string rptCriteria;
        
        public GetTimeSummaryReportForCompanyRequest() {
        }
        
        public GetTimeSummaryReportForCompanyRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string rptCriteria) {
            this.ICERequestHeader = ICERequestHeader;
            this.rptCriteria = rptCriteria;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeSummaryReportForCompanyResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeSummaryReportForCompanyResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeSummaryReportForCompanyResult;
        
        public GetTimeSummaryReportForCompanyResponse() {
        }
        
        public GetTimeSummaryReportForCompanyResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeSummaryReportForCompanyResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeSummaryReportForCompanyResult = GetTimeSummaryReportForCompanyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExternalTimeTypes", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetExternalTimeTypesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string SiteURN;
        
        public GetExternalTimeTypesRequest() {
        }
        
        public GetExternalTimeTypesRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string SiteURN) {
            this.ICERequestHeader = ICERequestHeader;
            this.SiteURN = SiteURN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExternalTimeTypesResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetExternalTimeTypesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetExternalTimeTypesResult;
        
        public GetExternalTimeTypesResponse() {
        }
        
        public GetExternalTimeTypesResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetExternalTimeTypesResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetExternalTimeTypesResult = GetExternalTimeTypesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeTypeListForSite", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeTypeListForSiteRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string SiteURN;
        
        public GetTimeTypeListForSiteRequest() {
        }
        
        public GetTimeTypeListForSiteRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string SiteURN) {
            this.ICERequestHeader = ICERequestHeader;
            this.SiteURN = SiteURN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeTypeListForSiteResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeTypeListForSiteResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeTypeListForSiteResult;
        
        public GetTimeTypeListForSiteResponse() {
        }
        
        public GetTimeTypeListForSiteResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeTypeListForSiteResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeTypeListForSiteResult = GetTimeTypeListForSiteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeTypeList", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeTypeListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string RateTypeInd;
        
        public GetTimeTypeListRequest() {
        }
        
        public GetTimeTypeListRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string RateTypeInd) {
            this.ICERequestHeader = ICERequestHeader;
            this.RateTypeInd = RateTypeInd;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeTypeListResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeTypeListResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeTypeListResult;
        
        public GetTimeTypeListResponse() {
        }
        
        public GetTimeTypeListResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeTypeListResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeTypeListResult = GetTimeTypeListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeTypeList", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeTypeListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string TimeType;
        
        public UpdateTimeTypeListRequest() {
        }
        
        public UpdateTimeTypeListRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeType) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeType = TimeType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeTypeListResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeTypeListResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        public UpdateTimeTypeListResponse() {
        }
        
        public UpdateTimeTypeListResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader) {
            this.ICEResponseHeader = ICEResponseHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUnbilledTransactionReport", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetUnbilledTransactionReportRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string rptCriteria;
        
        public GetUnbilledTransactionReportRequest() {
        }
        
        public GetUnbilledTransactionReportRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string rptCriteria) {
            this.ICERequestHeader = ICERequestHeader;
            this.rptCriteria = rptCriteria;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUnbilledTransactionReportResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetUnbilledTransactionReportResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetUnbilledTransactionReportResult;
        
        public GetUnbilledTransactionReportResponse() {
        }
        
        public GetUnbilledTransactionReportResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetUnbilledTransactionReportResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetUnbilledTransactionReportResult = GetUnbilledTransactionReportResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeSummaryForSiteURL", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeSummaryForSiteURLRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string xmlTSR;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string incOT;
        
        public GetTimeSummaryForSiteURLRequest() {
        }
        
        public GetTimeSummaryForSiteURLRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string xmlTSR, string incOT) {
            this.ICERequestHeader = ICERequestHeader;
            this.xmlTSR = xmlTSR;
            this.incOT = incOT;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeSummaryForSiteURLResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeSummaryForSiteURLResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeSummaryForSiteURLResult;
        
        public GetTimeSummaryForSiteURLResponse() {
        }
        
        public GetTimeSummaryForSiteURLResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeSummaryForSiteURLResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeSummaryForSiteURLResult = GetTimeSummaryForSiteURLResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectReportTimeRevenueAndCost", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectReportTimeRevenueAndCostRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string currencyType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string projectCodeList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public System.DateTime startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public System.DateTime endDate;
        
        public GetProjectReportTimeRevenueAndCostRequest() {
        }
        
        public GetProjectReportTimeRevenueAndCostRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string currencyType, string projectCodeList, System.DateTime startDate, System.DateTime endDate) {
            this.ICERequestHeader = ICERequestHeader;
            this.currencyType = currencyType;
            this.projectCodeList = projectCodeList;
            this.startDate = startDate;
            this.endDate = endDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectReportTimeRevenueAndCostResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectReportTimeRevenueAndCostResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetProjectReportTimeRevenueAndCostResult;
        
        public GetProjectReportTimeRevenueAndCostResponse() {
        }
        
        public GetProjectReportTimeRevenueAndCostResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetProjectReportTimeRevenueAndCostResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetProjectReportTimeRevenueAndCostResult = GetProjectReportTimeRevenueAndCostResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ApproveAllTimeForApproverAndDateRange", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class ApproveAllTimeForApproverAndDateRangeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ApproverID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.DateTime FromDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public System.DateTime ToDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public string sByView;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public string ProxyFlag;
        
        public ApproveAllTimeForApproverAndDateRangeRequest() {
        }
        
        public ApproveAllTimeForApproverAndDateRangeRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ApproverID, System.DateTime FromDate, System.DateTime ToDate, string sByView, string ProxyFlag) {
            this.ICERequestHeader = ICERequestHeader;
            this.ApproverID = ApproverID;
            this.FromDate = FromDate;
            this.ToDate = ToDate;
            this.sByView = sByView;
            this.ProxyFlag = ProxyFlag;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ApproveAllTimeForApproverAndDateRangeResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class ApproveAllTimeForApproverAndDateRangeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode ApproveAllTimeForApproverAndDateRangeResult;
        
        public ApproveAllTimeForApproverAndDateRangeResponse() {
        }
        
        public ApproveAllTimeForApproverAndDateRangeResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode ApproveAllTimeForApproverAndDateRangeResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.ApproveAllTimeForApproverAndDateRangeResult = ApproveAllTimeForApproverAndDateRangeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertTimeAwaitingApprovalList", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class InsertTimeAwaitingApprovalListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string timeAwaitingApproval;
        
        public InsertTimeAwaitingApprovalListRequest() {
        }
        
        public InsertTimeAwaitingApprovalListRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string timeAwaitingApproval) {
            this.ICERequestHeader = ICERequestHeader;
            this.timeAwaitingApproval = timeAwaitingApproval;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertTimeAwaitingApprovalListResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class InsertTimeAwaitingApprovalListResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        public InsertTimeAwaitingApprovalListResponse() {
        }
        
        public InsertTimeAwaitingApprovalListResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader) {
            this.ICEResponseHeader = ICEResponseHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteTimeRequiredApproverList", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class DeleteTimeRequiredApproverListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string timeRequiredApprover;
        
        public DeleteTimeRequiredApproverListRequest() {
        }
        
        public DeleteTimeRequiredApproverListRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string timeRequiredApprover) {
            this.ICERequestHeader = ICERequestHeader;
            this.timeRequiredApprover = timeRequiredApprover;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteTimeRequiredApproverListResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class DeleteTimeRequiredApproverListResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        public DeleteTimeRequiredApproverListResponse() {
        }
        
        public DeleteTimeRequiredApproverListResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader) {
            this.ICEResponseHeader = ICEResponseHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetArtifactDocumentList", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetArtifactDocumentListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string sArtifact;
        
        public GetArtifactDocumentListRequest() {
        }
        
        public GetArtifactDocumentListRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string sArtifact) {
            this.ICERequestHeader = ICERequestHeader;
            this.sArtifact = sArtifact;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetArtifactDocumentListResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetArtifactDocumentListResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetArtifactDocumentListResult;
        
        public GetArtifactDocumentListResponse() {
        }
        
        public GetArtifactDocumentListResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetArtifactDocumentListResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetArtifactDocumentListResult = GetArtifactDocumentListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteTimeAwaitingApprovalList", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class DeleteTimeAwaitingApprovalListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string timeAwaitingApproval;
        
        public DeleteTimeAwaitingApprovalListRequest() {
        }
        
        public DeleteTimeAwaitingApprovalListRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string timeAwaitingApproval) {
            this.ICERequestHeader = ICERequestHeader;
            this.timeAwaitingApproval = timeAwaitingApproval;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteTimeAwaitingApprovalListResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class DeleteTimeAwaitingApprovalListResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        public DeleteTimeAwaitingApprovalListResponse() {
        }
        
        public DeleteTimeAwaitingApprovalListResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader) {
            this.ICEResponseHeader = ICEResponseHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCalendarCodeForActivity", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetCalendarCodeForActivityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string activityCode;
        
        public GetCalendarCodeForActivityRequest() {
        }
        
        public GetCalendarCodeForActivityRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string activityCode) {
            this.ICERequestHeader = ICERequestHeader;
            this.activityCode = activityCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCalendarCodeForActivityResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetCalendarCodeForActivityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string GetCalendarCodeForActivityResult;
        
        public GetCalendarCodeForActivityResponse() {
        }
        
        public GetCalendarCodeForActivityResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, string GetCalendarCodeForActivityResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetCalendarCodeForActivityResult = GetCalendarCodeForActivityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsTimeCompletelyApproved", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class IsTimeCompletelyApprovedRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int timeID;
        
        public IsTimeCompletelyApprovedRequest() {
        }
        
        public IsTimeCompletelyApprovedRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int timeID) {
            this.ICERequestHeader = ICERequestHeader;
            this.timeID = timeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsTimeCompletelyApprovedResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class IsTimeCompletelyApprovedResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool IsTimeCompletelyApprovedResult;
        
        public IsTimeCompletelyApprovedResponse() {
        }
        
        public IsTimeCompletelyApprovedResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool IsTimeCompletelyApprovedResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.IsTimeCompletelyApprovedResult = IsTimeCompletelyApprovedResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsSingleRequiredApprover", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class IsSingleRequiredApproverRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int timeID;
        
        public IsSingleRequiredApproverRequest() {
        }
        
        public IsSingleRequiredApproverRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int timeID) {
            this.ICERequestHeader = ICERequestHeader;
            this.timeID = timeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsSingleRequiredApproverResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class IsSingleRequiredApproverResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool IsSingleRequiredApproverResult;
        
        public IsSingleRequiredApproverResponse() {
        }
        
        public IsSingleRequiredApproverResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool IsSingleRequiredApproverResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.IsSingleRequiredApproverResult = IsSingleRequiredApproverResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActualHoursAndCostTotalsForProject", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActualHoursAndCostTotalsForProjectRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string projectCode;
        
        public GetActualHoursAndCostTotalsForProjectRequest() {
        }
        
        public GetActualHoursAndCostTotalsForProjectRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string projectCode) {
            this.ICERequestHeader = ICERequestHeader;
            this.projectCode = projectCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActualHoursAndCostTotalsForProjectResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActualHoursAndCostTotalsForProjectResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public decimal actualRegHours;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public decimal actualOTHours;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public decimal actualRegHoursCost;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public decimal actualOTHoursCost;
        
        public GetActualHoursAndCostTotalsForProjectResponse() {
        }
        
        public GetActualHoursAndCostTotalsForProjectResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, decimal actualRegHours, decimal actualOTHours, decimal actualRegHoursCost, decimal actualOTHoursCost) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.actualRegHours = actualRegHours;
            this.actualOTHours = actualOTHours;
            this.actualRegHoursCost = actualRegHoursCost;
            this.actualOTHoursCost = actualOTHoursCost;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeActualAndETCForProject", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeActualAndETCForProjectRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string projectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string projectSiteURN;
        
        public GetTimeActualAndETCForProjectRequest() {
        }
        
        public GetTimeActualAndETCForProjectRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string projectCode, string projectSiteURN) {
            this.ICERequestHeader = ICERequestHeader;
            this.projectCode = projectCode;
            this.projectSiteURN = projectSiteURN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeActualAndETCForProjectResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeActualAndETCForProjectResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeActualAndETCForProjectResult;
        
        public GetTimeActualAndETCForProjectResponse() {
        }
        
        public GetTimeActualAndETCForProjectResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeActualAndETCForProjectResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeActualAndETCForProjectResult = GetTimeActualAndETCForProjectResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivityDescription", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivityDescriptionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string activityCode;
        
        public GetActivityDescriptionRequest() {
        }
        
        public GetActivityDescriptionRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string activityCode) {
            this.ICERequestHeader = ICERequestHeader;
            this.activityCode = activityCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivityDescriptionResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivityDescriptionResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string GetActivityDescriptionResult;
        
        public GetActivityDescriptionResponse() {
        }
        
        public GetActivityDescriptionResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, string GetActivityDescriptionResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActivityDescriptionResult = GetActivityDescriptionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeTypeDescription", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeTypeDescriptionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string timeTypeCode;
        
        public GetTimeTypeDescriptionRequest() {
        }
        
        public GetTimeTypeDescriptionRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string timeTypeCode) {
            this.ICERequestHeader = ICERequestHeader;
            this.timeTypeCode = timeTypeCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeTypeDescriptionResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeTypeDescriptionResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string GetTimeTypeDescriptionResult;
        
        public GetTimeTypeDescriptionResponse() {
        }
        
        public GetTimeTypeDescriptionResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, string GetTimeTypeDescriptionResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeTypeDescriptionResult = GetTimeTypeDescriptionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActiveTimeTypeList", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActiveTimeTypeListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string RateTypeInd;
        
        public GetActiveTimeTypeListRequest() {
        }
        
        public GetActiveTimeTypeListRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string RateTypeInd) {
            this.ICERequestHeader = ICERequestHeader;
            this.RateTypeInd = RateTypeInd;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActiveTimeTypeListResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActiveTimeTypeListResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetActiveTimeTypeListResult;
        
        public GetActiveTimeTypeListResponse() {
        }
        
        public GetActiveTimeTypeListResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetActiveTimeTypeListResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActiveTimeTypeListResult = GetActiveTimeTypeListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateTimeBatchEntries", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class ValidateTimeBatchEntriesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string TimeBatchIn;
        
        public ValidateTimeBatchEntriesRequest() {
        }
        
        public ValidateTimeBatchEntriesRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeBatchIn) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeBatchIn = TimeBatchIn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateTimeBatchEntriesResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class ValidateTimeBatchEntriesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ValidateTimeBatchEntriesResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.Xml.XmlNode TimeBatch;
        
        public ValidateTimeBatchEntriesResponse() {
        }
        
        public ValidateTimeBatchEntriesResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, string ValidateTimeBatchEntriesResult, System.Xml.XmlNode TimeBatch) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.ValidateTimeBatchEntriesResult = ValidateTimeBatchEntriesResult;
            this.TimeBatch = TimeBatch;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeBatchEntriesAtRemote", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeBatchEntriesAtRemoteRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string TimeEntry;
        
        public UpdateTimeBatchEntriesAtRemoteRequest() {
        }
        
        public UpdateTimeBatchEntriesAtRemoteRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeEntry) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeEntry = TimeEntry;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeBatchEntriesAtRemoteResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeBatchEntriesAtRemoteResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode UpdateTimeBatchEntriesAtRemoteResult;
        
        public UpdateTimeBatchEntriesAtRemoteResponse() {
        }
        
        public UpdateTimeBatchEntriesAtRemoteResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode UpdateTimeBatchEntriesAtRemoteResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateTimeBatchEntriesAtRemoteResult = UpdateTimeBatchEntriesAtRemoteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InterBranchExport", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class InterBranchExportRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        public InterBranchExportRequest() {
        }
        
        public InterBranchExportRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader) {
            this.ICERequestHeader = ICERequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InterBranchExportResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class InterBranchExportResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool InterBranchExportResult;
        
        public InterBranchExportResponse() {
        }
        
        public InterBranchExportResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool InterBranchExportResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.InterBranchExportResult = InterBranchExportResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateInterOrgError", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class CreateInterOrgErrorRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int interOrgErrorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public int errorCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string errorDesc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public int timeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public string resourceSiteURN;
        
        public CreateInterOrgErrorRequest() {
        }
        
        public CreateInterOrgErrorRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int interOrgErrorNum, int errorCode, string errorDesc, int timeId, string resourceSiteURN) {
            this.ICERequestHeader = ICERequestHeader;
            this.interOrgErrorNum = interOrgErrorNum;
            this.errorCode = errorCode;
            this.errorDesc = errorDesc;
            this.timeId = timeId;
            this.resourceSiteURN = resourceSiteURN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateInterOrgErrorResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class CreateInterOrgErrorResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        public CreateInterOrgErrorResponse() {
        }
        
        public CreateInterOrgErrorResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader) {
            this.ICEResponseHeader = ICEResponseHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReserveNewTimeID", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class ReserveNewTimeIDRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string resWord;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string resourceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string resourceSiteURN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public string activityCode;
        
        public ReserveNewTimeIDRequest() {
        }
        
        public ReserveNewTimeIDRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string resWord, string resourceID, string resourceSiteURN, string activityCode) {
            this.ICERequestHeader = ICERequestHeader;
            this.resWord = resWord;
            this.resourceID = resourceID;
            this.resourceSiteURN = resourceSiteURN;
            this.activityCode = activityCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReserveNewTimeIDResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class ReserveNewTimeIDResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int ReserveNewTimeIDResult;
        
        public ReserveNewTimeIDResponse() {
        }
        
        public ReserveNewTimeIDResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, int ReserveNewTimeIDResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.ReserveNewTimeIDResult = ReserveNewTimeIDResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveTimeBillingNumForCancelledBilling", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class RemoveTimeBillingNumForCancelledBillingRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int billingNum;
        
        public RemoveTimeBillingNumForCancelledBillingRequest() {
        }
        
        public RemoveTimeBillingNumForCancelledBillingRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int billingNum) {
            this.ICERequestHeader = ICERequestHeader;
            this.billingNum = billingNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveTimeBillingNumForCancelledBillingResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class RemoveTimeBillingNumForCancelledBillingResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        public RemoveTimeBillingNumForCancelledBillingResponse() {
        }
        
        public RemoveTimeBillingNumForCancelledBillingResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader) {
            this.ICEResponseHeader = ICEResponseHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInterOrgFlagCountForTime", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetInterOrgFlagCountForTimeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        public GetInterOrgFlagCountForTimeRequest() {
        }
        
        public GetInterOrgFlagCountForTimeRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader) {
            this.ICERequestHeader = ICERequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInterOrgFlagCountForTimeResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetInterOrgFlagCountForTimeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int GetInterOrgFlagCountForTimeResult;
        
        public GetInterOrgFlagCountForTimeResponse() {
        }
        
        public GetInterOrgFlagCountForTimeResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, int GetInterOrgFlagCountForTimeResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetInterOrgFlagCountForTimeResult = GetInterOrgFlagCountForTimeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActualTimeForProjectPortfolio", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActualTimeForProjectPortfolioRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string projectList;
        
        public GetActualTimeForProjectPortfolioRequest() {
        }
        
        public GetActualTimeForProjectPortfolioRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string projectList) {
            this.ICERequestHeader = ICERequestHeader;
            this.projectList = projectList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActualTimeForProjectPortfolioResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActualTimeForProjectPortfolioResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetActualTimeForProjectPortfolioResult;
        
        public GetActualTimeForProjectPortfolioResponse() {
        }
        
        public GetActualTimeForProjectPortfolioResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetActualTimeForProjectPortfolioResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActualTimeForProjectPortfolioResult = GetActualTimeForProjectPortfolioResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeSheetReportFilterData", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeSheetReportFilterDataRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ReportLayout;
        
        public GetTimeSheetReportFilterDataRequest() {
        }
        
        public GetTimeSheetReportFilterDataRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ReportLayout) {
            this.ICERequestHeader = ICERequestHeader;
            this.ReportLayout = ReportLayout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeSheetReportFilterDataResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeSheetReportFilterDataResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeSheetReportFilterDataResult;
        
        public GetTimeSheetReportFilterDataResponse() {
        }
        
        public GetTimeSheetReportFilterDataResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeSheetReportFilterDataResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeSheetReportFilterDataResult = GetTimeSheetReportFilterDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeSheetReportDefaults", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeSheetReportDefaultsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        public GetTimeSheetReportDefaultsRequest() {
        }
        
        public GetTimeSheetReportDefaultsRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader) {
            this.ICERequestHeader = ICERequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeSheetReportDefaultsResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeSheetReportDefaultsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string LoginID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string ResourceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string SiteURN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public string CompanyURN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public string OrgUnit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=5)]
        public System.DateTime SQLDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=6)]
        public bool ProjectManager;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=7)]
        public bool ResourceManager;
        
        public GetTimeSheetReportDefaultsResponse() {
        }
        
        public GetTimeSheetReportDefaultsResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, string LoginID, string ResourceID, string SiteURN, string CompanyURN, string OrgUnit, System.DateTime SQLDate, bool ProjectManager, bool ResourceManager) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.LoginID = LoginID;
            this.ResourceID = ResourceID;
            this.SiteURN = SiteURN;
            this.CompanyURN = CompanyURN;
            this.OrgUnit = OrgUnit;
            this.SQLDate = SQLDate;
            this.ProjectManager = ProjectManager;
            this.ResourceManager = ResourceManager;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeSheetReport", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeSheetReportRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string rptCriteria;
        
        public GetTimeSheetReportRequest() {
        }
        
        public GetTimeSheetReportRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string rptCriteria) {
            this.ICERequestHeader = ICERequestHeader;
            this.rptCriteria = rptCriteria;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeSheetReportResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeSheetReportResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeSheetReportResult;
        
        public GetTimeSheetReportResponse() {
        }
        
        public GetTimeSheetReportResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeSheetReportResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeSheetReportResult = GetTimeSheetReportResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPCodeListWithTimesByResourceIDs", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetPCodeListWithTimesByResourceIDsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string strResourceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string EndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public string reportLayout;
        
        public GetPCodeListWithTimesByResourceIDsRequest() {
        }
        
        public GetPCodeListWithTimesByResourceIDsRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string strResourceID, string StartDate, string EndDate, string reportLayout) {
            this.ICERequestHeader = ICERequestHeader;
            this.strResourceID = strResourceID;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
            this.reportLayout = reportLayout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPCodeListWithTimesByResourceIDsResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetPCodeListWithTimesByResourceIDsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetPCodeListWithTimesByResourceIDsResult;
        
        public GetPCodeListWithTimesByResourceIDsResponse() {
        }
        
        public GetPCodeListWithTimesByResourceIDsResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetPCodeListWithTimesByResourceIDsResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetPCodeListWithTimesByResourceIDsResult = GetPCodeListWithTimesByResourceIDsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectListWithTimesByPCodes", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectListWithTimesByPCodesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string strProjectCodes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string EndDate;
        
        public GetProjectListWithTimesByPCodesRequest() {
        }
        
        public GetProjectListWithTimesByPCodesRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string strProjectCodes, string StartDate, string EndDate) {
            this.ICERequestHeader = ICERequestHeader;
            this.strProjectCodes = strProjectCodes;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectListWithTimesByPCodesResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectListWithTimesByPCodesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetProjectListWithTimesByPCodesResult;
        
        public GetProjectListWithTimesByPCodesResponse() {
        }
        
        public GetProjectListWithTimesByPCodesResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetProjectListWithTimesByPCodesResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetProjectListWithTimesByPCodesResult = GetProjectListWithTimesByPCodesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectListWithTimesByPCodesForProjectManagers", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectListWithTimesByPCodesForProjectManagersRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string strProjectCodes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string EndDate;
        
        public GetProjectListWithTimesByPCodesForProjectManagersRequest() {
        }
        
        public GetProjectListWithTimesByPCodesForProjectManagersRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string strProjectCodes, string StartDate, string EndDate) {
            this.ICERequestHeader = ICERequestHeader;
            this.strProjectCodes = strProjectCodes;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectListWithTimesByPCodesForProjectManagersResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectListWithTimesByPCodesForProjectManagersResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetProjectListWithTimesByPCodesForProjectManagersResult;
        
        public GetProjectListWithTimesByPCodesForProjectManagersResponse() {
        }
        
        public GetProjectListWithTimesByPCodesForProjectManagersResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetProjectListWithTimesByPCodesForProjectManagersResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetProjectListWithTimesByPCodesForProjectManagersResult = GetProjectListWithTimesByPCodesForProjectManagersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectListWithTimesByTimeEntry", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectListWithTimesByTimeEntryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string EndDate;
        
        public GetProjectListWithTimesByTimeEntryRequest() {
        }
        
        public GetProjectListWithTimesByTimeEntryRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string StartDate, string EndDate) {
            this.ICERequestHeader = ICERequestHeader;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectListWithTimesByTimeEntryResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectListWithTimesByTimeEntryResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetProjectListWithTimesByTimeEntryResult;
        
        public GetProjectListWithTimesByTimeEntryResponse() {
        }
        
        public GetProjectListWithTimesByTimeEntryResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetProjectListWithTimesByTimeEntryResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetProjectListWithTimesByTimeEntryResult = GetProjectListWithTimesByTimeEntryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResIDListWithTimesByTimeEntryDate", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetResIDListWithTimesByTimeEntryDateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string EndDate;
        
        public GetResIDListWithTimesByTimeEntryDateRequest() {
        }
        
        public GetResIDListWithTimesByTimeEntryDateRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string StartDate, string EndDate) {
            this.ICERequestHeader = ICERequestHeader;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResIDListWithTimesByTimeEntryDateResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetResIDListWithTimesByTimeEntryDateResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetResIDListWithTimesByTimeEntryDateResult;
        
        public GetResIDListWithTimesByTimeEntryDateResponse() {
        }
        
        public GetResIDListWithTimesByTimeEntryDateResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetResIDListWithTimesByTimeEntryDateResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetResIDListWithTimesByTimeEntryDateResult = GetResIDListWithTimesByTimeEntryDateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckForTimeOutOfRange", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class CheckForTimeOutOfRangeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.DateTime startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.DateTime endDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string projectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public int TaskUID;
        
        public CheckForTimeOutOfRangeRequest() {
        }
        
        public CheckForTimeOutOfRangeRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, System.DateTime startDate, System.DateTime endDate, string projectCode, int TaskUID) {
            this.ICERequestHeader = ICERequestHeader;
            this.startDate = startDate;
            this.endDate = endDate;
            this.projectCode = projectCode;
            this.TaskUID = TaskUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckForTimeOutOfRangeResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class CheckForTimeOutOfRangeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int CheckForTimeOutOfRangeResult;
        
        public CheckForTimeOutOfRangeResponse() {
        }
        
        public CheckForTimeOutOfRangeResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, int CheckForTimeOutOfRangeResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.CheckForTimeOutOfRangeResult = CheckForTimeOutOfRangeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeDetailForTaskETC", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeDetailForTaskETCRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string projectCode;
        
        public GetTimeDetailForTaskETCRequest() {
        }
        
        public GetTimeDetailForTaskETCRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string projectCode) {
            this.ICERequestHeader = ICERequestHeader;
            this.projectCode = projectCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeDetailForTaskETCResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeDetailForTaskETCResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeDetailForTaskETCResult;
        
        public GetTimeDetailForTaskETCResponse() {
        }
        
        public GetTimeDetailForTaskETCResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeDetailForTaskETCResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeDetailForTaskETCResult = GetTimeDetailForTaskETCResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActiveActivityGroupList", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActiveActivityGroupListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        public GetActiveActivityGroupListRequest() {
        }
        
        public GetActiveActivityGroupListRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader) {
            this.ICERequestHeader = ICERequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActiveActivityGroupListResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActiveActivityGroupListResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetActiveActivityGroupListResult;
        
        public GetActiveActivityGroupListResponse() {
        }
        
        public GetActiveActivityGroupListResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetActiveActivityGroupListResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActiveActivityGroupListResult = GetActiveActivityGroupListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTMTimeItemsForImmediateRecognition", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTMTimeItemsForImmediateRecognitionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjForImmediateRecognition;
        
        public GetTMTimeItemsForImmediateRecognitionRequest() {
        }
        
        public GetTMTimeItemsForImmediateRecognitionRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjForImmediateRecognition) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjForImmediateRecognition = ProjForImmediateRecognition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTMTimeItemsForImmediateRecognitionResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTMTimeItemsForImmediateRecognitionResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTMTimeItemsForImmediateRecognitionResult;
        
        public GetTMTimeItemsForImmediateRecognitionResponse() {
        }
        
        public GetTMTimeItemsForImmediateRecognitionResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTMTimeItemsForImmediateRecognitionResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTMTimeItemsForImmediateRecognitionResult = GetTMTimeItemsForImmediateRecognitionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeForImmediateRecognition", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeForImmediateRecognitionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string TMTimeItemsForImmediateRecognition;
        
        public UpdateTimeForImmediateRecognitionRequest() {
        }
        
        public UpdateTimeForImmediateRecognitionRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TMTimeItemsForImmediateRecognition) {
            this.ICERequestHeader = ICERequestHeader;
            this.TMTimeItemsForImmediateRecognition = TMTimeItemsForImmediateRecognition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeForImmediateRecognitionResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeForImmediateRecognitionResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool UpdateTimeForImmediateRecognitionResult;
        
        public UpdateTimeForImmediateRecognitionResponse() {
        }
        
        public UpdateTimeForImmediateRecognitionResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool UpdateTimeForImmediateRecognitionResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateTimeForImmediateRecognitionResult = UpdateTimeForImmediateRecognitionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInternalTree", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetInternalTreeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string resourceCategoryList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public int startingOutline;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public System.DateTime fdate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public System.DateTime tdate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public string resID;
        
        public GetInternalTreeRequest() {
        }
        
        public GetInternalTreeRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string resourceCategoryList, int startingOutline, System.DateTime fdate, System.DateTime tdate, string resID) {
            this.ICERequestHeader = ICERequestHeader;
            this.resourceCategoryList = resourceCategoryList;
            this.startingOutline = startingOutline;
            this.fdate = fdate;
            this.tdate = tdate;
            this.resID = resID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInternalTreeResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetInternalTreeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetInternalTreeResult;
        
        public GetInternalTreeResponse() {
        }
        
        public GetInternalTreeResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetInternalTreeResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetInternalTreeResult = GetInternalTreeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeDetailForProjectByResource", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeDetailForProjectByResourceRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.DateTime FromDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public System.DateTime ToDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public string ApproverID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public string ResourceID;
        
        public GetTimeDetailForProjectByResourceRequest() {
        }
        
        public GetTimeDetailForProjectByResourceRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, System.DateTime FromDate, System.DateTime ToDate, string ApproverID, string ResourceID) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCode = ProjectCode;
            this.FromDate = FromDate;
            this.ToDate = ToDate;
            this.ApproverID = ApproverID;
            this.ResourceID = ResourceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeDetailForProjectByResourceResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeDetailForProjectByResourceResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeDetailForProjectByResourceResult;
        
        public GetTimeDetailForProjectByResourceResponse() {
        }
        
        public GetTimeDetailForProjectByResourceResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeDetailForProjectByResourceResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeDetailForProjectByResourceResult = GetTimeDetailForProjectByResourceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsLocaleIDInUse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class IsLocaleIDInUseRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string localeID;
        
        public IsLocaleIDInUseRequest() {
        }
        
        public IsLocaleIDInUseRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string localeID) {
            this.ICERequestHeader = ICERequestHeader;
            this.localeID = localeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsLocaleIDInUseResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class IsLocaleIDInUseResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool IsLocaleIDInUseResult;
        
        public IsLocaleIDInUseResponse() {
        }
        
        public IsLocaleIDInUseResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool IsLocaleIDInUseResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.IsLocaleIDInUseResult = IsLocaleIDInUseResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTranslationDescriptionForActivity", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTranslationDescriptionForActivityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string localeID;
        
        public GetTranslationDescriptionForActivityRequest() {
        }
        
        public GetTranslationDescriptionForActivityRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string localeID) {
            this.ICERequestHeader = ICERequestHeader;
            this.localeID = localeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTranslationDescriptionForActivityResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTranslationDescriptionForActivityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTranslationDescriptionForActivityResult;
        
        public GetTranslationDescriptionForActivityResponse() {
        }
        
        public GetTranslationDescriptionForActivityResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTranslationDescriptionForActivityResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTranslationDescriptionForActivityResult = GetTranslationDescriptionForActivityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTranslationDescriptionForActivity", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTranslationDescriptionForActivityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string translationDescriptionList;
        
        public UpdateTranslationDescriptionForActivityRequest() {
        }
        
        public UpdateTranslationDescriptionForActivityRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string translationDescriptionList) {
            this.ICERequestHeader = ICERequestHeader;
            this.translationDescriptionList = translationDescriptionList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTranslationDescriptionForActivityResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTranslationDescriptionForActivityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        public UpdateTranslationDescriptionForActivityResponse() {
        }
        
        public UpdateTranslationDescriptionForActivityResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader) {
            this.ICEResponseHeader = ICEResponseHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTranslationDescriptionForTimeType", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTranslationDescriptionForTimeTypeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string localeID;
        
        public GetTranslationDescriptionForTimeTypeRequest() {
        }
        
        public GetTranslationDescriptionForTimeTypeRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string localeID) {
            this.ICERequestHeader = ICERequestHeader;
            this.localeID = localeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTranslationDescriptionForTimeTypeResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTranslationDescriptionForTimeTypeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTranslationDescriptionForTimeTypeResult;
        
        public GetTranslationDescriptionForTimeTypeResponse() {
        }
        
        public GetTranslationDescriptionForTimeTypeResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTranslationDescriptionForTimeTypeResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTranslationDescriptionForTimeTypeResult = GetTranslationDescriptionForTimeTypeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTranslationDescriptionForTimeType", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTranslationDescriptionForTimeTypeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string translationDescriptionList;
        
        public UpdateTranslationDescriptionForTimeTypeRequest() {
        }
        
        public UpdateTranslationDescriptionForTimeTypeRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string translationDescriptionList) {
            this.ICERequestHeader = ICERequestHeader;
            this.translationDescriptionList = translationDescriptionList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTranslationDescriptionForTimeTypeResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTranslationDescriptionForTimeTypeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        public UpdateTranslationDescriptionForTimeTypeResponse() {
        }
        
        public UpdateTranslationDescriptionForTimeTypeResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader) {
            this.ICEResponseHeader = ICEResponseHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivityGroupList", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivityGroupListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        public GetActivityGroupListRequest() {
        }
        
        public GetActivityGroupListRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader) {
            this.ICERequestHeader = ICERequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivityGroupListResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivityGroupListResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetActivityGroupListResult;
        
        public GetActivityGroupListResponse() {
        }
        
        public GetActivityGroupListResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetActivityGroupListResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActivityGroupListResult = GetActivityGroupListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivityForActualsEntry", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivityForActualsEntryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string activityCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public int internalFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string workTypeCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public string resourceCategoryList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public bool validFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=5)]
        public bool throwException;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=6)]
        public System.DateTime fDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=7)]
        public System.DateTime tDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=8)]
        public string resID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=9)]
        public string resourceSiteURN;
        
        public GetActivityForActualsEntryRequest() {
        }
        
        public GetActivityForActualsEntryRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string activityCode, int internalFlag, string workTypeCode, string resourceCategoryList, bool validFlag, bool throwException, System.DateTime fDate, System.DateTime tDate, string resID, string resourceSiteURN) {
            this.ICERequestHeader = ICERequestHeader;
            this.activityCode = activityCode;
            this.internalFlag = internalFlag;
            this.workTypeCode = workTypeCode;
            this.resourceCategoryList = resourceCategoryList;
            this.validFlag = validFlag;
            this.throwException = throwException;
            this.fDate = fDate;
            this.tDate = tDate;
            this.resID = resID;
            this.resourceSiteURN = resourceSiteURN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivityForActualsEntryResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivityForActualsEntryResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string GetActivityForActualsEntryResult;
        
        public GetActivityForActualsEntryResponse() {
        }
        
        public GetActivityForActualsEntryResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, string GetActivityForActualsEntryResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActivityForActualsEntryResult = GetActivityForActualsEntryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivityListForActualsEntry", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivityListForActualsEntryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string searchCriteriaXml;
        
        public GetActivityListForActualsEntryRequest() {
        }
        
        public GetActivityListForActualsEntryRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string searchCriteriaXml) {
            this.ICERequestHeader = ICERequestHeader;
            this.searchCriteriaXml = searchCriteriaXml;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivityListForActualsEntryResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivityListForActualsEntryResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetActivityListForActualsEntryResult;
        
        public GetActivityListForActualsEntryResponse() {
        }
        
        public GetActivityListForActualsEntryResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetActivityListForActualsEntryResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActivityListForActualsEntryResult = GetActivityListForActualsEntryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUnassignedFlagForResourceTime", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateUnassignedFlagForResourceTimeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string projectSiteURN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string projectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string resourceSiteURN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public string resourceID;
        
        public UpdateUnassignedFlagForResourceTimeRequest() {
        }
        
        public UpdateUnassignedFlagForResourceTimeRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string projectSiteURN, string projectCode, string resourceSiteURN, string resourceID) {
            this.ICERequestHeader = ICERequestHeader;
            this.projectSiteURN = projectSiteURN;
            this.projectCode = projectCode;
            this.resourceSiteURN = resourceSiteURN;
            this.resourceID = resourceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUnassignedFlagForResourceTimeResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateUnassignedFlagForResourceTimeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        public UpdateUnassignedFlagForResourceTimeResponse() {
        }
        
        public UpdateUnassignedFlagForResourceTimeResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader) {
            this.ICEResponseHeader = ICEResponseHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeDetailForTransferReversal", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeDetailForTransferReversalRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int timeID;
        
        public GetTimeDetailForTransferReversalRequest() {
        }
        
        public GetTimeDetailForTransferReversalRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int timeID) {
            this.ICERequestHeader = ICERequestHeader;
            this.timeID = timeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeDetailForTransferReversalResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeDetailForTransferReversalResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeDetailForTransferReversalResult;
        
        public GetTimeDetailForTransferReversalResponse() {
        }
        
        public GetTimeDetailForTransferReversalResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeDetailForTransferReversalResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeDetailForTransferReversalResult = GetTimeDetailForTransferReversalResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivityListForDisconnected", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivityListForDisconnectedRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        public GetActivityListForDisconnectedRequest() {
        }
        
        public GetActivityListForDisconnectedRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader) {
            this.ICERequestHeader = ICERequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivityListForDisconnectedResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivityListForDisconnectedResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetActivityListForDisconnectedResult;
        
        public GetActivityListForDisconnectedResponse() {
        }
        
        public GetActivityListForDisconnectedResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetActivityListForDisconnectedResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActivityListForDisconnectedResult = GetActivityListForDisconnectedResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeEntryTransactions", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeEntryTransactionsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string xmlTimeList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string xmlTaskETC;
        
        public UpdateTimeEntryTransactionsRequest() {
        }
        
        public UpdateTimeEntryTransactionsRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string xmlTimeList, string xmlTaskETC) {
            this.ICERequestHeader = ICERequestHeader;
            this.xmlTimeList = xmlTimeList;
            this.xmlTaskETC = xmlTaskETC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeEntryTransactionsResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeEntryTransactionsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        public UpdateTimeEntryTransactionsResponse() {
        }
        
        public UpdateTimeEntryTransactionsResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader) {
            this.ICEResponseHeader = ICEResponseHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyTimeForProjectTaskResource", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyTimeForProjectTaskResourceRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public int TaskUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string ResourceID;
        
        public VerifyTimeForProjectTaskResourceRequest() {
        }
        
        public VerifyTimeForProjectTaskResourceRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, int TaskUID, string ResourceID) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCode = ProjectCode;
            this.TaskUID = TaskUID;
            this.ResourceID = ResourceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyTimeForProjectTaskResourceResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class VerifyTimeForProjectTaskResourceResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool VerifyTimeForProjectTaskResourceResult;
        
        public VerifyTimeForProjectTaskResourceResponse() {
        }
        
        public VerifyTimeForProjectTaskResourceResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool VerifyTimeForProjectTaskResourceResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.VerifyTimeForProjectTaskResourceResult = VerifyTimeForProjectTaskResourceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActualTimeForOpportunityProject", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActualTimeForOpportunityProjectRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string OpportunityID;
        
        public GetActualTimeForOpportunityProjectRequest() {
        }
        
        public GetActualTimeForOpportunityProjectRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string OpportunityID) {
            this.ICERequestHeader = ICERequestHeader;
            this.OpportunityID = OpportunityID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActualTimeForOpportunityProjectResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActualTimeForOpportunityProjectResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetActualTimeForOpportunityProjectResult;
        
        public GetActualTimeForOpportunityProjectResponse() {
        }
        
        public GetActualTimeForOpportunityProjectResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetActualTimeForOpportunityProjectResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActualTimeForOpportunityProjectResult = GetActualTimeForOpportunityProjectResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeApprovalDate", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeApprovalDateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int TimeID;
        
        public GetTimeApprovalDateRequest() {
        }
        
        public GetTimeApprovalDateRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int TimeID) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeID = TimeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeApprovalDateResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeApprovalDateResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.DateTime GetTimeApprovalDateResult;
        
        public GetTimeApprovalDateResponse() {
        }
        
        public GetTimeApprovalDateResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.DateTime GetTimeApprovalDateResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeApprovalDateResult = GetTimeApprovalDateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RecognizeAndFinalizeApprovedTimeForSite", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class RecognizeAndFinalizeApprovedTimeForSiteRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string xmlTransactions;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public bool transactionFlag;
        
        public RecognizeAndFinalizeApprovedTimeForSiteRequest() {
        }
        
        public RecognizeAndFinalizeApprovedTimeForSiteRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string xmlTransactions, bool transactionFlag) {
            this.ICERequestHeader = ICERequestHeader;
            this.xmlTransactions = xmlTransactions;
            this.transactionFlag = transactionFlag;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RecognizeAndFinalizeApprovedTimeForSiteResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class RecognizeAndFinalizeApprovedTimeForSiteResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool RecognizeAndFinalizeApprovedTimeForSiteResult;
        
        public RecognizeAndFinalizeApprovedTimeForSiteResponse() {
        }
        
        public RecognizeAndFinalizeApprovedTimeForSiteResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool RecognizeAndFinalizeApprovedTimeForSiteResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.RecognizeAndFinalizeApprovedTimeForSiteResult = RecognizeAndFinalizeApprovedTimeForSiteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeTypeMaskingValues", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeTypeMaskingValuesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        public GetTimeTypeMaskingValuesRequest() {
        }
        
        public GetTimeTypeMaskingValuesRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader) {
            this.ICERequestHeader = ICERequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeTypeMaskingValuesResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeTypeMaskingValuesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeTypeMaskingValuesResult;
        
        public GetTimeTypeMaskingValuesResponse() {
        }
        
        public GetTimeTypeMaskingValuesResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeTypeMaskingValuesResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeTypeMaskingValuesResult = GetTimeTypeMaskingValuesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWorkHourListForResource", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetWorkHourListForResourceRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int calculate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.DateTime fromDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public System.DateTime toDate;
        
        public GetWorkHourListForResourceRequest() {
        }
        
        public GetWorkHourListForResourceRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int calculate, System.DateTime fromDate, System.DateTime toDate) {
            this.ICERequestHeader = ICERequestHeader;
            this.calculate = calculate;
            this.fromDate = fromDate;
            this.toDate = toDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWorkHourListForResourceResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetWorkHourListForResourceResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode xmlWorkHourListForResource;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.Xml.XmlNode xmlOrganizationID;
        
        public GetWorkHourListForResourceResponse() {
        }
        
        public GetWorkHourListForResourceResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode xmlWorkHourListForResource, System.Xml.XmlNode xmlOrganizationID) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.xmlWorkHourListForResource = xmlWorkHourListForResource;
            this.xmlOrganizationID = xmlOrganizationID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivitiesForResourceInRange", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivitiesForResourceInRangeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.DateTime fDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.DateTime tDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string resID;
        
        public GetActivitiesForResourceInRangeRequest() {
        }
        
        public GetActivitiesForResourceInRangeRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, System.DateTime fDate, System.DateTime tDate, string resID) {
            this.ICERequestHeader = ICERequestHeader;
            this.fDate = fDate;
            this.tDate = tDate;
            this.resID = resID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivitiesForResourceInRangeResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivitiesForResourceInRangeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetActivitiesForResourceInRangeResult;
        
        public GetActivitiesForResourceInRangeResponse() {
        }
        
        public GetActivitiesForResourceInRangeResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetActivitiesForResourceInRangeResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActivitiesForResourceInRangeResult = GetActivitiesForResourceInRangeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateActivitiesForResource", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class ValidateActivitiesForResourceRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string xmlTimeList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.DateTime fDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public System.DateTime tDate;
        
        public ValidateActivitiesForResourceRequest() {
        }
        
        public ValidateActivitiesForResourceRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string xmlTimeList, System.DateTime fDate, System.DateTime tDate) {
            this.ICERequestHeader = ICERequestHeader;
            this.xmlTimeList = xmlTimeList;
            this.fDate = fDate;
            this.tDate = tDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateActivitiesForResourceResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class ValidateActivitiesForResourceResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool ValidateActivitiesForResourceResult;
        
        public ValidateActivitiesForResourceResponse() {
        }
        
        public ValidateActivitiesForResourceResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool ValidateActivitiesForResourceResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.ValidateActivitiesForResourceResult = ValidateActivitiesForResourceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInternalTreeForDisconnected", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetInternalTreeForDisconnectedRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string resourceCategoryList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public int startingOutline;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public System.DateTime fdate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public System.DateTime tdate;
        
        public GetInternalTreeForDisconnectedRequest() {
        }
        
        public GetInternalTreeForDisconnectedRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string resourceCategoryList, int startingOutline, System.DateTime fdate, System.DateTime tdate) {
            this.ICERequestHeader = ICERequestHeader;
            this.resourceCategoryList = resourceCategoryList;
            this.startingOutline = startingOutline;
            this.fdate = fdate;
            this.tdate = tdate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInternalTreeForDisconnectedResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetInternalTreeForDisconnectedResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetInternalTreeForDisconnectedResult;
        
        public GetInternalTreeForDisconnectedResponse() {
        }
        
        public GetInternalTreeForDisconnectedResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetInternalTreeForDisconnectedResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetInternalTreeForDisconnectedResult = GetInternalTreeForDisconnectedResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivityListForDisconnectedForActualsEntry", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivityListForDisconnectedForActualsEntryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        public GetActivityListForDisconnectedForActualsEntryRequest() {
        }
        
        public GetActivityListForDisconnectedForActualsEntryRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader) {
            this.ICERequestHeader = ICERequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivityListForDisconnectedForActualsEntryResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivityListForDisconnectedForActualsEntryResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetActivityListForDisconnectedForActualsEntryResult;
        
        public GetActivityListForDisconnectedForActualsEntryResponse() {
        }
        
        public GetActivityListForDisconnectedForActualsEntryResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetActivityListForDisconnectedForActualsEntryResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActivityListForDisconnectedForActualsEntryResult = GetActivityListForDisconnectedForActualsEntryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectCodesForPMForTimeReport", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectCodesForPMForTimeReportRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string Filter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string endDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public string siteURN;
        
        public GetProjectCodesForPMForTimeReportRequest() {
        }
        
        public GetProjectCodesForPMForTimeReportRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string Filter, string startDate, string endDate, string siteURN) {
            this.ICERequestHeader = ICERequestHeader;
            this.Filter = Filter;
            this.startDate = startDate;
            this.endDate = endDate;
            this.siteURN = siteURN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectCodesForPMForTimeReportResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetProjectCodesForPMForTimeReportResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetProjectCodesForPMForTimeReportResult;
        
        public GetProjectCodesForPMForTimeReportResponse() {
        }
        
        public GetProjectCodesForPMForTimeReportResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetProjectCodesForPMForTimeReportResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetProjectCodesForPMForTimeReportResult = GetProjectCodesForPMForTimeReportResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeAndTaskETCForTimeEntry", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeAndTaskETCForTimeEntryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string TimeList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string ETCDoc;
        
        public UpdateTimeAndTaskETCForTimeEntryRequest() {
        }
        
        public UpdateTimeAndTaskETCForTimeEntryRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeList, string ETCDoc) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeList = TimeList;
            this.ETCDoc = ETCDoc;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeAndTaskETCForTimeEntryResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeAndTaskETCForTimeEntryResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool UpdateTimeAndTaskETCForTimeEntryResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.Xml.XmlNode FailedRecallTrx;
        
        public UpdateTimeAndTaskETCForTimeEntryResponse() {
        }
        
        public UpdateTimeAndTaskETCForTimeEntryResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool UpdateTimeAndTaskETCForTimeEntryResult, System.Xml.XmlNode FailedRecallTrx) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateTimeAndTaskETCForTimeEntryResult = UpdateTimeAndTaskETCForTimeEntryResult;
            this.FailedRecallTrx = FailedRecallTrx;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvalidTimeTransactionForRecall", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetInvalidTimeTransactionForRecallRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string TimeIDList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string SiteLocalOrRemote;
        
        public GetInvalidTimeTransactionForRecallRequest() {
        }
        
        public GetInvalidTimeTransactionForRecallRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeIDList, string SiteLocalOrRemote) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeIDList = TimeIDList;
            this.SiteLocalOrRemote = SiteLocalOrRemote;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvalidTimeTransactionForRecallResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetInvalidTimeTransactionForRecallResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string GetInvalidTimeTransactionForRecallResult;
        
        public GetInvalidTimeTransactionForRecallResponse() {
        }
        
        public GetInvalidTimeTransactionForRecallResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, string GetInvalidTimeTransactionForRecallResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetInvalidTimeTransactionForRecallResult = GetInvalidTimeTransactionForRecallResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartialTransferReverseAmountsForTimeID", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetPartialTransferReverseAmountsForTimeIDRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int originalTimeID;
        
        public GetPartialTransferReverseAmountsForTimeIDRequest() {
        }
        
        public GetPartialTransferReverseAmountsForTimeIDRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int originalTimeID) {
            this.ICERequestHeader = ICERequestHeader;
            this.originalTimeID = originalTimeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartialTransferReverseAmountsForTimeIDResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetPartialTransferReverseAmountsForTimeIDResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetPartialTransferReverseAmountsForTimeIDResult;
        
        public GetPartialTransferReverseAmountsForTimeIDResponse() {
        }
        
        public GetPartialTransferReverseAmountsForTimeIDResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetPartialTransferReverseAmountsForTimeIDResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetPartialTransferReverseAmountsForTimeIDResult = GetPartialTransferReverseAmountsForTimeIDResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeAndTaskETCForBatchTimeEntry", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeAndTaskETCForBatchTimeEntryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string TimeBatchWithDetails;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string DocTimeEntryETC;
        
        public UpdateTimeAndTaskETCForBatchTimeEntryRequest() {
        }
        
        public UpdateTimeAndTaskETCForBatchTimeEntryRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeBatchWithDetails, string DocTimeEntryETC) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeBatchWithDetails = TimeBatchWithDetails;
            this.DocTimeEntryETC = DocTimeEntryETC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeAndTaskETCForBatchTimeEntryResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeAndTaskETCForBatchTimeEntryResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool UpdateTimeAndTaskETCForBatchTimeEntryResult;
        
        public UpdateTimeAndTaskETCForBatchTimeEntryResponse() {
        }
        
        public UpdateTimeAndTaskETCForBatchTimeEntryResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool UpdateTimeAndTaskETCForBatchTimeEntryResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateTimeAndTaskETCForBatchTimeEntryResult = UpdateTimeAndTaskETCForBatchTimeEntryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeEntryForICE3", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeEntryForICE3Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string QuickEntryList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string ResourceID;
        
        public UpdateTimeEntryForICE3Request() {
        }
        
        public UpdateTimeEntryForICE3Request(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string QuickEntryList, string ResourceID) {
            this.ICERequestHeader = ICERequestHeader;
            this.QuickEntryList = QuickEntryList;
            this.ResourceID = ResourceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeEntryForICE3Response", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeEntryForICE3Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode UpdateTimeEntryForICE3Result;
        
        public UpdateTimeEntryForICE3Response() {
        }
        
        public UpdateTimeEntryForICE3Response(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode UpdateTimeEntryForICE3Result) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateTimeEntryForICE3Result = UpdateTimeEntryForICE3Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeDetailForICE3", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeDetailForICE3Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string TimeDetailDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string ResourceID;
        
        public UpdateTimeDetailForICE3Request() {
        }
        
        public UpdateTimeDetailForICE3Request(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeDetailDoc, string ResourceID) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeDetailDoc = TimeDetailDoc;
            this.ResourceID = ResourceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeDetailForICE3Response", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeDetailForICE3Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode UpdateTimeDetailForICE3Result;
        
        public UpdateTimeDetailForICE3Response() {
        }
        
        public UpdateTimeDetailForICE3Response(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode UpdateTimeDetailForICE3Result) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateTimeDetailForICE3Result = UpdateTimeDetailForICE3Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ApproveAllTimeForICE3", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class ApproveAllTimeForICE3Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ApproveDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string ResourceID;
        
        public ApproveAllTimeForICE3Request() {
        }
        
        public ApproveAllTimeForICE3Request(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ApproveDoc, string ResourceID) {
            this.ICERequestHeader = ICERequestHeader;
            this.ApproveDoc = ApproveDoc;
            this.ResourceID = ResourceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ApproveAllTimeForICE3Response", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class ApproveAllTimeForICE3Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode ApproveAllTimeForICE3Result;
        
        public ApproveAllTimeForICE3Response() {
        }
        
        public ApproveAllTimeForICE3Response(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode ApproveAllTimeForICE3Result) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.ApproveAllTimeForICE3Result = ApproveAllTimeForICE3Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeEntryByIDs", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeEntryByIDsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string TimeIDList;
        
        public GetTimeEntryByIDsRequest() {
        }
        
        public GetTimeEntryByIDsRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeIDList) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeIDList = TimeIDList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeEntryByIDsResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeEntryByIDsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeEntryByIDsResult;
        
        public GetTimeEntryByIDsResponse() {
        }
        
        public GetTimeEntryByIDsResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeEntryByIDsResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeEntryByIDsResult = GetTimeEntryByIDsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeDetail", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeDetailRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ResourceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string ResourceSiteURN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public System.DateTime FromDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public System.DateTime ToDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public string ApproverID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=5)]
        public string projList;
        
        public GetTimeDetailRequest() {
        }
        
        public GetTimeDetailRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ResourceID, string ResourceSiteURN, System.DateTime FromDate, System.DateTime ToDate, string ApproverID, string projList) {
            this.ICERequestHeader = ICERequestHeader;
            this.ResourceID = ResourceID;
            this.ResourceSiteURN = ResourceSiteURN;
            this.FromDate = FromDate;
            this.ToDate = ToDate;
            this.ApproverID = ApproverID;
            this.projList = projList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeDetailResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeDetailResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeDetailResult;
        
        public GetTimeDetailResponse() {
        }
        
        public GetTimeDetailResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeDetailResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeDetailResult = GetTimeDetailResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeDetail", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeDetailRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string TimeDetailDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string remoteFlag;
        
        public UpdateTimeDetailRequest() {
        }
        
        public UpdateTimeDetailRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeDetailDoc, string remoteFlag) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeDetailDoc = TimeDetailDoc;
            this.remoteFlag = remoteFlag;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeDetailResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeDetailResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode UpdateTimeDetailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.Xml.XmlNode TimeDetailDocUpdated;
        
        public UpdateTimeDetailResponse() {
        }
        
        public UpdateTimeDetailResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode UpdateTimeDetailResult, System.Xml.XmlNode TimeDetailDocUpdated) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateTimeDetailResult = UpdateTimeDetailResult;
            this.TimeDetailDocUpdated = TimeDetailDocUpdated;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePreviewTimeDetail", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdatePreviewTimeDetailRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string TimeDetailDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string remoteFlag;
        
        public UpdatePreviewTimeDetailRequest() {
        }
        
        public UpdatePreviewTimeDetailRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeDetailDoc, string remoteFlag) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeDetailDoc = TimeDetailDoc;
            this.remoteFlag = remoteFlag;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePreviewTimeDetailResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdatePreviewTimeDetailResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode UpdatePreviewTimeDetailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.Xml.XmlNode TimeDetailDocUpdated;
        
        public UpdatePreviewTimeDetailResponse() {
        }
        
        public UpdatePreviewTimeDetailResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode UpdatePreviewTimeDetailResult, System.Xml.XmlNode TimeDetailDocUpdated) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdatePreviewTimeDetailResult = UpdatePreviewTimeDetailResult;
            this.TimeDetailDocUpdated = TimeDetailDocUpdated;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNumOfApprovesForTimeID", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetNumOfApprovesForTimeIDRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int TimeID;
        
        public GetNumOfApprovesForTimeIDRequest() {
        }
        
        public GetNumOfApprovesForTimeIDRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int TimeID) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeID = TimeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNumOfApprovesForTimeIDResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetNumOfApprovesForTimeIDResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int GetNumOfApprovesForTimeIDResult;
        
        public GetNumOfApprovesForTimeIDResponse() {
        }
        
        public GetNumOfApprovesForTimeIDResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, int GetNumOfApprovesForTimeIDResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetNumOfApprovesForTimeIDResult = GetNumOfApprovesForTimeIDResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExistTimeApprover", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class ExistTimeApproverRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public int TimeID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string ApproverID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public string ApproverSiteURN;
        
        public ExistTimeApproverRequest() {
        }
        
        public ExistTimeApproverRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int TimeID, string ApproverID, string ApproverSiteURN) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeID = TimeID;
            this.ApproverID = ApproverID;
            this.ApproverSiteURN = ApproverSiteURN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExistTimeApproverResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class ExistTimeApproverResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public bool ExistTimeApproverResult;
        
        public ExistTimeApproverResponse() {
        }
        
        public ExistTimeApproverResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, bool ExistTimeApproverResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.ExistTimeApproverResult = ExistTimeApproverResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResourceListForProjectTime", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetResourceListForProjectTimeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.DateTime FromDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public System.DateTime ToDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public string ApproverID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=4)]
        public string sDisplay;
        
        public GetResourceListForProjectTimeRequest() {
        }
        
        public GetResourceListForProjectTimeRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, System.DateTime FromDate, System.DateTime ToDate, string ApproverID, string sDisplay) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCode = ProjectCode;
            this.FromDate = FromDate;
            this.ToDate = ToDate;
            this.ApproverID = ApproverID;
            this.sDisplay = sDisplay;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResourceListForProjectTimeResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetResourceListForProjectTimeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetResourceListForProjectTimeResult;
        
        public GetResourceListForProjectTimeResponse() {
        }
        
        public GetResourceListForProjectTimeResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetResourceListForProjectTimeResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetResourceListForProjectTimeResult = GetResourceListForProjectTimeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeDetailForProject", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeDetailForProjectRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ProjectCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public System.DateTime FromDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=2)]
        public System.DateTime ToDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=3)]
        public string ApproverID;
        
        public GetTimeDetailForProjectRequest() {
        }
        
        public GetTimeDetailForProjectRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, System.DateTime FromDate, System.DateTime ToDate, string ApproverID) {
            this.ICERequestHeader = ICERequestHeader;
            this.ProjectCode = ProjectCode;
            this.FromDate = FromDate;
            this.ToDate = ToDate;
            this.ApproverID = ApproverID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeDetailForProjectResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetTimeDetailForProjectResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetTimeDetailForProjectResult;
        
        public GetTimeDetailForProjectResponse() {
        }
        
        public GetTimeDetailForProjectResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetTimeDetailForProjectResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetTimeDetailForProjectResult = GetTimeDetailForProjectResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePreviewTimeDetailForProject", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdatePreviewTimeDetailForProjectRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string TimeDetailForProjectDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string remoteFlag;
        
        public UpdatePreviewTimeDetailForProjectRequest() {
        }
        
        public UpdatePreviewTimeDetailForProjectRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeDetailForProjectDoc, string remoteFlag) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeDetailForProjectDoc = TimeDetailForProjectDoc;
            this.remoteFlag = remoteFlag;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePreviewTimeDetailForProjectResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdatePreviewTimeDetailForProjectResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode UpdatePreviewTimeDetailForProjectResult;
        
        public UpdatePreviewTimeDetailForProjectResponse() {
        }
        
        public UpdatePreviewTimeDetailForProjectResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode UpdatePreviewTimeDetailForProjectResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdatePreviewTimeDetailForProjectResult = UpdatePreviewTimeDetailForProjectResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeDetailForProject", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeDetailForProjectRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string TimeDetailForProjectDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=1)]
        public string remoteFlag;
        
        public UpdateTimeDetailForProjectRequest() {
        }
        
        public UpdateTimeDetailForProjectRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeDetailForProjectDoc, string remoteFlag) {
            this.ICERequestHeader = ICERequestHeader;
            this.TimeDetailForProjectDoc = TimeDetailForProjectDoc;
            this.remoteFlag = remoteFlag;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTimeDetailForProjectResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateTimeDetailForProjectResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode UpdateTimeDetailForProjectResult;
        
        public UpdateTimeDetailForProjectResponse() {
        }
        
        public UpdateTimeDetailForProjectResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode UpdateTimeDetailForProjectResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.UpdateTimeDetailForProjectResult = UpdateTimeDetailForProjectResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivity", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string activityCode;
        
        public GetActivityRequest() {
        }
        
        public GetActivityRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string activityCode) {
            this.ICERequestHeader = ICERequestHeader;
            this.activityCode = activityCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivityResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetActivityResult;
        
        public GetActivityResponse() {
        }
        
        public GetActivityResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetActivityResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActivityResult = GetActivityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllActivities", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetAllActivitiesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        public GetAllActivitiesRequest() {
        }
        
        public GetAllActivitiesRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader) {
            this.ICERequestHeader = ICERequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllActivitiesResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetAllActivitiesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetAllActivitiesResult;
        
        public GetAllActivitiesResponse() {
        }
        
        public GetAllActivitiesResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetAllActivitiesResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetAllActivitiesResult = GetAllActivitiesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActiveActivities", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActiveActivitiesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        public GetActiveActivitiesRequest() {
        }
        
        public GetActiveActivitiesRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader) {
            this.ICERequestHeader = ICERequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActiveActivitiesResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActiveActivitiesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetActiveActivitiesResult;
        
        public GetActiveActivitiesResponse() {
        }
        
        public GetActiveActivitiesResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetActiveActivitiesResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActiveActivitiesResult = GetActiveActivitiesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivityGroup", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivityGroupRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ActivityGroupCode;
        
        public GetActivityGroupRequest() {
        }
        
        public GetActivityGroupRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityGroupCode) {
            this.ICERequestHeader = ICERequestHeader;
            this.ActivityGroupCode = ActivityGroupCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivityGroupResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActivityGroupResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetActivityGroupResult;
        
        public GetActivityGroupResponse() {
        }
        
        public GetActivityGroupResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetActivityGroupResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActivityGroupResult = GetActivityGroupResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateActivityGroup", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateActivityGroupRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ActivityGroup;
        
        public UpdateActivityGroupRequest() {
        }
        
        public UpdateActivityGroupRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityGroup) {
            this.ICERequestHeader = ICERequestHeader;
            this.ActivityGroup = ActivityGroup;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateActivityGroupResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class UpdateActivityGroupResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        public UpdateActivityGroupResponse() {
        }
        
        public UpdateActivityGroupResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader) {
            this.ICEResponseHeader = ICEResponseHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteActivityGroup", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class DeleteActivityGroupRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string ActivityGroupCode;
        
        public DeleteActivityGroupRequest() {
        }
        
        public DeleteActivityGroupRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityGroupCode) {
            this.ICERequestHeader = ICERequestHeader;
            this.ActivityGroupCode = ActivityGroupCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteActivityGroupResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class DeleteActivityGroupResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        public DeleteActivityGroupResponse() {
        }
        
        public DeleteActivityGroupResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader) {
            this.ICEResponseHeader = ICEResponseHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActiveActivitiesForSite", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActiveActivitiesForSiteRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public string SiteURN;
        
        public GetActiveActivitiesForSiteRequest() {
        }
        
        public GetActiveActivitiesForSiteRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string SiteURN) {
            this.ICERequestHeader = ICERequestHeader;
            this.SiteURN = SiteURN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActiveActivitiesForSiteResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActiveActivitiesForSiteResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetActiveActivitiesForSiteResult;
        
        public GetActiveActivitiesForSiteResponse() {
        }
        
        public GetActiveActivitiesForSiteResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetActiveActivitiesForSiteResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActiveActivitiesForSiteResult = GetActiveActivitiesForSiteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActiveInternalActivities", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActiveInternalActivitiesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        public GetActiveInternalActivitiesRequest() {
        }
        
        public GetActiveInternalActivitiesRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader) {
            this.ICERequestHeader = ICERequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActiveInternalActivitiesResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetActiveInternalActivitiesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetActiveInternalActivitiesResult;
        
        public GetActiveInternalActivitiesResponse() {
        }
        
        public GetActiveInternalActivitiesResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetActiveInternalActivitiesResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetActiveInternalActivitiesResult = GetActiveInternalActivitiesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExternalActivities", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetExternalActivitiesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader;
        
        public GetExternalActivitiesRequest() {
        }
        
        public GetExternalActivitiesRequest(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader) {
            this.ICERequestHeader = ICERequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExternalActivitiesResponse", WrapperNamespace="http://epicor.com/webservices/", IsWrapped=true)]
    public partial class GetExternalActivitiesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://epicor.com/ice/1/2")]
        public EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://epicor.com/webservices/", Order=0)]
        public System.Xml.XmlNode GetExternalActivitiesResult;
        
        public GetExternalActivitiesResponse() {
        }
        
        public GetExternalActivitiesResponse(EpicorLibrary.TimeService.ICEResponseHeader ICEResponseHeader, System.Xml.XmlNode GetExternalActivitiesResult) {
            this.ICEResponseHeader = ICEResponseHeader;
            this.GetExternalActivitiesResult = GetExternalActivitiesResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TimeWSSoapChannel : EpicorLibrary.TimeService.TimeWSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TimeWSSoapClient : System.ServiceModel.ClientBase<EpicorLibrary.TimeService.TimeWSSoap>, EpicorLibrary.TimeService.TimeWSSoap {
        
        public TimeWSSoapClient() {
        }
        
        public TimeWSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TimeWSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TimeWSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TimeWSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetInternalActivitiesResponse EpicorLibrary.TimeService.TimeWSSoap.GetInternalActivities(EpicorLibrary.TimeService.GetInternalActivitiesRequest request) {
            return base.Channel.GetInternalActivities(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetInternalActivities(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, out System.Xml.XmlNode GetInternalActivitiesResult) {
            EpicorLibrary.TimeService.GetInternalActivitiesRequest inValue = new EpicorLibrary.TimeService.GetInternalActivitiesRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            EpicorLibrary.TimeService.GetInternalActivitiesResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetInternalActivities(inValue);
            GetInternalActivitiesResult = retVal.GetInternalActivitiesResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateActivitiesResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateActivities(EpicorLibrary.TimeService.UpdateActivitiesRequest request) {
            return base.Channel.UpdateActivities(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateActivities(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityList, out bool UpdateActivitiesResult) {
            EpicorLibrary.TimeService.UpdateActivitiesRequest inValue = new EpicorLibrary.TimeService.UpdateActivitiesRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ActivityList = ActivityList;
            EpicorLibrary.TimeService.UpdateActivitiesResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateActivities(inValue);
            UpdateActivitiesResult = retVal.UpdateActivitiesResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.VerifyActivityDeleteResponse EpicorLibrary.TimeService.TimeWSSoap.VerifyActivityDelete(EpicorLibrary.TimeService.VerifyActivityDeleteRequest request) {
            return base.Channel.VerifyActivityDelete(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader VerifyActivityDelete(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityCode, out bool VerifyActivityDeleteResult) {
            EpicorLibrary.TimeService.VerifyActivityDeleteRequest inValue = new EpicorLibrary.TimeService.VerifyActivityDeleteRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ActivityCode = ActivityCode;
            EpicorLibrary.TimeService.VerifyActivityDeleteResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).VerifyActivityDelete(inValue);
            VerifyActivityDeleteResult = retVal.VerifyActivityDeleteResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.VerifyActivityResponse EpicorLibrary.TimeService.TimeWSSoap.VerifyActivity(EpicorLibrary.TimeService.VerifyActivityRequest request) {
            return base.Channel.VerifyActivity(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader VerifyActivity(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityCode, out bool VerifyActivityResult) {
            EpicorLibrary.TimeService.VerifyActivityRequest inValue = new EpicorLibrary.TimeService.VerifyActivityRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ActivityCode = ActivityCode;
            EpicorLibrary.TimeService.VerifyActivityResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).VerifyActivity(inValue);
            VerifyActivityResult = retVal.VerifyActivityResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.VerifyTimeForProjectTaskResponse EpicorLibrary.TimeService.TimeWSSoap.VerifyTimeForProjectTask(EpicorLibrary.TimeService.VerifyTimeForProjectTaskRequest request) {
            return base.Channel.VerifyTimeForProjectTask(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader VerifyTimeForProjectTask(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, int TaskUID, out bool VerifyTimeForProjectTaskResult) {
            EpicorLibrary.TimeService.VerifyTimeForProjectTaskRequest inValue = new EpicorLibrary.TimeService.VerifyTimeForProjectTaskRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCode = ProjectCode;
            inValue.TaskUID = TaskUID;
            EpicorLibrary.TimeService.VerifyTimeForProjectTaskResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).VerifyTimeForProjectTask(inValue);
            VerifyTimeForProjectTaskResult = retVal.VerifyTimeForProjectTaskResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.VerifyTimeForProjectResourceResponse EpicorLibrary.TimeService.TimeWSSoap.VerifyTimeForProjectResource(EpicorLibrary.TimeService.VerifyTimeForProjectResourceRequest request) {
            return base.Channel.VerifyTimeForProjectResource(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader VerifyTimeForProjectResource(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, string ResourceID, string ResourceSiteURN, out bool VerifyTimeForProjectResourceResult) {
            EpicorLibrary.TimeService.VerifyTimeForProjectResourceRequest inValue = new EpicorLibrary.TimeService.VerifyTimeForProjectResourceRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCode = ProjectCode;
            inValue.ResourceID = ResourceID;
            inValue.ResourceSiteURN = ResourceSiteURN;
            EpicorLibrary.TimeService.VerifyTimeForProjectResourceResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).VerifyTimeForProjectResource(inValue);
            VerifyTimeForProjectResourceResult = retVal.VerifyTimeForProjectResourceResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.VerifyNonApprovedTimeForActivityCodeResponse EpicorLibrary.TimeService.TimeWSSoap.VerifyNonApprovedTimeForActivityCode(EpicorLibrary.TimeService.VerifyNonApprovedTimeForActivityCodeRequest request) {
            return base.Channel.VerifyNonApprovedTimeForActivityCode(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader VerifyNonApprovedTimeForActivityCode(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityCode, out bool VerifyNonApprovedTimeForActivityCodeResult) {
            EpicorLibrary.TimeService.VerifyNonApprovedTimeForActivityCodeRequest inValue = new EpicorLibrary.TimeService.VerifyNonApprovedTimeForActivityCodeRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ActivityCode = ActivityCode;
            EpicorLibrary.TimeService.VerifyNonApprovedTimeForActivityCodeResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).VerifyNonApprovedTimeForActivityCode(inValue);
            VerifyNonApprovedTimeForActivityCodeResult = retVal.VerifyNonApprovedTimeForActivityCodeResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeEntryResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeEntry(EpicorLibrary.TimeService.GetTimeEntryRequest request) {
            return base.Channel.GetTimeEntry(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeEntry(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, string TaskUID, string ResourceID, System.DateTime FromDate, System.DateTime ToDate, out System.Xml.XmlNode GetTimeEntryResult) {
            EpicorLibrary.TimeService.GetTimeEntryRequest inValue = new EpicorLibrary.TimeService.GetTimeEntryRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCode = ProjectCode;
            inValue.TaskUID = TaskUID;
            inValue.ResourceID = ResourceID;
            inValue.FromDate = FromDate;
            inValue.ToDate = ToDate;
            EpicorLibrary.TimeService.GetTimeEntryResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeEntry(inValue);
            GetTimeEntryResult = retVal.GetTimeEntryResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetAllTimeEntriesResponse EpicorLibrary.TimeService.TimeWSSoap.GetAllTimeEntries(EpicorLibrary.TimeService.GetAllTimeEntriesRequest request) {
            return base.Channel.GetAllTimeEntries(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetAllTimeEntries(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ResourceID, System.DateTime FromDate, System.DateTime ToDate, System.DateTime preWeekRetrieveDate, System.DateTime postWeekRetrieveDate, out System.Xml.XmlNode GetAllTimeEntriesResult) {
            EpicorLibrary.TimeService.GetAllTimeEntriesRequest inValue = new EpicorLibrary.TimeService.GetAllTimeEntriesRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ResourceID = ResourceID;
            inValue.FromDate = FromDate;
            inValue.ToDate = ToDate;
            inValue.preWeekRetrieveDate = preWeekRetrieveDate;
            inValue.postWeekRetrieveDate = postWeekRetrieveDate;
            EpicorLibrary.TimeService.GetAllTimeEntriesResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetAllTimeEntries(inValue);
            GetAllTimeEntriesResult = retVal.GetAllTimeEntriesResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTimeListResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateTimeList(EpicorLibrary.TimeService.UpdateTimeListRequest request) {
            return base.Channel.UpdateTimeList(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTimeList(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeList, out bool UpdateTimeListResult, out System.Xml.XmlNode FailedRecallTrx) {
            EpicorLibrary.TimeService.UpdateTimeListRequest inValue = new EpicorLibrary.TimeService.UpdateTimeListRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeList = TimeList;
            EpicorLibrary.TimeService.UpdateTimeListResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTimeList(inValue);
            UpdateTimeListResult = retVal.UpdateTimeListResult;
            FailedRecallTrx = retVal.FailedRecallTrx;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeEntryByIDResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeEntryByID(EpicorLibrary.TimeService.GetTimeEntryByIDRequest request) {
            return base.Channel.GetTimeEntryByID(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeEntryByID(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int TimeID, out System.Xml.XmlNode GetTimeEntryByIDResult) {
            EpicorLibrary.TimeService.GetTimeEntryByIDRequest inValue = new EpicorLibrary.TimeService.GetTimeEntryByIDRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeID = TimeID;
            EpicorLibrary.TimeService.GetTimeEntryByIDResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeEntryByID(inValue);
            GetTimeEntryByIDResult = retVal.GetTimeEntryByIDResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTimeEntryByIDResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateTimeEntryByID(EpicorLibrary.TimeService.UpdateTimeEntryByIDRequest request) {
            return base.Channel.UpdateTimeEntryByID(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTimeEntryByID(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string GetTimeEntryByID, out bool UpdateTimeEntryByIDResult) {
            EpicorLibrary.TimeService.UpdateTimeEntryByIDRequest inValue = new EpicorLibrary.TimeService.UpdateTimeEntryByIDRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.GetTimeEntryByID = GetTimeEntryByID;
            EpicorLibrary.TimeService.UpdateTimeEntryByIDResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTimeEntryByID(inValue);
            UpdateTimeEntryByIDResult = retVal.UpdateTimeEntryByIDResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTimeBatchEntriesResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateTimeBatchEntries(EpicorLibrary.TimeService.UpdateTimeBatchEntriesRequest request) {
            return base.Channel.UpdateTimeBatchEntries(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTimeBatchEntries(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeBatchWithDetails, out string UpdateTimeBatchEntriesResult) {
            EpicorLibrary.TimeService.UpdateTimeBatchEntriesRequest inValue = new EpicorLibrary.TimeService.UpdateTimeBatchEntriesRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeBatchWithDetails = TimeBatchWithDetails;
            EpicorLibrary.TimeService.UpdateTimeBatchEntriesResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTimeBatchEntries(inValue);
            UpdateTimeBatchEntriesResult = retVal.UpdateTimeBatchEntriesResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeBatchHeaderResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeBatchHeader(EpicorLibrary.TimeService.GetTimeBatchHeaderRequest request) {
            return base.Channel.GetTimeBatchHeader(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeBatchHeader(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int BatchID, out System.Xml.XmlNode GetTimeBatchHeaderResult) {
            EpicorLibrary.TimeService.GetTimeBatchHeaderRequest inValue = new EpicorLibrary.TimeService.GetTimeBatchHeaderRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.BatchID = BatchID;
            EpicorLibrary.TimeService.GetTimeBatchHeaderResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeBatchHeader(inValue);
            GetTimeBatchHeaderResult = retVal.GetTimeBatchHeaderResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetNextTimeBatchSeqIDResponse EpicorLibrary.TimeService.TimeWSSoap.GetNextTimeBatchSeqID(EpicorLibrary.TimeService.GetNextTimeBatchSeqIDRequest request) {
            return base.Channel.GetNextTimeBatchSeqID(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetNextTimeBatchSeqID(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, out int GetNextTimeBatchSeqIDResult) {
            EpicorLibrary.TimeService.GetNextTimeBatchSeqIDRequest inValue = new EpicorLibrary.TimeService.GetNextTimeBatchSeqIDRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            EpicorLibrary.TimeService.GetNextTimeBatchSeqIDResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetNextTimeBatchSeqID(inValue);
            GetNextTimeBatchSeqIDResult = retVal.GetNextTimeBatchSeqIDResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.VerifyTimeBatchResponse EpicorLibrary.TimeService.TimeWSSoap.VerifyTimeBatch(EpicorLibrary.TimeService.VerifyTimeBatchRequest request) {
            return base.Channel.VerifyTimeBatch(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader VerifyTimeBatch(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int BatchID, out bool VerifyTimeBatchResult) {
            EpicorLibrary.TimeService.VerifyTimeBatchRequest inValue = new EpicorLibrary.TimeService.VerifyTimeBatchRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.BatchID = BatchID;
            EpicorLibrary.TimeService.VerifyTimeBatchResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).VerifyTimeBatch(inValue);
            VerifyTimeBatchResult = retVal.VerifyTimeBatchResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.DeleteTimeBatchResponse EpicorLibrary.TimeService.TimeWSSoap.DeleteTimeBatch(EpicorLibrary.TimeService.DeleteTimeBatchRequest request) {
            return base.Channel.DeleteTimeBatch(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader DeleteTimeBatch(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int BatchID, out bool DeleteTimeBatchResult) {
            EpicorLibrary.TimeService.DeleteTimeBatchRequest inValue = new EpicorLibrary.TimeService.DeleteTimeBatchRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.BatchID = BatchID;
            EpicorLibrary.TimeService.DeleteTimeBatchResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).DeleteTimeBatch(inValue);
            DeleteTimeBatchResult = retVal.DeleteTimeBatchResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetAllTimeBatchEntriesResponse EpicorLibrary.TimeService.TimeWSSoap.GetAllTimeBatchEntries(EpicorLibrary.TimeService.GetAllTimeBatchEntriesRequest request) {
            return base.Channel.GetAllTimeBatchEntries(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetAllTimeBatchEntries(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int BatchID, out System.Xml.XmlNode GetAllTimeBatchEntriesResult) {
            EpicorLibrary.TimeService.GetAllTimeBatchEntriesRequest inValue = new EpicorLibrary.TimeService.GetAllTimeBatchEntriesRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.BatchID = BatchID;
            EpicorLibrary.TimeService.GetAllTimeBatchEntriesResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetAllTimeBatchEntries(inValue);
            GetAllTimeBatchEntriesResult = retVal.GetAllTimeBatchEntriesResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTaskETCResponse EpicorLibrary.TimeService.TimeWSSoap.GetTaskETC(EpicorLibrary.TimeService.GetTaskETCRequest request) {
            return base.Channel.GetTaskETC(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTaskETC(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectTree, string ResourceID, string ResourceSiteURN, out System.Xml.XmlNode GetTaskETCResult) {
            EpicorLibrary.TimeService.GetTaskETCRequest inValue = new EpicorLibrary.TimeService.GetTaskETCRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectTree = ProjectTree;
            inValue.ResourceID = ResourceID;
            inValue.ResourceSiteURN = ResourceSiteURN;
            EpicorLibrary.TimeService.GetTaskETCResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTaskETC(inValue);
            GetTaskETCResult = retVal.GetTaskETCResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTaskETCResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateTaskETC(EpicorLibrary.TimeService.UpdateTaskETCRequest request) {
            return base.Channel.UpdateTaskETC(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTaskETC(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TaskEstimateToComplete, out bool UpdateTaskETCResult) {
            EpicorLibrary.TimeService.UpdateTaskETCRequest inValue = new EpicorLibrary.TimeService.UpdateTaskETCRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TaskEstimateToComplete = TaskEstimateToComplete;
            EpicorLibrary.TimeService.UpdateTaskETCResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTaskETC(inValue);
            UpdateTaskETCResult = retVal.UpdateTaskETCResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeActualAndETCForProjectTasksResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeActualAndETCForProjectTasks(EpicorLibrary.TimeService.GetTimeActualAndETCForProjectTasksRequest request) {
            return base.Channel.GetTimeActualAndETCForProjectTasks(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeActualAndETCForProjectTasks(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TaskList, out System.Xml.XmlNode GetTimeActualAndETCForProjectTasksResult) {
            EpicorLibrary.TimeService.GetTimeActualAndETCForProjectTasksRequest inValue = new EpicorLibrary.TimeService.GetTimeActualAndETCForProjectTasksRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TaskList = TaskList;
            EpicorLibrary.TimeService.GetTimeActualAndETCForProjectTasksResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeActualAndETCForProjectTasks(inValue);
            GetTimeActualAndETCForProjectTasksResult = retVal.GetTimeActualAndETCForProjectTasksResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTaskETCForProjectResponse EpicorLibrary.TimeService.TimeWSSoap.GetTaskETCForProject(EpicorLibrary.TimeService.GetTaskETCForProjectRequest request) {
            return base.Channel.GetTaskETCForProject(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTaskETCForProject(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, string ResourceID, string ResourceSiteURN, string ProjectSiteURN, out System.Xml.XmlNode GetTaskETCForProjectResult) {
            EpicorLibrary.TimeService.GetTaskETCForProjectRequest inValue = new EpicorLibrary.TimeService.GetTaskETCForProjectRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCode = ProjectCode;
            inValue.ResourceID = ResourceID;
            inValue.ResourceSiteURN = ResourceSiteURN;
            inValue.ProjectSiteURN = ProjectSiteURN;
            EpicorLibrary.TimeService.GetTaskETCForProjectResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTaskETCForProject(inValue);
            GetTaskETCForProjectResult = retVal.GetTaskETCForProjectResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActualTimeCostAndChargeResponse EpicorLibrary.TimeService.TimeWSSoap.GetActualTimeCostAndCharge(EpicorLibrary.TimeService.GetActualTimeCostAndChargeRequest request) {
            return base.Channel.GetActualTimeCostAndCharge(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActualTimeCostAndCharge(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCodes, out System.Xml.XmlNode GetActualTimeCostAndChargeResult) {
            EpicorLibrary.TimeService.GetActualTimeCostAndChargeRequest inValue = new EpicorLibrary.TimeService.GetActualTimeCostAndChargeRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCodes = ProjectCodes;
            EpicorLibrary.TimeService.GetActualTimeCostAndChargeResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActualTimeCostAndCharge(inValue);
            GetActualTimeCostAndChargeResult = retVal.GetActualTimeCostAndChargeResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetApprovalsByResourceTimeTreeResponse EpicorLibrary.TimeService.TimeWSSoap.GetApprovalsByResourceTimeTree(EpicorLibrary.TimeService.GetApprovalsByResourceTimeTreeRequest request) {
            return base.Channel.GetApprovalsByResourceTimeTree(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetApprovalsByResourceTimeTree(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ApproverID, System.DateTime FromDate, System.DateTime ToDate, string projList, out System.Xml.XmlNode GetApprovalsByResourceTimeTreeResult) {
            EpicorLibrary.TimeService.GetApprovalsByResourceTimeTreeRequest inValue = new EpicorLibrary.TimeService.GetApprovalsByResourceTimeTreeRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ApproverID = ApproverID;
            inValue.FromDate = FromDate;
            inValue.ToDate = ToDate;
            inValue.projList = projList;
            EpicorLibrary.TimeService.GetApprovalsByResourceTimeTreeResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetApprovalsByResourceTimeTree(inValue);
            GetApprovalsByResourceTimeTreeResult = retVal.GetApprovalsByResourceTimeTreeResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetApprovalsByProjectTimeTreeResponse EpicorLibrary.TimeService.TimeWSSoap.GetApprovalsByProjectTimeTree(EpicorLibrary.TimeService.GetApprovalsByProjectTimeTreeRequest request) {
            return base.Channel.GetApprovalsByProjectTimeTree(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetApprovalsByProjectTimeTree(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ApproverID, System.DateTime FromDate, System.DateTime ToDate, out System.Xml.XmlNode GetApprovalsByProjectTimeTreeResult) {
            EpicorLibrary.TimeService.GetApprovalsByProjectTimeTreeRequest inValue = new EpicorLibrary.TimeService.GetApprovalsByProjectTimeTreeRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ApproverID = ApproverID;
            inValue.FromDate = FromDate;
            inValue.ToDate = ToDate;
            EpicorLibrary.TimeService.GetApprovalsByProjectTimeTreeResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetApprovalsByProjectTimeTree(inValue);
            GetApprovalsByProjectTimeTreeResult = retVal.GetApprovalsByProjectTimeTreeResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeHomeCostAndChargeForProjectsResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeHomeCostAndChargeForProjects(EpicorLibrary.TimeService.GetTimeHomeCostAndChargeForProjectsRequest request) {
            return base.Channel.GetTimeHomeCostAndChargeForProjects(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeHomeCostAndChargeForProjects(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCodes, out System.Xml.XmlNode GetTimeHomeCostAndChargeForProjectsResult) {
            EpicorLibrary.TimeService.GetTimeHomeCostAndChargeForProjectsRequest inValue = new EpicorLibrary.TimeService.GetTimeHomeCostAndChargeForProjectsRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCodes = ProjectCodes;
            EpicorLibrary.TimeService.GetTimeHomeCostAndChargeForProjectsResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeHomeCostAndChargeForProjects(inValue);
            GetTimeHomeCostAndChargeForProjectsResult = retVal.GetTimeHomeCostAndChargeForProjectsResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeOperCostAndChargeForProjectsResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeOperCostAndChargeForProjects(EpicorLibrary.TimeService.GetTimeOperCostAndChargeForProjectsRequest request) {
            return base.Channel.GetTimeOperCostAndChargeForProjects(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeOperCostAndChargeForProjects(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCodes, out System.Xml.XmlNode GetTimeOperCostAndChargeForProjectsResult) {
            EpicorLibrary.TimeService.GetTimeOperCostAndChargeForProjectsRequest inValue = new EpicorLibrary.TimeService.GetTimeOperCostAndChargeForProjectsRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCodes = ProjectCodes;
            EpicorLibrary.TimeService.GetTimeOperCostAndChargeForProjectsResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeOperCostAndChargeForProjects(inValue);
            GetTimeOperCostAndChargeForProjectsResult = retVal.GetTimeOperCostAndChargeForProjectsResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeETCResourceApprovedHoursResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeETCResourceApprovedHours(EpicorLibrary.TimeService.GetTimeETCResourceApprovedHoursRequest request) {
            return base.Channel.GetTimeETCResourceApprovedHours(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeETCResourceApprovedHours(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, out System.Xml.XmlNode GetTimeETCResourceApprovedHoursResult) {
            EpicorLibrary.TimeService.GetTimeETCResourceApprovedHoursRequest inValue = new EpicorLibrary.TimeService.GetTimeETCResourceApprovedHoursRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCode = ProjectCode;
            EpicorLibrary.TimeService.GetTimeETCResourceApprovedHoursResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeETCResourceApprovedHours(inValue);
            GetTimeETCResourceApprovedHoursResult = retVal.GetTimeETCResourceApprovedHoursResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActualTimeForProjectsResponse EpicorLibrary.TimeService.TimeWSSoap.GetActualTimeForProjects(EpicorLibrary.TimeService.GetActualTimeForProjectsRequest request) {
            return base.Channel.GetActualTimeForProjects(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActualTimeForProjects(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCodes, out System.Xml.XmlNode GetActualTimeForProjectsResult) {
            EpicorLibrary.TimeService.GetActualTimeForProjectsRequest inValue = new EpicorLibrary.TimeService.GetActualTimeForProjectsRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCodes = ProjectCodes;
            EpicorLibrary.TimeService.GetActualTimeForProjectsResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActualTimeForProjects(inValue);
            GetActualTimeForProjectsResult = retVal.GetActualTimeForProjectsResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.VerifyActiveInternalActivityResponse EpicorLibrary.TimeService.TimeWSSoap.VerifyActiveInternalActivity(EpicorLibrary.TimeService.VerifyActiveInternalActivityRequest request) {
            return base.Channel.VerifyActiveInternalActivity(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader VerifyActiveInternalActivity(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityCode, out bool VerifyActiveInternalActivityResult) {
            EpicorLibrary.TimeService.VerifyActiveInternalActivityRequest inValue = new EpicorLibrary.TimeService.VerifyActiveInternalActivityRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ActivityCode = ActivityCode;
            EpicorLibrary.TimeService.VerifyActiveInternalActivityResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).VerifyActiveInternalActivity(inValue);
            VerifyActiveInternalActivityResult = retVal.VerifyActiveInternalActivityResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.VerifyActiveExternalActivityResponse EpicorLibrary.TimeService.TimeWSSoap.VerifyActiveExternalActivity(EpicorLibrary.TimeService.VerifyActiveExternalActivityRequest request) {
            return base.Channel.VerifyActiveExternalActivity(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader VerifyActiveExternalActivity(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityCode, out bool VerifyActiveExternalActivityResult) {
            EpicorLibrary.TimeService.VerifyActiveExternalActivityRequest inValue = new EpicorLibrary.TimeService.VerifyActiveExternalActivityRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ActivityCode = ActivityCode;
            EpicorLibrary.TimeService.VerifyActiveExternalActivityResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).VerifyActiveExternalActivity(inValue);
            VerifyActiveExternalActivityResult = retVal.VerifyActiveExternalActivityResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.VerifyActivityStatusResponse EpicorLibrary.TimeService.TimeWSSoap.VerifyActivityStatus(EpicorLibrary.TimeService.VerifyActivityStatusRequest request) {
            return base.Channel.VerifyActivityStatus(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader VerifyActivityStatus(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityCode, int TypeActivity, out int VerifyActivityStatusResult) {
            EpicorLibrary.TimeService.VerifyActivityStatusRequest inValue = new EpicorLibrary.TimeService.VerifyActivityStatusRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ActivityCode = ActivityCode;
            inValue.TypeActivity = TypeActivity;
            EpicorLibrary.TimeService.VerifyActivityStatusResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).VerifyActivityStatus(inValue);
            VerifyActivityStatusResult = retVal.VerifyActivityStatusResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetSiteExternalActivitiesResponse EpicorLibrary.TimeService.TimeWSSoap.GetSiteExternalActivities(EpicorLibrary.TimeService.GetSiteExternalActivitiesRequest request) {
            return base.Channel.GetSiteExternalActivities(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetSiteExternalActivities(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string SiteURN, out System.Xml.XmlNode GetSiteExternalActivitiesResult) {
            EpicorLibrary.TimeService.GetSiteExternalActivitiesRequest inValue = new EpicorLibrary.TimeService.GetSiteExternalActivitiesRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.SiteURN = SiteURN;
            EpicorLibrary.TimeService.GetSiteExternalActivitiesResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetSiteExternalActivities(inValue);
            GetSiteExternalActivitiesResult = retVal.GetSiteExternalActivitiesResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.SearchTimeTransactionsResponse EpicorLibrary.TimeService.TimeWSSoap.SearchTimeTransactions(EpicorLibrary.TimeService.SearchTimeTransactionsRequest request) {
            return base.Channel.SearchTimeTransactions(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader SearchTimeTransactions(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string xmlCriteriaDoc, out System.Xml.XmlNode SearchTimeTransactionsResult) {
            EpicorLibrary.TimeService.SearchTimeTransactionsRequest inValue = new EpicorLibrary.TimeService.SearchTimeTransactionsRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.xmlCriteriaDoc = xmlCriteriaDoc;
            EpicorLibrary.TimeService.SearchTimeTransactionsResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).SearchTimeTransactions(inValue);
            SearchTimeTransactionsResult = retVal.SearchTimeTransactionsResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTimeTransactionsResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateTimeTransactions(EpicorLibrary.TimeService.UpdateTimeTransactionsRequest request) {
            return base.Channel.UpdateTimeTransactions(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTimeTransactions(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string xmlTimeTransactions, out bool UpdateTimeTransactionsResult) {
            EpicorLibrary.TimeService.UpdateTimeTransactionsRequest inValue = new EpicorLibrary.TimeService.UpdateTimeTransactionsRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.xmlTimeTransactions = xmlTimeTransactions;
            EpicorLibrary.TimeService.UpdateTimeTransactionsResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTimeTransactions(inValue);
            UpdateTimeTransactionsResult = retVal.UpdateTimeTransactionsResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTimeReversalsForSiteResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateTimeReversalsForSite(EpicorLibrary.TimeService.UpdateTimeReversalsForSiteRequest request) {
            return base.Channel.UpdateTimeReversalsForSite(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTimeReversalsForSite(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string xmlTimeTransactions, out bool UpdateTimeReversalsForSiteResult) {
            EpicorLibrary.TimeService.UpdateTimeReversalsForSiteRequest inValue = new EpicorLibrary.TimeService.UpdateTimeReversalsForSiteRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.xmlTimeTransactions = xmlTimeTransactions;
            EpicorLibrary.TimeService.UpdateTimeReversalsForSiteResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTimeReversalsForSite(inValue);
            UpdateTimeReversalsForSiteResult = retVal.UpdateTimeReversalsForSiteResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTimeTransfersForSiteResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateTimeTransfersForSite(EpicorLibrary.TimeService.UpdateTimeTransfersForSiteRequest request) {
            return base.Channel.UpdateTimeTransfersForSite(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTimeTransfersForSite(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string xmlTimeTransactions, out bool UpdateTimeTransfersForSiteResult) {
            EpicorLibrary.TimeService.UpdateTimeTransfersForSiteRequest inValue = new EpicorLibrary.TimeService.UpdateTimeTransfersForSiteRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.xmlTimeTransactions = xmlTimeTransactions;
            EpicorLibrary.TimeService.UpdateTimeTransfersForSiteResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTimeTransfersForSite(inValue);
            UpdateTimeTransfersForSiteResult = retVal.UpdateTimeTransfersForSiteResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.CalculateTotalsResponse EpicorLibrary.TimeService.TimeWSSoap.CalculateTotals(EpicorLibrary.TimeService.CalculateTotalsRequest request) {
            return base.Channel.CalculateTotals(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader CalculateTotals(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string xmlTimeTransactions, out System.Xml.XmlNode CalculateTotalsResult) {
            EpicorLibrary.TimeService.CalculateTotalsRequest inValue = new EpicorLibrary.TimeService.CalculateTotalsRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.xmlTimeTransactions = xmlTimeTransactions;
            EpicorLibrary.TimeService.CalculateTotalsResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).CalculateTotals(inValue);
            CalculateTotalsResult = retVal.CalculateTotalsResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeEntryIncludingMCByIDResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeEntryIncludingMCByID(EpicorLibrary.TimeService.GetTimeEntryIncludingMCByIDRequest request) {
            return base.Channel.GetTimeEntryIncludingMCByID(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeEntryIncludingMCByID(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int TimeID, out System.Xml.XmlNode GetTimeEntryIncludingMCByIDResult) {
            EpicorLibrary.TimeService.GetTimeEntryIncludingMCByIDRequest inValue = new EpicorLibrary.TimeService.GetTimeEntryIncludingMCByIDRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeID = TimeID;
            EpicorLibrary.TimeService.GetTimeEntryIncludingMCByIDResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeEntryIncludingMCByID(inValue);
            GetTimeEntryIncludingMCByIDResult = retVal.GetTimeEntryIncludingMCByIDResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetProjectActualRollupStandardHoursResponse EpicorLibrary.TimeService.TimeWSSoap.GetProjectActualRollupStandardHours(EpicorLibrary.TimeService.GetProjectActualRollupStandardHoursRequest request) {
            return base.Channel.GetProjectActualRollupStandardHours(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetProjectActualRollupStandardHours(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCodes, out System.Xml.XmlNode GetProjectActualRollupStandardHoursResult) {
            EpicorLibrary.TimeService.GetProjectActualRollupStandardHoursRequest inValue = new EpicorLibrary.TimeService.GetProjectActualRollupStandardHoursRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCodes = ProjectCodes;
            EpicorLibrary.TimeService.GetProjectActualRollupStandardHoursResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetProjectActualRollupStandardHours(inValue);
            GetProjectActualRollupStandardHoursResult = retVal.GetProjectActualRollupStandardHoursResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetProjectActualRollupOvertimeHoursResponse EpicorLibrary.TimeService.TimeWSSoap.GetProjectActualRollupOvertimeHours(EpicorLibrary.TimeService.GetProjectActualRollupOvertimeHoursRequest request) {
            return base.Channel.GetProjectActualRollupOvertimeHours(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetProjectActualRollupOvertimeHours(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCodes, out System.Xml.XmlNode GetProjectActualRollupOvertimeHoursResult) {
            EpicorLibrary.TimeService.GetProjectActualRollupOvertimeHoursRequest inValue = new EpicorLibrary.TimeService.GetProjectActualRollupOvertimeHoursRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCodes = ProjectCodes;
            EpicorLibrary.TimeService.GetProjectActualRollupOvertimeHoursResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetProjectActualRollupOvertimeHours(inValue);
            GetProjectActualRollupOvertimeHoursResult = retVal.GetProjectActualRollupOvertimeHoursResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeEntryOnLoadDataResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeEntryOnLoadData(EpicorLibrary.TimeService.GetTimeEntryOnLoadDataRequest request) {
            return base.Channel.GetTimeEntryOnLoadData(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeEntryOnLoadData(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, out string LoginID, out string ResourceID, out string SiteURN, out int FirstDOW, out System.DateTime SQLDate, out System.Xml.XmlNode xmlResourceAndEntityPrefForResource, out System.Xml.XmlNode xmlInternalActivityList, out System.Xml.XmlNode xmlExternalActivityList, out System.Xml.XmlNode xmlTimeTypeList, out System.Xml.XmlNode xmlActivityGroups, out System.Xml.XmlNode xmlActivities) {
            EpicorLibrary.TimeService.GetTimeEntryOnLoadDataRequest inValue = new EpicorLibrary.TimeService.GetTimeEntryOnLoadDataRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            EpicorLibrary.TimeService.GetTimeEntryOnLoadDataResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeEntryOnLoadData(inValue);
            LoginID = retVal.LoginID;
            ResourceID = retVal.ResourceID;
            SiteURN = retVal.SiteURN;
            FirstDOW = retVal.FirstDOW;
            SQLDate = retVal.SQLDate;
            xmlResourceAndEntityPrefForResource = retVal.xmlResourceAndEntityPrefForResource;
            xmlInternalActivityList = retVal.xmlInternalActivityList;
            xmlExternalActivityList = retVal.xmlExternalActivityList;
            xmlTimeTypeList = retVal.xmlTimeTypeList;
            xmlActivityGroups = retVal.xmlActivityGroups;
            xmlActivities = retVal.xmlActivities;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeOnLoadDataResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeOnLoadData(EpicorLibrary.TimeService.GetTimeOnLoadDataRequest request) {
            return base.Channel.GetTimeOnLoadData(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeOnLoadData(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProxyResourceID, out string LoginID, out string ResourceID, out string SiteURN, out int FirstDOW, out System.DateTime SQLDate, out System.Xml.XmlNode xmlResourceAndEntityPrefForResource, out System.Xml.XmlNode xmlResourceCategoryForResourceID, out System.Xml.XmlNode xmlWorkHourListForResource) {
            EpicorLibrary.TimeService.GetTimeOnLoadDataRequest inValue = new EpicorLibrary.TimeService.GetTimeOnLoadDataRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProxyResourceID = ProxyResourceID;
            EpicorLibrary.TimeService.GetTimeOnLoadDataResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeOnLoadData(inValue);
            LoginID = retVal.LoginID;
            ResourceID = retVal.ResourceID;
            SiteURN = retVal.SiteURN;
            FirstDOW = retVal.FirstDOW;
            SQLDate = retVal.SQLDate;
            xmlResourceAndEntityPrefForResource = retVal.xmlResourceAndEntityPrefForResource;
            xmlResourceCategoryForResourceID = retVal.xmlResourceCategoryForResourceID;
            xmlWorkHourListForResource = retVal.xmlWorkHourListForResource;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeEntryOnLoadDataDisconnectedResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeEntryOnLoadDataDisconnected(EpicorLibrary.TimeService.GetTimeEntryOnLoadDataDisconnectedRequest request) {
            return base.Channel.GetTimeEntryOnLoadDataDisconnected(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeEntryOnLoadDataDisconnected(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, System.DateTime FirstDateRange, System.DateTime LastDateRange, out string LoginID, out string ResourceID, out string SiteURN, out int FirstDOW, out System.DateTime SQLDate, out System.Xml.XmlNode xmlResourceAndEntityPrefForResource, out System.Xml.XmlNode xmlInternalActivityList, out System.Xml.XmlNode xmlExternalActivityList, out System.Xml.XmlNode xmlTimeTypeList, out System.Xml.XmlNode xmlActivityGroups, out System.Xml.XmlNode xmlActivities) {
            EpicorLibrary.TimeService.GetTimeEntryOnLoadDataDisconnectedRequest inValue = new EpicorLibrary.TimeService.GetTimeEntryOnLoadDataDisconnectedRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.FirstDateRange = FirstDateRange;
            inValue.LastDateRange = LastDateRange;
            EpicorLibrary.TimeService.GetTimeEntryOnLoadDataDisconnectedResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeEntryOnLoadDataDisconnected(inValue);
            LoginID = retVal.LoginID;
            ResourceID = retVal.ResourceID;
            SiteURN = retVal.SiteURN;
            FirstDOW = retVal.FirstDOW;
            SQLDate = retVal.SQLDate;
            xmlResourceAndEntityPrefForResource = retVal.xmlResourceAndEntityPrefForResource;
            xmlInternalActivityList = retVal.xmlInternalActivityList;
            xmlExternalActivityList = retVal.xmlExternalActivityList;
            xmlTimeTypeList = retVal.xmlTimeTypeList;
            xmlActivityGroups = retVal.xmlActivityGroups;
            xmlActivities = retVal.xmlActivities;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActivitiesFromActivityGroupsResponse EpicorLibrary.TimeService.TimeWSSoap.GetActivitiesFromActivityGroups(EpicorLibrary.TimeService.GetActivitiesFromActivityGroupsRequest request) {
            return base.Channel.GetActivitiesFromActivityGroups(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActivitiesFromActivityGroups(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityGroupCode, out System.Xml.XmlNode GetActivitiesFromActivityGroupsResult) {
            EpicorLibrary.TimeService.GetActivitiesFromActivityGroupsRequest inValue = new EpicorLibrary.TimeService.GetActivitiesFromActivityGroupsRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ActivityGroupCode = ActivityGroupCode;
            EpicorLibrary.TimeService.GetActivitiesFromActivityGroupsResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActivitiesFromActivityGroups(inValue);
            GetActivitiesFromActivityGroupsResult = retVal.GetActivitiesFromActivityGroupsResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActivitiesForTheWeekResponse EpicorLibrary.TimeService.TimeWSSoap.GetActivitiesForTheWeek(EpicorLibrary.TimeService.GetActivitiesForTheWeekRequest request) {
            return base.Channel.GetActivitiesForTheWeek(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActivitiesForTheWeek(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ResourceID, int FirstDOW, System.DateTime currentDateTime, System.DateTime LastDateTime, out System.Xml.XmlNode xmlActivityGroups, out System.Xml.XmlNode xmlActivities, out System.Xml.XmlNode xmlInternalActivityList, out System.Xml.XmlNode xmlExternalActivityList) {
            EpicorLibrary.TimeService.GetActivitiesForTheWeekRequest inValue = new EpicorLibrary.TimeService.GetActivitiesForTheWeekRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ResourceID = ResourceID;
            inValue.FirstDOW = FirstDOW;
            inValue.currentDateTime = currentDateTime;
            inValue.LastDateTime = LastDateTime;
            EpicorLibrary.TimeService.GetActivitiesForTheWeekResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActivitiesForTheWeek(inValue);
            xmlActivityGroups = retVal.xmlActivityGroups;
            xmlActivities = retVal.xmlActivities;
            xmlInternalActivityList = retVal.xmlInternalActivityList;
            xmlExternalActivityList = retVal.xmlExternalActivityList;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.FillEmptyActivitiesResponse EpicorLibrary.TimeService.TimeWSSoap.FillEmptyActivities(EpicorLibrary.TimeService.FillEmptyActivitiesRequest request) {
            return base.Channel.FillEmptyActivities(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader FillEmptyActivities(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string InternalFlag, out System.Xml.XmlNode FillEmptyActivitiesResult) {
            EpicorLibrary.TimeService.FillEmptyActivitiesRequest inValue = new EpicorLibrary.TimeService.FillEmptyActivitiesRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.InternalFlag = InternalFlag;
            EpicorLibrary.TimeService.FillEmptyActivitiesResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).FillEmptyActivities(inValue);
            FillEmptyActivitiesResult = retVal.FillEmptyActivitiesResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActivitiesForTheDayResponse EpicorLibrary.TimeService.TimeWSSoap.GetActivitiesForTheDay(EpicorLibrary.TimeService.GetActivitiesForTheDayRequest request) {
            return base.Channel.GetActivitiesForTheDay(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActivitiesForTheDay(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string searchCriteriaXml, out System.Xml.XmlNode GetActivitiesForTheDayResult) {
            EpicorLibrary.TimeService.GetActivitiesForTheDayRequest inValue = new EpicorLibrary.TimeService.GetActivitiesForTheDayRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.searchCriteriaXml = searchCriteriaXml;
            EpicorLibrary.TimeService.GetActivitiesForTheDayResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActivitiesForTheDay(inValue);
            GetActivitiesForTheDayResult = retVal.GetActivitiesForTheDayResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetResourceCalendarTimeResponse EpicorLibrary.TimeService.TimeWSSoap.GetResourceCalendarTime(EpicorLibrary.TimeService.GetResourceCalendarTimeRequest request) {
            return base.Channel.GetResourceCalendarTime(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetResourceCalendarTime(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ResourceID, string ResourceSiteURN, System.DateTime StartDate, System.DateTime EndDate, int ConfirmedFlag, int CancelledFlag, out System.Xml.XmlNode GetResourceCalendarTimeResult) {
            EpicorLibrary.TimeService.GetResourceCalendarTimeRequest inValue = new EpicorLibrary.TimeService.GetResourceCalendarTimeRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ResourceID = ResourceID;
            inValue.ResourceSiteURN = ResourceSiteURN;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            inValue.ConfirmedFlag = ConfirmedFlag;
            inValue.CancelledFlag = CancelledFlag;
            EpicorLibrary.TimeService.GetResourceCalendarTimeResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetResourceCalendarTime(inValue);
            GetResourceCalendarTimeResult = retVal.GetResourceCalendarTimeResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetDirectRecognitionResponse EpicorLibrary.TimeService.TimeWSSoap.GetDirectRecognition(EpicorLibrary.TimeService.GetDirectRecognitionRequest request) {
            return base.Channel.GetDirectRecognition(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetDirectRecognition(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int TimeID, out System.Xml.XmlNode GetDirectRecognitionResult) {
            EpicorLibrary.TimeService.GetDirectRecognitionRequest inValue = new EpicorLibrary.TimeService.GetDirectRecognitionRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeID = TimeID;
            EpicorLibrary.TimeService.GetDirectRecognitionResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetDirectRecognition(inValue);
            GetDirectRecognitionResult = retVal.GetDirectRecognitionResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetDirectRecognitionForProjectResponse EpicorLibrary.TimeService.TimeWSSoap.GetDirectRecognitionForProject(EpicorLibrary.TimeService.GetDirectRecognitionForProjectRequest request) {
            return base.Channel.GetDirectRecognitionForProject(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetDirectRecognitionForProject(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, out System.Xml.XmlNode GetDirectRecognitionForProjectResult) {
            EpicorLibrary.TimeService.GetDirectRecognitionForProjectRequest inValue = new EpicorLibrary.TimeService.GetDirectRecognitionForProjectRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCode = ProjectCode;
            EpicorLibrary.TimeService.GetDirectRecognitionForProjectResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetDirectRecognitionForProject(inValue);
            GetDirectRecognitionForProjectResult = retVal.GetDirectRecognitionForProjectResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetNonChargeableDirectRecognitionForProjectResponse EpicorLibrary.TimeService.TimeWSSoap.GetNonChargeableDirectRecognitionForProject(EpicorLibrary.TimeService.GetNonChargeableDirectRecognitionForProjectRequest request) {
            return base.Channel.GetNonChargeableDirectRecognitionForProject(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetNonChargeableDirectRecognitionForProject(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, System.DateTime GLApplyDate, out System.Xml.XmlNode GetNonChargeableDirectRecognitionForProjectResult) {
            EpicorLibrary.TimeService.GetNonChargeableDirectRecognitionForProjectRequest inValue = new EpicorLibrary.TimeService.GetNonChargeableDirectRecognitionForProjectRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCode = ProjectCode;
            inValue.GLApplyDate = GLApplyDate;
            EpicorLibrary.TimeService.GetNonChargeableDirectRecognitionForProjectResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetNonChargeableDirectRecognitionForProject(inValue);
            GetNonChargeableDirectRecognitionForProjectResult = retVal.GetNonChargeableDirectRecognitionForProjectResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateDirectRecognitionAmtsResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateDirectRecognitionAmts(EpicorLibrary.TimeService.UpdateDirectRecognitionAmtsRequest request) {
            return base.Channel.UpdateDirectRecognitionAmts(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateDirectRecognitionAmts(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TMERecList) {
            EpicorLibrary.TimeService.UpdateDirectRecognitionAmtsRequest inValue = new EpicorLibrary.TimeService.UpdateDirectRecognitionAmtsRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TMERecList = TMERecList;
            EpicorLibrary.TimeService.UpdateDirectRecognitionAmtsResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateDirectRecognitionAmts(inValue);
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateDirectRecognitionResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateDirectRecognition(EpicorLibrary.TimeService.UpdateDirectRecognitionRequest request) {
            return base.Channel.UpdateDirectRecognition(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateDirectRecognition(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int TimeID, decimal RecognizedCostAmt, decimal HomeRecognizedCostAmt, decimal OperationalRecognizedCostAmt) {
            EpicorLibrary.TimeService.UpdateDirectRecognitionRequest inValue = new EpicorLibrary.TimeService.UpdateDirectRecognitionRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeID = TimeID;
            inValue.RecognizedCostAmt = RecognizedCostAmt;
            inValue.HomeRecognizedCostAmt = HomeRecognizedCostAmt;
            inValue.OperationalRecognizedCostAmt = OperationalRecognizedCostAmt;
            EpicorLibrary.TimeService.UpdateDirectRecognitionResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateDirectRecognition(inValue);
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetRevRecDirectFPItemsResponse EpicorLibrary.TimeService.TimeWSSoap.GetRevRecDirectFPItems(EpicorLibrary.TimeService.GetRevRecDirectFPItemsRequest request) {
            return base.Channel.GetRevRecDirectFPItems(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetRevRecDirectFPItems(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, string TaskUIDs, System.DateTime GLApplyDate, out System.Xml.XmlNode GetRevRecDirectFPItemsResult) {
            EpicorLibrary.TimeService.GetRevRecDirectFPItemsRequest inValue = new EpicorLibrary.TimeService.GetRevRecDirectFPItemsRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCode = ProjectCode;
            inValue.TaskUIDs = TaskUIDs;
            inValue.GLApplyDate = GLApplyDate;
            EpicorLibrary.TimeService.GetRevRecDirectFPItemsResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetRevRecDirectFPItems(inValue);
            GetRevRecDirectFPItemsResult = retVal.GetRevRecDirectFPItemsResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeSummaryReportResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeSummaryReport(EpicorLibrary.TimeService.GetTimeSummaryReportRequest request) {
            return base.Channel.GetTimeSummaryReport(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeSummaryReport(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string rptCriteria, string SiteURN, out System.Xml.XmlNode GetTimeSummaryReportResult) {
            EpicorLibrary.TimeService.GetTimeSummaryReportRequest inValue = new EpicorLibrary.TimeService.GetTimeSummaryReportRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.rptCriteria = rptCriteria;
            inValue.SiteURN = SiteURN;
            EpicorLibrary.TimeService.GetTimeSummaryReportResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeSummaryReport(inValue);
            GetTimeSummaryReportResult = retVal.GetTimeSummaryReportResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeSummaryReportForCompanyResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeSummaryReportForCompany(EpicorLibrary.TimeService.GetTimeSummaryReportForCompanyRequest request) {
            return base.Channel.GetTimeSummaryReportForCompany(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeSummaryReportForCompany(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string rptCriteria, out System.Xml.XmlNode GetTimeSummaryReportForCompanyResult) {
            EpicorLibrary.TimeService.GetTimeSummaryReportForCompanyRequest inValue = new EpicorLibrary.TimeService.GetTimeSummaryReportForCompanyRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.rptCriteria = rptCriteria;
            EpicorLibrary.TimeService.GetTimeSummaryReportForCompanyResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeSummaryReportForCompany(inValue);
            GetTimeSummaryReportForCompanyResult = retVal.GetTimeSummaryReportForCompanyResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetExternalTimeTypesResponse EpicorLibrary.TimeService.TimeWSSoap.GetExternalTimeTypes(EpicorLibrary.TimeService.GetExternalTimeTypesRequest request) {
            return base.Channel.GetExternalTimeTypes(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetExternalTimeTypes(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string SiteURN, out System.Xml.XmlNode GetExternalTimeTypesResult) {
            EpicorLibrary.TimeService.GetExternalTimeTypesRequest inValue = new EpicorLibrary.TimeService.GetExternalTimeTypesRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.SiteURN = SiteURN;
            EpicorLibrary.TimeService.GetExternalTimeTypesResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetExternalTimeTypes(inValue);
            GetExternalTimeTypesResult = retVal.GetExternalTimeTypesResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeTypeListForSiteResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeTypeListForSite(EpicorLibrary.TimeService.GetTimeTypeListForSiteRequest request) {
            return base.Channel.GetTimeTypeListForSite(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeTypeListForSite(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string SiteURN, out System.Xml.XmlNode GetTimeTypeListForSiteResult) {
            EpicorLibrary.TimeService.GetTimeTypeListForSiteRequest inValue = new EpicorLibrary.TimeService.GetTimeTypeListForSiteRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.SiteURN = SiteURN;
            EpicorLibrary.TimeService.GetTimeTypeListForSiteResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeTypeListForSite(inValue);
            GetTimeTypeListForSiteResult = retVal.GetTimeTypeListForSiteResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeTypeListResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeTypeList(EpicorLibrary.TimeService.GetTimeTypeListRequest request) {
            return base.Channel.GetTimeTypeList(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeTypeList(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string RateTypeInd, out System.Xml.XmlNode GetTimeTypeListResult) {
            EpicorLibrary.TimeService.GetTimeTypeListRequest inValue = new EpicorLibrary.TimeService.GetTimeTypeListRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.RateTypeInd = RateTypeInd;
            EpicorLibrary.TimeService.GetTimeTypeListResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeTypeList(inValue);
            GetTimeTypeListResult = retVal.GetTimeTypeListResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTimeTypeListResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateTimeTypeList(EpicorLibrary.TimeService.UpdateTimeTypeListRequest request) {
            return base.Channel.UpdateTimeTypeList(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTimeTypeList(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeType) {
            EpicorLibrary.TimeService.UpdateTimeTypeListRequest inValue = new EpicorLibrary.TimeService.UpdateTimeTypeListRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeType = TimeType;
            EpicorLibrary.TimeService.UpdateTimeTypeListResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTimeTypeList(inValue);
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetUnbilledTransactionReportResponse EpicorLibrary.TimeService.TimeWSSoap.GetUnbilledTransactionReport(EpicorLibrary.TimeService.GetUnbilledTransactionReportRequest request) {
            return base.Channel.GetUnbilledTransactionReport(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetUnbilledTransactionReport(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string rptCriteria, out System.Xml.XmlNode GetUnbilledTransactionReportResult) {
            EpicorLibrary.TimeService.GetUnbilledTransactionReportRequest inValue = new EpicorLibrary.TimeService.GetUnbilledTransactionReportRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.rptCriteria = rptCriteria;
            EpicorLibrary.TimeService.GetUnbilledTransactionReportResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetUnbilledTransactionReport(inValue);
            GetUnbilledTransactionReportResult = retVal.GetUnbilledTransactionReportResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeSummaryForSiteURLResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeSummaryForSiteURL(EpicorLibrary.TimeService.GetTimeSummaryForSiteURLRequest request) {
            return base.Channel.GetTimeSummaryForSiteURL(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeSummaryForSiteURL(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string xmlTSR, string incOT, out System.Xml.XmlNode GetTimeSummaryForSiteURLResult) {
            EpicorLibrary.TimeService.GetTimeSummaryForSiteURLRequest inValue = new EpicorLibrary.TimeService.GetTimeSummaryForSiteURLRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.xmlTSR = xmlTSR;
            inValue.incOT = incOT;
            EpicorLibrary.TimeService.GetTimeSummaryForSiteURLResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeSummaryForSiteURL(inValue);
            GetTimeSummaryForSiteURLResult = retVal.GetTimeSummaryForSiteURLResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetProjectReportTimeRevenueAndCostResponse EpicorLibrary.TimeService.TimeWSSoap.GetProjectReportTimeRevenueAndCost(EpicorLibrary.TimeService.GetProjectReportTimeRevenueAndCostRequest request) {
            return base.Channel.GetProjectReportTimeRevenueAndCost(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetProjectReportTimeRevenueAndCost(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string currencyType, string projectCodeList, System.DateTime startDate, System.DateTime endDate, out System.Xml.XmlNode GetProjectReportTimeRevenueAndCostResult) {
            EpicorLibrary.TimeService.GetProjectReportTimeRevenueAndCostRequest inValue = new EpicorLibrary.TimeService.GetProjectReportTimeRevenueAndCostRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.currencyType = currencyType;
            inValue.projectCodeList = projectCodeList;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            EpicorLibrary.TimeService.GetProjectReportTimeRevenueAndCostResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetProjectReportTimeRevenueAndCost(inValue);
            GetProjectReportTimeRevenueAndCostResult = retVal.GetProjectReportTimeRevenueAndCostResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.ApproveAllTimeForApproverAndDateRangeResponse EpicorLibrary.TimeService.TimeWSSoap.ApproveAllTimeForApproverAndDateRange(EpicorLibrary.TimeService.ApproveAllTimeForApproverAndDateRangeRequest request) {
            return base.Channel.ApproveAllTimeForApproverAndDateRange(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader ApproveAllTimeForApproverAndDateRange(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ApproverID, System.DateTime FromDate, System.DateTime ToDate, string sByView, string ProxyFlag, out System.Xml.XmlNode ApproveAllTimeForApproverAndDateRangeResult) {
            EpicorLibrary.TimeService.ApproveAllTimeForApproverAndDateRangeRequest inValue = new EpicorLibrary.TimeService.ApproveAllTimeForApproverAndDateRangeRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ApproverID = ApproverID;
            inValue.FromDate = FromDate;
            inValue.ToDate = ToDate;
            inValue.sByView = sByView;
            inValue.ProxyFlag = ProxyFlag;
            EpicorLibrary.TimeService.ApproveAllTimeForApproverAndDateRangeResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).ApproveAllTimeForApproverAndDateRange(inValue);
            ApproveAllTimeForApproverAndDateRangeResult = retVal.ApproveAllTimeForApproverAndDateRangeResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.InsertTimeAwaitingApprovalListResponse EpicorLibrary.TimeService.TimeWSSoap.InsertTimeAwaitingApprovalList(EpicorLibrary.TimeService.InsertTimeAwaitingApprovalListRequest request) {
            return base.Channel.InsertTimeAwaitingApprovalList(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader InsertTimeAwaitingApprovalList(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string timeAwaitingApproval) {
            EpicorLibrary.TimeService.InsertTimeAwaitingApprovalListRequest inValue = new EpicorLibrary.TimeService.InsertTimeAwaitingApprovalListRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.timeAwaitingApproval = timeAwaitingApproval;
            EpicorLibrary.TimeService.InsertTimeAwaitingApprovalListResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).InsertTimeAwaitingApprovalList(inValue);
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.DeleteTimeRequiredApproverListResponse EpicorLibrary.TimeService.TimeWSSoap.DeleteTimeRequiredApproverList(EpicorLibrary.TimeService.DeleteTimeRequiredApproverListRequest request) {
            return base.Channel.DeleteTimeRequiredApproverList(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader DeleteTimeRequiredApproverList(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string timeRequiredApprover) {
            EpicorLibrary.TimeService.DeleteTimeRequiredApproverListRequest inValue = new EpicorLibrary.TimeService.DeleteTimeRequiredApproverListRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.timeRequiredApprover = timeRequiredApprover;
            EpicorLibrary.TimeService.DeleteTimeRequiredApproverListResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).DeleteTimeRequiredApproverList(inValue);
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetArtifactDocumentListResponse EpicorLibrary.TimeService.TimeWSSoap.GetArtifactDocumentList(EpicorLibrary.TimeService.GetArtifactDocumentListRequest request) {
            return base.Channel.GetArtifactDocumentList(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetArtifactDocumentList(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string sArtifact, out System.Xml.XmlNode GetArtifactDocumentListResult) {
            EpicorLibrary.TimeService.GetArtifactDocumentListRequest inValue = new EpicorLibrary.TimeService.GetArtifactDocumentListRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.sArtifact = sArtifact;
            EpicorLibrary.TimeService.GetArtifactDocumentListResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetArtifactDocumentList(inValue);
            GetArtifactDocumentListResult = retVal.GetArtifactDocumentListResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.DeleteTimeAwaitingApprovalListResponse EpicorLibrary.TimeService.TimeWSSoap.DeleteTimeAwaitingApprovalList(EpicorLibrary.TimeService.DeleteTimeAwaitingApprovalListRequest request) {
            return base.Channel.DeleteTimeAwaitingApprovalList(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader DeleteTimeAwaitingApprovalList(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string timeAwaitingApproval) {
            EpicorLibrary.TimeService.DeleteTimeAwaitingApprovalListRequest inValue = new EpicorLibrary.TimeService.DeleteTimeAwaitingApprovalListRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.timeAwaitingApproval = timeAwaitingApproval;
            EpicorLibrary.TimeService.DeleteTimeAwaitingApprovalListResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).DeleteTimeAwaitingApprovalList(inValue);
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetCalendarCodeForActivityResponse EpicorLibrary.TimeService.TimeWSSoap.GetCalendarCodeForActivity(EpicorLibrary.TimeService.GetCalendarCodeForActivityRequest request) {
            return base.Channel.GetCalendarCodeForActivity(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetCalendarCodeForActivity(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string activityCode, out string GetCalendarCodeForActivityResult) {
            EpicorLibrary.TimeService.GetCalendarCodeForActivityRequest inValue = new EpicorLibrary.TimeService.GetCalendarCodeForActivityRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.activityCode = activityCode;
            EpicorLibrary.TimeService.GetCalendarCodeForActivityResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetCalendarCodeForActivity(inValue);
            GetCalendarCodeForActivityResult = retVal.GetCalendarCodeForActivityResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.IsTimeCompletelyApprovedResponse EpicorLibrary.TimeService.TimeWSSoap.IsTimeCompletelyApproved(EpicorLibrary.TimeService.IsTimeCompletelyApprovedRequest request) {
            return base.Channel.IsTimeCompletelyApproved(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader IsTimeCompletelyApproved(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int timeID, out bool IsTimeCompletelyApprovedResult) {
            EpicorLibrary.TimeService.IsTimeCompletelyApprovedRequest inValue = new EpicorLibrary.TimeService.IsTimeCompletelyApprovedRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.timeID = timeID;
            EpicorLibrary.TimeService.IsTimeCompletelyApprovedResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).IsTimeCompletelyApproved(inValue);
            IsTimeCompletelyApprovedResult = retVal.IsTimeCompletelyApprovedResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.IsSingleRequiredApproverResponse EpicorLibrary.TimeService.TimeWSSoap.IsSingleRequiredApprover(EpicorLibrary.TimeService.IsSingleRequiredApproverRequest request) {
            return base.Channel.IsSingleRequiredApprover(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader IsSingleRequiredApprover(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int timeID, out bool IsSingleRequiredApproverResult) {
            EpicorLibrary.TimeService.IsSingleRequiredApproverRequest inValue = new EpicorLibrary.TimeService.IsSingleRequiredApproverRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.timeID = timeID;
            EpicorLibrary.TimeService.IsSingleRequiredApproverResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).IsSingleRequiredApprover(inValue);
            IsSingleRequiredApproverResult = retVal.IsSingleRequiredApproverResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActualHoursAndCostTotalsForProjectResponse EpicorLibrary.TimeService.TimeWSSoap.GetActualHoursAndCostTotalsForProject(EpicorLibrary.TimeService.GetActualHoursAndCostTotalsForProjectRequest request) {
            return base.Channel.GetActualHoursAndCostTotalsForProject(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActualHoursAndCostTotalsForProject(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string projectCode, out decimal actualRegHours, out decimal actualOTHours, out decimal actualRegHoursCost, out decimal actualOTHoursCost) {
            EpicorLibrary.TimeService.GetActualHoursAndCostTotalsForProjectRequest inValue = new EpicorLibrary.TimeService.GetActualHoursAndCostTotalsForProjectRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.projectCode = projectCode;
            EpicorLibrary.TimeService.GetActualHoursAndCostTotalsForProjectResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActualHoursAndCostTotalsForProject(inValue);
            actualRegHours = retVal.actualRegHours;
            actualOTHours = retVal.actualOTHours;
            actualRegHoursCost = retVal.actualRegHoursCost;
            actualOTHoursCost = retVal.actualOTHoursCost;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeActualAndETCForProjectResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeActualAndETCForProject(EpicorLibrary.TimeService.GetTimeActualAndETCForProjectRequest request) {
            return base.Channel.GetTimeActualAndETCForProject(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeActualAndETCForProject(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string projectCode, string projectSiteURN, out System.Xml.XmlNode GetTimeActualAndETCForProjectResult) {
            EpicorLibrary.TimeService.GetTimeActualAndETCForProjectRequest inValue = new EpicorLibrary.TimeService.GetTimeActualAndETCForProjectRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.projectCode = projectCode;
            inValue.projectSiteURN = projectSiteURN;
            EpicorLibrary.TimeService.GetTimeActualAndETCForProjectResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeActualAndETCForProject(inValue);
            GetTimeActualAndETCForProjectResult = retVal.GetTimeActualAndETCForProjectResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActivityDescriptionResponse EpicorLibrary.TimeService.TimeWSSoap.GetActivityDescription(EpicorLibrary.TimeService.GetActivityDescriptionRequest request) {
            return base.Channel.GetActivityDescription(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActivityDescription(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string activityCode, out string GetActivityDescriptionResult) {
            EpicorLibrary.TimeService.GetActivityDescriptionRequest inValue = new EpicorLibrary.TimeService.GetActivityDescriptionRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.activityCode = activityCode;
            EpicorLibrary.TimeService.GetActivityDescriptionResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActivityDescription(inValue);
            GetActivityDescriptionResult = retVal.GetActivityDescriptionResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeTypeDescriptionResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeTypeDescription(EpicorLibrary.TimeService.GetTimeTypeDescriptionRequest request) {
            return base.Channel.GetTimeTypeDescription(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeTypeDescription(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string timeTypeCode, out string GetTimeTypeDescriptionResult) {
            EpicorLibrary.TimeService.GetTimeTypeDescriptionRequest inValue = new EpicorLibrary.TimeService.GetTimeTypeDescriptionRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.timeTypeCode = timeTypeCode;
            EpicorLibrary.TimeService.GetTimeTypeDescriptionResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeTypeDescription(inValue);
            GetTimeTypeDescriptionResult = retVal.GetTimeTypeDescriptionResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActiveTimeTypeListResponse EpicorLibrary.TimeService.TimeWSSoap.GetActiveTimeTypeList(EpicorLibrary.TimeService.GetActiveTimeTypeListRequest request) {
            return base.Channel.GetActiveTimeTypeList(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActiveTimeTypeList(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string RateTypeInd, out System.Xml.XmlNode GetActiveTimeTypeListResult) {
            EpicorLibrary.TimeService.GetActiveTimeTypeListRequest inValue = new EpicorLibrary.TimeService.GetActiveTimeTypeListRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.RateTypeInd = RateTypeInd;
            EpicorLibrary.TimeService.GetActiveTimeTypeListResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActiveTimeTypeList(inValue);
            GetActiveTimeTypeListResult = retVal.GetActiveTimeTypeListResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.ValidateTimeBatchEntriesResponse EpicorLibrary.TimeService.TimeWSSoap.ValidateTimeBatchEntries(EpicorLibrary.TimeService.ValidateTimeBatchEntriesRequest request) {
            return base.Channel.ValidateTimeBatchEntries(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader ValidateTimeBatchEntries(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeBatchIn, out string ValidateTimeBatchEntriesResult, out System.Xml.XmlNode TimeBatch) {
            EpicorLibrary.TimeService.ValidateTimeBatchEntriesRequest inValue = new EpicorLibrary.TimeService.ValidateTimeBatchEntriesRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeBatchIn = TimeBatchIn;
            EpicorLibrary.TimeService.ValidateTimeBatchEntriesResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).ValidateTimeBatchEntries(inValue);
            ValidateTimeBatchEntriesResult = retVal.ValidateTimeBatchEntriesResult;
            TimeBatch = retVal.TimeBatch;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTimeBatchEntriesAtRemoteResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateTimeBatchEntriesAtRemote(EpicorLibrary.TimeService.UpdateTimeBatchEntriesAtRemoteRequest request) {
            return base.Channel.UpdateTimeBatchEntriesAtRemote(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTimeBatchEntriesAtRemote(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeEntry, out System.Xml.XmlNode UpdateTimeBatchEntriesAtRemoteResult) {
            EpicorLibrary.TimeService.UpdateTimeBatchEntriesAtRemoteRequest inValue = new EpicorLibrary.TimeService.UpdateTimeBatchEntriesAtRemoteRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeEntry = TimeEntry;
            EpicorLibrary.TimeService.UpdateTimeBatchEntriesAtRemoteResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTimeBatchEntriesAtRemote(inValue);
            UpdateTimeBatchEntriesAtRemoteResult = retVal.UpdateTimeBatchEntriesAtRemoteResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.InterBranchExportResponse EpicorLibrary.TimeService.TimeWSSoap.InterBranchExport(EpicorLibrary.TimeService.InterBranchExportRequest request) {
            return base.Channel.InterBranchExport(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader InterBranchExport(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, out bool InterBranchExportResult) {
            EpicorLibrary.TimeService.InterBranchExportRequest inValue = new EpicorLibrary.TimeService.InterBranchExportRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            EpicorLibrary.TimeService.InterBranchExportResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).InterBranchExport(inValue);
            InterBranchExportResult = retVal.InterBranchExportResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.CreateInterOrgErrorResponse EpicorLibrary.TimeService.TimeWSSoap.CreateInterOrgError(EpicorLibrary.TimeService.CreateInterOrgErrorRequest request) {
            return base.Channel.CreateInterOrgError(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader CreateInterOrgError(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int interOrgErrorNum, int errorCode, string errorDesc, int timeId, string resourceSiteURN) {
            EpicorLibrary.TimeService.CreateInterOrgErrorRequest inValue = new EpicorLibrary.TimeService.CreateInterOrgErrorRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.interOrgErrorNum = interOrgErrorNum;
            inValue.errorCode = errorCode;
            inValue.errorDesc = errorDesc;
            inValue.timeId = timeId;
            inValue.resourceSiteURN = resourceSiteURN;
            EpicorLibrary.TimeService.CreateInterOrgErrorResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).CreateInterOrgError(inValue);
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.ReserveNewTimeIDResponse EpicorLibrary.TimeService.TimeWSSoap.ReserveNewTimeID(EpicorLibrary.TimeService.ReserveNewTimeIDRequest request) {
            return base.Channel.ReserveNewTimeID(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader ReserveNewTimeID(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string resWord, string resourceID, string resourceSiteURN, string activityCode, out int ReserveNewTimeIDResult) {
            EpicorLibrary.TimeService.ReserveNewTimeIDRequest inValue = new EpicorLibrary.TimeService.ReserveNewTimeIDRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.resWord = resWord;
            inValue.resourceID = resourceID;
            inValue.resourceSiteURN = resourceSiteURN;
            inValue.activityCode = activityCode;
            EpicorLibrary.TimeService.ReserveNewTimeIDResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).ReserveNewTimeID(inValue);
            ReserveNewTimeIDResult = retVal.ReserveNewTimeIDResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.RemoveTimeBillingNumForCancelledBillingResponse EpicorLibrary.TimeService.TimeWSSoap.RemoveTimeBillingNumForCancelledBilling(EpicorLibrary.TimeService.RemoveTimeBillingNumForCancelledBillingRequest request) {
            return base.Channel.RemoveTimeBillingNumForCancelledBilling(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader RemoveTimeBillingNumForCancelledBilling(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int billingNum) {
            EpicorLibrary.TimeService.RemoveTimeBillingNumForCancelledBillingRequest inValue = new EpicorLibrary.TimeService.RemoveTimeBillingNumForCancelledBillingRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.billingNum = billingNum;
            EpicorLibrary.TimeService.RemoveTimeBillingNumForCancelledBillingResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).RemoveTimeBillingNumForCancelledBilling(inValue);
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetInterOrgFlagCountForTimeResponse EpicorLibrary.TimeService.TimeWSSoap.GetInterOrgFlagCountForTime(EpicorLibrary.TimeService.GetInterOrgFlagCountForTimeRequest request) {
            return base.Channel.GetInterOrgFlagCountForTime(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetInterOrgFlagCountForTime(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, out int GetInterOrgFlagCountForTimeResult) {
            EpicorLibrary.TimeService.GetInterOrgFlagCountForTimeRequest inValue = new EpicorLibrary.TimeService.GetInterOrgFlagCountForTimeRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            EpicorLibrary.TimeService.GetInterOrgFlagCountForTimeResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetInterOrgFlagCountForTime(inValue);
            GetInterOrgFlagCountForTimeResult = retVal.GetInterOrgFlagCountForTimeResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActualTimeForProjectPortfolioResponse EpicorLibrary.TimeService.TimeWSSoap.GetActualTimeForProjectPortfolio(EpicorLibrary.TimeService.GetActualTimeForProjectPortfolioRequest request) {
            return base.Channel.GetActualTimeForProjectPortfolio(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActualTimeForProjectPortfolio(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string projectList, out System.Xml.XmlNode GetActualTimeForProjectPortfolioResult) {
            EpicorLibrary.TimeService.GetActualTimeForProjectPortfolioRequest inValue = new EpicorLibrary.TimeService.GetActualTimeForProjectPortfolioRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.projectList = projectList;
            EpicorLibrary.TimeService.GetActualTimeForProjectPortfolioResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActualTimeForProjectPortfolio(inValue);
            GetActualTimeForProjectPortfolioResult = retVal.GetActualTimeForProjectPortfolioResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeSheetReportFilterDataResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeSheetReportFilterData(EpicorLibrary.TimeService.GetTimeSheetReportFilterDataRequest request) {
            return base.Channel.GetTimeSheetReportFilterData(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeSheetReportFilterData(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ReportLayout, out System.Xml.XmlNode GetTimeSheetReportFilterDataResult) {
            EpicorLibrary.TimeService.GetTimeSheetReportFilterDataRequest inValue = new EpicorLibrary.TimeService.GetTimeSheetReportFilterDataRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ReportLayout = ReportLayout;
            EpicorLibrary.TimeService.GetTimeSheetReportFilterDataResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeSheetReportFilterData(inValue);
            GetTimeSheetReportFilterDataResult = retVal.GetTimeSheetReportFilterDataResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeSheetReportDefaultsResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeSheetReportDefaults(EpicorLibrary.TimeService.GetTimeSheetReportDefaultsRequest request) {
            return base.Channel.GetTimeSheetReportDefaults(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeSheetReportDefaults(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, out string LoginID, out string ResourceID, out string SiteURN, out string CompanyURN, out string OrgUnit, out System.DateTime SQLDate, out bool ProjectManager, out bool ResourceManager) {
            EpicorLibrary.TimeService.GetTimeSheetReportDefaultsRequest inValue = new EpicorLibrary.TimeService.GetTimeSheetReportDefaultsRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            EpicorLibrary.TimeService.GetTimeSheetReportDefaultsResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeSheetReportDefaults(inValue);
            LoginID = retVal.LoginID;
            ResourceID = retVal.ResourceID;
            SiteURN = retVal.SiteURN;
            CompanyURN = retVal.CompanyURN;
            OrgUnit = retVal.OrgUnit;
            SQLDate = retVal.SQLDate;
            ProjectManager = retVal.ProjectManager;
            ResourceManager = retVal.ResourceManager;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeSheetReportResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeSheetReport(EpicorLibrary.TimeService.GetTimeSheetReportRequest request) {
            return base.Channel.GetTimeSheetReport(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeSheetReport(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string rptCriteria, out System.Xml.XmlNode GetTimeSheetReportResult) {
            EpicorLibrary.TimeService.GetTimeSheetReportRequest inValue = new EpicorLibrary.TimeService.GetTimeSheetReportRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.rptCriteria = rptCriteria;
            EpicorLibrary.TimeService.GetTimeSheetReportResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeSheetReport(inValue);
            GetTimeSheetReportResult = retVal.GetTimeSheetReportResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetPCodeListWithTimesByResourceIDsResponse EpicorLibrary.TimeService.TimeWSSoap.GetPCodeListWithTimesByResourceIDs(EpicorLibrary.TimeService.GetPCodeListWithTimesByResourceIDsRequest request) {
            return base.Channel.GetPCodeListWithTimesByResourceIDs(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetPCodeListWithTimesByResourceIDs(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string strResourceID, string StartDate, string EndDate, string reportLayout, out System.Xml.XmlNode GetPCodeListWithTimesByResourceIDsResult) {
            EpicorLibrary.TimeService.GetPCodeListWithTimesByResourceIDsRequest inValue = new EpicorLibrary.TimeService.GetPCodeListWithTimesByResourceIDsRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.strResourceID = strResourceID;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            inValue.reportLayout = reportLayout;
            EpicorLibrary.TimeService.GetPCodeListWithTimesByResourceIDsResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetPCodeListWithTimesByResourceIDs(inValue);
            GetPCodeListWithTimesByResourceIDsResult = retVal.GetPCodeListWithTimesByResourceIDsResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetProjectListWithTimesByPCodesResponse EpicorLibrary.TimeService.TimeWSSoap.GetProjectListWithTimesByPCodes(EpicorLibrary.TimeService.GetProjectListWithTimesByPCodesRequest request) {
            return base.Channel.GetProjectListWithTimesByPCodes(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetProjectListWithTimesByPCodes(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string strProjectCodes, string StartDate, string EndDate, out System.Xml.XmlNode GetProjectListWithTimesByPCodesResult) {
            EpicorLibrary.TimeService.GetProjectListWithTimesByPCodesRequest inValue = new EpicorLibrary.TimeService.GetProjectListWithTimesByPCodesRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.strProjectCodes = strProjectCodes;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            EpicorLibrary.TimeService.GetProjectListWithTimesByPCodesResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetProjectListWithTimesByPCodes(inValue);
            GetProjectListWithTimesByPCodesResult = retVal.GetProjectListWithTimesByPCodesResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetProjectListWithTimesByPCodesForProjectManagersResponse EpicorLibrary.TimeService.TimeWSSoap.GetProjectListWithTimesByPCodesForProjectManagers(EpicorLibrary.TimeService.GetProjectListWithTimesByPCodesForProjectManagersRequest request) {
            return base.Channel.GetProjectListWithTimesByPCodesForProjectManagers(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetProjectListWithTimesByPCodesForProjectManagers(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string strProjectCodes, string StartDate, string EndDate, out System.Xml.XmlNode GetProjectListWithTimesByPCodesForProjectManagersResult) {
            EpicorLibrary.TimeService.GetProjectListWithTimesByPCodesForProjectManagersRequest inValue = new EpicorLibrary.TimeService.GetProjectListWithTimesByPCodesForProjectManagersRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.strProjectCodes = strProjectCodes;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            EpicorLibrary.TimeService.GetProjectListWithTimesByPCodesForProjectManagersResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetProjectListWithTimesByPCodesForProjectManagers(inValue);
            GetProjectListWithTimesByPCodesForProjectManagersResult = retVal.GetProjectListWithTimesByPCodesForProjectManagersResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetProjectListWithTimesByTimeEntryResponse EpicorLibrary.TimeService.TimeWSSoap.GetProjectListWithTimesByTimeEntry(EpicorLibrary.TimeService.GetProjectListWithTimesByTimeEntryRequest request) {
            return base.Channel.GetProjectListWithTimesByTimeEntry(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetProjectListWithTimesByTimeEntry(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string StartDate, string EndDate, out System.Xml.XmlNode GetProjectListWithTimesByTimeEntryResult) {
            EpicorLibrary.TimeService.GetProjectListWithTimesByTimeEntryRequest inValue = new EpicorLibrary.TimeService.GetProjectListWithTimesByTimeEntryRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            EpicorLibrary.TimeService.GetProjectListWithTimesByTimeEntryResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetProjectListWithTimesByTimeEntry(inValue);
            GetProjectListWithTimesByTimeEntryResult = retVal.GetProjectListWithTimesByTimeEntryResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetResIDListWithTimesByTimeEntryDateResponse EpicorLibrary.TimeService.TimeWSSoap.GetResIDListWithTimesByTimeEntryDate(EpicorLibrary.TimeService.GetResIDListWithTimesByTimeEntryDateRequest request) {
            return base.Channel.GetResIDListWithTimesByTimeEntryDate(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetResIDListWithTimesByTimeEntryDate(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string StartDate, string EndDate, out System.Xml.XmlNode GetResIDListWithTimesByTimeEntryDateResult) {
            EpicorLibrary.TimeService.GetResIDListWithTimesByTimeEntryDateRequest inValue = new EpicorLibrary.TimeService.GetResIDListWithTimesByTimeEntryDateRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            EpicorLibrary.TimeService.GetResIDListWithTimesByTimeEntryDateResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetResIDListWithTimesByTimeEntryDate(inValue);
            GetResIDListWithTimesByTimeEntryDateResult = retVal.GetResIDListWithTimesByTimeEntryDateResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.CheckForTimeOutOfRangeResponse EpicorLibrary.TimeService.TimeWSSoap.CheckForTimeOutOfRange(EpicorLibrary.TimeService.CheckForTimeOutOfRangeRequest request) {
            return base.Channel.CheckForTimeOutOfRange(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader CheckForTimeOutOfRange(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, System.DateTime startDate, System.DateTime endDate, string projectCode, int TaskUID, out int CheckForTimeOutOfRangeResult) {
            EpicorLibrary.TimeService.CheckForTimeOutOfRangeRequest inValue = new EpicorLibrary.TimeService.CheckForTimeOutOfRangeRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.projectCode = projectCode;
            inValue.TaskUID = TaskUID;
            EpicorLibrary.TimeService.CheckForTimeOutOfRangeResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).CheckForTimeOutOfRange(inValue);
            CheckForTimeOutOfRangeResult = retVal.CheckForTimeOutOfRangeResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeDetailForTaskETCResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeDetailForTaskETC(EpicorLibrary.TimeService.GetTimeDetailForTaskETCRequest request) {
            return base.Channel.GetTimeDetailForTaskETC(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeDetailForTaskETC(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string projectCode, out System.Xml.XmlNode GetTimeDetailForTaskETCResult) {
            EpicorLibrary.TimeService.GetTimeDetailForTaskETCRequest inValue = new EpicorLibrary.TimeService.GetTimeDetailForTaskETCRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.projectCode = projectCode;
            EpicorLibrary.TimeService.GetTimeDetailForTaskETCResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeDetailForTaskETC(inValue);
            GetTimeDetailForTaskETCResult = retVal.GetTimeDetailForTaskETCResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActiveActivityGroupListResponse EpicorLibrary.TimeService.TimeWSSoap.GetActiveActivityGroupList(EpicorLibrary.TimeService.GetActiveActivityGroupListRequest request) {
            return base.Channel.GetActiveActivityGroupList(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActiveActivityGroupList(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, out System.Xml.XmlNode GetActiveActivityGroupListResult) {
            EpicorLibrary.TimeService.GetActiveActivityGroupListRequest inValue = new EpicorLibrary.TimeService.GetActiveActivityGroupListRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            EpicorLibrary.TimeService.GetActiveActivityGroupListResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActiveActivityGroupList(inValue);
            GetActiveActivityGroupListResult = retVal.GetActiveActivityGroupListResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTMTimeItemsForImmediateRecognitionResponse EpicorLibrary.TimeService.TimeWSSoap.GetTMTimeItemsForImmediateRecognition(EpicorLibrary.TimeService.GetTMTimeItemsForImmediateRecognitionRequest request) {
            return base.Channel.GetTMTimeItemsForImmediateRecognition(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTMTimeItemsForImmediateRecognition(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjForImmediateRecognition, out System.Xml.XmlNode GetTMTimeItemsForImmediateRecognitionResult) {
            EpicorLibrary.TimeService.GetTMTimeItemsForImmediateRecognitionRequest inValue = new EpicorLibrary.TimeService.GetTMTimeItemsForImmediateRecognitionRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjForImmediateRecognition = ProjForImmediateRecognition;
            EpicorLibrary.TimeService.GetTMTimeItemsForImmediateRecognitionResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTMTimeItemsForImmediateRecognition(inValue);
            GetTMTimeItemsForImmediateRecognitionResult = retVal.GetTMTimeItemsForImmediateRecognitionResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTimeForImmediateRecognitionResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateTimeForImmediateRecognition(EpicorLibrary.TimeService.UpdateTimeForImmediateRecognitionRequest request) {
            return base.Channel.UpdateTimeForImmediateRecognition(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTimeForImmediateRecognition(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TMTimeItemsForImmediateRecognition, out bool UpdateTimeForImmediateRecognitionResult) {
            EpicorLibrary.TimeService.UpdateTimeForImmediateRecognitionRequest inValue = new EpicorLibrary.TimeService.UpdateTimeForImmediateRecognitionRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TMTimeItemsForImmediateRecognition = TMTimeItemsForImmediateRecognition;
            EpicorLibrary.TimeService.UpdateTimeForImmediateRecognitionResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTimeForImmediateRecognition(inValue);
            UpdateTimeForImmediateRecognitionResult = retVal.UpdateTimeForImmediateRecognitionResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetInternalTreeResponse EpicorLibrary.TimeService.TimeWSSoap.GetInternalTree(EpicorLibrary.TimeService.GetInternalTreeRequest request) {
            return base.Channel.GetInternalTree(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetInternalTree(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string resourceCategoryList, int startingOutline, System.DateTime fdate, System.DateTime tdate, string resID, out System.Xml.XmlNode GetInternalTreeResult) {
            EpicorLibrary.TimeService.GetInternalTreeRequest inValue = new EpicorLibrary.TimeService.GetInternalTreeRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.resourceCategoryList = resourceCategoryList;
            inValue.startingOutline = startingOutline;
            inValue.fdate = fdate;
            inValue.tdate = tdate;
            inValue.resID = resID;
            EpicorLibrary.TimeService.GetInternalTreeResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetInternalTree(inValue);
            GetInternalTreeResult = retVal.GetInternalTreeResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeDetailForProjectByResourceResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeDetailForProjectByResource(EpicorLibrary.TimeService.GetTimeDetailForProjectByResourceRequest request) {
            return base.Channel.GetTimeDetailForProjectByResource(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeDetailForProjectByResource(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, System.DateTime FromDate, System.DateTime ToDate, string ApproverID, string ResourceID, out System.Xml.XmlNode GetTimeDetailForProjectByResourceResult) {
            EpicorLibrary.TimeService.GetTimeDetailForProjectByResourceRequest inValue = new EpicorLibrary.TimeService.GetTimeDetailForProjectByResourceRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCode = ProjectCode;
            inValue.FromDate = FromDate;
            inValue.ToDate = ToDate;
            inValue.ApproverID = ApproverID;
            inValue.ResourceID = ResourceID;
            EpicorLibrary.TimeService.GetTimeDetailForProjectByResourceResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeDetailForProjectByResource(inValue);
            GetTimeDetailForProjectByResourceResult = retVal.GetTimeDetailForProjectByResourceResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.IsLocaleIDInUseResponse EpicorLibrary.TimeService.TimeWSSoap.IsLocaleIDInUse(EpicorLibrary.TimeService.IsLocaleIDInUseRequest request) {
            return base.Channel.IsLocaleIDInUse(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader IsLocaleIDInUse(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string localeID, out bool IsLocaleIDInUseResult) {
            EpicorLibrary.TimeService.IsLocaleIDInUseRequest inValue = new EpicorLibrary.TimeService.IsLocaleIDInUseRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.localeID = localeID;
            EpicorLibrary.TimeService.IsLocaleIDInUseResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).IsLocaleIDInUse(inValue);
            IsLocaleIDInUseResult = retVal.IsLocaleIDInUseResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTranslationDescriptionForActivityResponse EpicorLibrary.TimeService.TimeWSSoap.GetTranslationDescriptionForActivity(EpicorLibrary.TimeService.GetTranslationDescriptionForActivityRequest request) {
            return base.Channel.GetTranslationDescriptionForActivity(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTranslationDescriptionForActivity(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string localeID, out System.Xml.XmlNode GetTranslationDescriptionForActivityResult) {
            EpicorLibrary.TimeService.GetTranslationDescriptionForActivityRequest inValue = new EpicorLibrary.TimeService.GetTranslationDescriptionForActivityRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.localeID = localeID;
            EpicorLibrary.TimeService.GetTranslationDescriptionForActivityResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTranslationDescriptionForActivity(inValue);
            GetTranslationDescriptionForActivityResult = retVal.GetTranslationDescriptionForActivityResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTranslationDescriptionForActivityResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateTranslationDescriptionForActivity(EpicorLibrary.TimeService.UpdateTranslationDescriptionForActivityRequest request) {
            return base.Channel.UpdateTranslationDescriptionForActivity(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTranslationDescriptionForActivity(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string translationDescriptionList) {
            EpicorLibrary.TimeService.UpdateTranslationDescriptionForActivityRequest inValue = new EpicorLibrary.TimeService.UpdateTranslationDescriptionForActivityRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.translationDescriptionList = translationDescriptionList;
            EpicorLibrary.TimeService.UpdateTranslationDescriptionForActivityResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTranslationDescriptionForActivity(inValue);
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTranslationDescriptionForTimeTypeResponse EpicorLibrary.TimeService.TimeWSSoap.GetTranslationDescriptionForTimeType(EpicorLibrary.TimeService.GetTranslationDescriptionForTimeTypeRequest request) {
            return base.Channel.GetTranslationDescriptionForTimeType(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTranslationDescriptionForTimeType(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string localeID, out System.Xml.XmlNode GetTranslationDescriptionForTimeTypeResult) {
            EpicorLibrary.TimeService.GetTranslationDescriptionForTimeTypeRequest inValue = new EpicorLibrary.TimeService.GetTranslationDescriptionForTimeTypeRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.localeID = localeID;
            EpicorLibrary.TimeService.GetTranslationDescriptionForTimeTypeResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTranslationDescriptionForTimeType(inValue);
            GetTranslationDescriptionForTimeTypeResult = retVal.GetTranslationDescriptionForTimeTypeResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTranslationDescriptionForTimeTypeResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateTranslationDescriptionForTimeType(EpicorLibrary.TimeService.UpdateTranslationDescriptionForTimeTypeRequest request) {
            return base.Channel.UpdateTranslationDescriptionForTimeType(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTranslationDescriptionForTimeType(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string translationDescriptionList) {
            EpicorLibrary.TimeService.UpdateTranslationDescriptionForTimeTypeRequest inValue = new EpicorLibrary.TimeService.UpdateTranslationDescriptionForTimeTypeRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.translationDescriptionList = translationDescriptionList;
            EpicorLibrary.TimeService.UpdateTranslationDescriptionForTimeTypeResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTranslationDescriptionForTimeType(inValue);
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActivityGroupListResponse EpicorLibrary.TimeService.TimeWSSoap.GetActivityGroupList(EpicorLibrary.TimeService.GetActivityGroupListRequest request) {
            return base.Channel.GetActivityGroupList(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActivityGroupList(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, out System.Xml.XmlNode GetActivityGroupListResult) {
            EpicorLibrary.TimeService.GetActivityGroupListRequest inValue = new EpicorLibrary.TimeService.GetActivityGroupListRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            EpicorLibrary.TimeService.GetActivityGroupListResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActivityGroupList(inValue);
            GetActivityGroupListResult = retVal.GetActivityGroupListResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActivityForActualsEntryResponse EpicorLibrary.TimeService.TimeWSSoap.GetActivityForActualsEntry(EpicorLibrary.TimeService.GetActivityForActualsEntryRequest request) {
            return base.Channel.GetActivityForActualsEntry(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActivityForActualsEntry(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string activityCode, int internalFlag, string workTypeCode, string resourceCategoryList, bool validFlag, bool throwException, System.DateTime fDate, System.DateTime tDate, string resID, string resourceSiteURN, out string GetActivityForActualsEntryResult) {
            EpicorLibrary.TimeService.GetActivityForActualsEntryRequest inValue = new EpicorLibrary.TimeService.GetActivityForActualsEntryRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.activityCode = activityCode;
            inValue.internalFlag = internalFlag;
            inValue.workTypeCode = workTypeCode;
            inValue.resourceCategoryList = resourceCategoryList;
            inValue.validFlag = validFlag;
            inValue.throwException = throwException;
            inValue.fDate = fDate;
            inValue.tDate = tDate;
            inValue.resID = resID;
            inValue.resourceSiteURN = resourceSiteURN;
            EpicorLibrary.TimeService.GetActivityForActualsEntryResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActivityForActualsEntry(inValue);
            GetActivityForActualsEntryResult = retVal.GetActivityForActualsEntryResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActivityListForActualsEntryResponse EpicorLibrary.TimeService.TimeWSSoap.GetActivityListForActualsEntry(EpicorLibrary.TimeService.GetActivityListForActualsEntryRequest request) {
            return base.Channel.GetActivityListForActualsEntry(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActivityListForActualsEntry(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string searchCriteriaXml, out System.Xml.XmlNode GetActivityListForActualsEntryResult) {
            EpicorLibrary.TimeService.GetActivityListForActualsEntryRequest inValue = new EpicorLibrary.TimeService.GetActivityListForActualsEntryRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.searchCriteriaXml = searchCriteriaXml;
            EpicorLibrary.TimeService.GetActivityListForActualsEntryResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActivityListForActualsEntry(inValue);
            GetActivityListForActualsEntryResult = retVal.GetActivityListForActualsEntryResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateUnassignedFlagForResourceTimeResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateUnassignedFlagForResourceTime(EpicorLibrary.TimeService.UpdateUnassignedFlagForResourceTimeRequest request) {
            return base.Channel.UpdateUnassignedFlagForResourceTime(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateUnassignedFlagForResourceTime(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string projectSiteURN, string projectCode, string resourceSiteURN, string resourceID) {
            EpicorLibrary.TimeService.UpdateUnassignedFlagForResourceTimeRequest inValue = new EpicorLibrary.TimeService.UpdateUnassignedFlagForResourceTimeRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.projectSiteURN = projectSiteURN;
            inValue.projectCode = projectCode;
            inValue.resourceSiteURN = resourceSiteURN;
            inValue.resourceID = resourceID;
            EpicorLibrary.TimeService.UpdateUnassignedFlagForResourceTimeResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateUnassignedFlagForResourceTime(inValue);
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeDetailForTransferReversalResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeDetailForTransferReversal(EpicorLibrary.TimeService.GetTimeDetailForTransferReversalRequest request) {
            return base.Channel.GetTimeDetailForTransferReversal(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeDetailForTransferReversal(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int timeID, out System.Xml.XmlNode GetTimeDetailForTransferReversalResult) {
            EpicorLibrary.TimeService.GetTimeDetailForTransferReversalRequest inValue = new EpicorLibrary.TimeService.GetTimeDetailForTransferReversalRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.timeID = timeID;
            EpicorLibrary.TimeService.GetTimeDetailForTransferReversalResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeDetailForTransferReversal(inValue);
            GetTimeDetailForTransferReversalResult = retVal.GetTimeDetailForTransferReversalResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActivityListForDisconnectedResponse EpicorLibrary.TimeService.TimeWSSoap.GetActivityListForDisconnected(EpicorLibrary.TimeService.GetActivityListForDisconnectedRequest request) {
            return base.Channel.GetActivityListForDisconnected(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActivityListForDisconnected(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, out System.Xml.XmlNode GetActivityListForDisconnectedResult) {
            EpicorLibrary.TimeService.GetActivityListForDisconnectedRequest inValue = new EpicorLibrary.TimeService.GetActivityListForDisconnectedRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            EpicorLibrary.TimeService.GetActivityListForDisconnectedResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActivityListForDisconnected(inValue);
            GetActivityListForDisconnectedResult = retVal.GetActivityListForDisconnectedResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTimeEntryTransactionsResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateTimeEntryTransactions(EpicorLibrary.TimeService.UpdateTimeEntryTransactionsRequest request) {
            return base.Channel.UpdateTimeEntryTransactions(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTimeEntryTransactions(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string xmlTimeList, string xmlTaskETC) {
            EpicorLibrary.TimeService.UpdateTimeEntryTransactionsRequest inValue = new EpicorLibrary.TimeService.UpdateTimeEntryTransactionsRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.xmlTimeList = xmlTimeList;
            inValue.xmlTaskETC = xmlTaskETC;
            EpicorLibrary.TimeService.UpdateTimeEntryTransactionsResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTimeEntryTransactions(inValue);
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.VerifyTimeForProjectTaskResourceResponse EpicorLibrary.TimeService.TimeWSSoap.VerifyTimeForProjectTaskResource(EpicorLibrary.TimeService.VerifyTimeForProjectTaskResourceRequest request) {
            return base.Channel.VerifyTimeForProjectTaskResource(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader VerifyTimeForProjectTaskResource(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, int TaskUID, string ResourceID, out bool VerifyTimeForProjectTaskResourceResult) {
            EpicorLibrary.TimeService.VerifyTimeForProjectTaskResourceRequest inValue = new EpicorLibrary.TimeService.VerifyTimeForProjectTaskResourceRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCode = ProjectCode;
            inValue.TaskUID = TaskUID;
            inValue.ResourceID = ResourceID;
            EpicorLibrary.TimeService.VerifyTimeForProjectTaskResourceResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).VerifyTimeForProjectTaskResource(inValue);
            VerifyTimeForProjectTaskResourceResult = retVal.VerifyTimeForProjectTaskResourceResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActualTimeForOpportunityProjectResponse EpicorLibrary.TimeService.TimeWSSoap.GetActualTimeForOpportunityProject(EpicorLibrary.TimeService.GetActualTimeForOpportunityProjectRequest request) {
            return base.Channel.GetActualTimeForOpportunityProject(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActualTimeForOpportunityProject(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string OpportunityID, out System.Xml.XmlNode GetActualTimeForOpportunityProjectResult) {
            EpicorLibrary.TimeService.GetActualTimeForOpportunityProjectRequest inValue = new EpicorLibrary.TimeService.GetActualTimeForOpportunityProjectRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.OpportunityID = OpportunityID;
            EpicorLibrary.TimeService.GetActualTimeForOpportunityProjectResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActualTimeForOpportunityProject(inValue);
            GetActualTimeForOpportunityProjectResult = retVal.GetActualTimeForOpportunityProjectResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeApprovalDateResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeApprovalDate(EpicorLibrary.TimeService.GetTimeApprovalDateRequest request) {
            return base.Channel.GetTimeApprovalDate(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeApprovalDate(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int TimeID, out System.DateTime GetTimeApprovalDateResult) {
            EpicorLibrary.TimeService.GetTimeApprovalDateRequest inValue = new EpicorLibrary.TimeService.GetTimeApprovalDateRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeID = TimeID;
            EpicorLibrary.TimeService.GetTimeApprovalDateResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeApprovalDate(inValue);
            GetTimeApprovalDateResult = retVal.GetTimeApprovalDateResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.RecognizeAndFinalizeApprovedTimeForSiteResponse EpicorLibrary.TimeService.TimeWSSoap.RecognizeAndFinalizeApprovedTimeForSite(EpicorLibrary.TimeService.RecognizeAndFinalizeApprovedTimeForSiteRequest request) {
            return base.Channel.RecognizeAndFinalizeApprovedTimeForSite(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader RecognizeAndFinalizeApprovedTimeForSite(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string xmlTransactions, bool transactionFlag, out bool RecognizeAndFinalizeApprovedTimeForSiteResult) {
            EpicorLibrary.TimeService.RecognizeAndFinalizeApprovedTimeForSiteRequest inValue = new EpicorLibrary.TimeService.RecognizeAndFinalizeApprovedTimeForSiteRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.xmlTransactions = xmlTransactions;
            inValue.transactionFlag = transactionFlag;
            EpicorLibrary.TimeService.RecognizeAndFinalizeApprovedTimeForSiteResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).RecognizeAndFinalizeApprovedTimeForSite(inValue);
            RecognizeAndFinalizeApprovedTimeForSiteResult = retVal.RecognizeAndFinalizeApprovedTimeForSiteResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeTypeMaskingValuesResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeTypeMaskingValues(EpicorLibrary.TimeService.GetTimeTypeMaskingValuesRequest request) {
            return base.Channel.GetTimeTypeMaskingValues(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeTypeMaskingValues(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, out System.Xml.XmlNode GetTimeTypeMaskingValuesResult) {
            EpicorLibrary.TimeService.GetTimeTypeMaskingValuesRequest inValue = new EpicorLibrary.TimeService.GetTimeTypeMaskingValuesRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            EpicorLibrary.TimeService.GetTimeTypeMaskingValuesResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeTypeMaskingValues(inValue);
            GetTimeTypeMaskingValuesResult = retVal.GetTimeTypeMaskingValuesResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetWorkHourListForResourceResponse EpicorLibrary.TimeService.TimeWSSoap.GetWorkHourListForResource(EpicorLibrary.TimeService.GetWorkHourListForResourceRequest request) {
            return base.Channel.GetWorkHourListForResource(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetWorkHourListForResource(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int calculate, System.DateTime fromDate, System.DateTime toDate, out System.Xml.XmlNode xmlWorkHourListForResource, out System.Xml.XmlNode xmlOrganizationID) {
            EpicorLibrary.TimeService.GetWorkHourListForResourceRequest inValue = new EpicorLibrary.TimeService.GetWorkHourListForResourceRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.calculate = calculate;
            inValue.fromDate = fromDate;
            inValue.toDate = toDate;
            EpicorLibrary.TimeService.GetWorkHourListForResourceResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetWorkHourListForResource(inValue);
            xmlWorkHourListForResource = retVal.xmlWorkHourListForResource;
            xmlOrganizationID = retVal.xmlOrganizationID;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActivitiesForResourceInRangeResponse EpicorLibrary.TimeService.TimeWSSoap.GetActivitiesForResourceInRange(EpicorLibrary.TimeService.GetActivitiesForResourceInRangeRequest request) {
            return base.Channel.GetActivitiesForResourceInRange(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActivitiesForResourceInRange(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, System.DateTime fDate, System.DateTime tDate, string resID, out System.Xml.XmlNode GetActivitiesForResourceInRangeResult) {
            EpicorLibrary.TimeService.GetActivitiesForResourceInRangeRequest inValue = new EpicorLibrary.TimeService.GetActivitiesForResourceInRangeRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.fDate = fDate;
            inValue.tDate = tDate;
            inValue.resID = resID;
            EpicorLibrary.TimeService.GetActivitiesForResourceInRangeResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActivitiesForResourceInRange(inValue);
            GetActivitiesForResourceInRangeResult = retVal.GetActivitiesForResourceInRangeResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.ValidateActivitiesForResourceResponse EpicorLibrary.TimeService.TimeWSSoap.ValidateActivitiesForResource(EpicorLibrary.TimeService.ValidateActivitiesForResourceRequest request) {
            return base.Channel.ValidateActivitiesForResource(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader ValidateActivitiesForResource(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string xmlTimeList, System.DateTime fDate, System.DateTime tDate, out bool ValidateActivitiesForResourceResult) {
            EpicorLibrary.TimeService.ValidateActivitiesForResourceRequest inValue = new EpicorLibrary.TimeService.ValidateActivitiesForResourceRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.xmlTimeList = xmlTimeList;
            inValue.fDate = fDate;
            inValue.tDate = tDate;
            EpicorLibrary.TimeService.ValidateActivitiesForResourceResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).ValidateActivitiesForResource(inValue);
            ValidateActivitiesForResourceResult = retVal.ValidateActivitiesForResourceResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetInternalTreeForDisconnectedResponse EpicorLibrary.TimeService.TimeWSSoap.GetInternalTreeForDisconnected(EpicorLibrary.TimeService.GetInternalTreeForDisconnectedRequest request) {
            return base.Channel.GetInternalTreeForDisconnected(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetInternalTreeForDisconnected(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string resourceCategoryList, int startingOutline, System.DateTime fdate, System.DateTime tdate, out System.Xml.XmlNode GetInternalTreeForDisconnectedResult) {
            EpicorLibrary.TimeService.GetInternalTreeForDisconnectedRequest inValue = new EpicorLibrary.TimeService.GetInternalTreeForDisconnectedRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.resourceCategoryList = resourceCategoryList;
            inValue.startingOutline = startingOutline;
            inValue.fdate = fdate;
            inValue.tdate = tdate;
            EpicorLibrary.TimeService.GetInternalTreeForDisconnectedResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetInternalTreeForDisconnected(inValue);
            GetInternalTreeForDisconnectedResult = retVal.GetInternalTreeForDisconnectedResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActivityListForDisconnectedForActualsEntryResponse EpicorLibrary.TimeService.TimeWSSoap.GetActivityListForDisconnectedForActualsEntry(EpicorLibrary.TimeService.GetActivityListForDisconnectedForActualsEntryRequest request) {
            return base.Channel.GetActivityListForDisconnectedForActualsEntry(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActivityListForDisconnectedForActualsEntry(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, out System.Xml.XmlNode GetActivityListForDisconnectedForActualsEntryResult) {
            EpicorLibrary.TimeService.GetActivityListForDisconnectedForActualsEntryRequest inValue = new EpicorLibrary.TimeService.GetActivityListForDisconnectedForActualsEntryRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            EpicorLibrary.TimeService.GetActivityListForDisconnectedForActualsEntryResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActivityListForDisconnectedForActualsEntry(inValue);
            GetActivityListForDisconnectedForActualsEntryResult = retVal.GetActivityListForDisconnectedForActualsEntryResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetProjectCodesForPMForTimeReportResponse EpicorLibrary.TimeService.TimeWSSoap.GetProjectCodesForPMForTimeReport(EpicorLibrary.TimeService.GetProjectCodesForPMForTimeReportRequest request) {
            return base.Channel.GetProjectCodesForPMForTimeReport(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetProjectCodesForPMForTimeReport(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string Filter, string startDate, string endDate, string siteURN, out System.Xml.XmlNode GetProjectCodesForPMForTimeReportResult) {
            EpicorLibrary.TimeService.GetProjectCodesForPMForTimeReportRequest inValue = new EpicorLibrary.TimeService.GetProjectCodesForPMForTimeReportRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.Filter = Filter;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.siteURN = siteURN;
            EpicorLibrary.TimeService.GetProjectCodesForPMForTimeReportResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetProjectCodesForPMForTimeReport(inValue);
            GetProjectCodesForPMForTimeReportResult = retVal.GetProjectCodesForPMForTimeReportResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTimeAndTaskETCForTimeEntryResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateTimeAndTaskETCForTimeEntry(EpicorLibrary.TimeService.UpdateTimeAndTaskETCForTimeEntryRequest request) {
            return base.Channel.UpdateTimeAndTaskETCForTimeEntry(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTimeAndTaskETCForTimeEntry(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeList, string ETCDoc, out bool UpdateTimeAndTaskETCForTimeEntryResult, out System.Xml.XmlNode FailedRecallTrx) {
            EpicorLibrary.TimeService.UpdateTimeAndTaskETCForTimeEntryRequest inValue = new EpicorLibrary.TimeService.UpdateTimeAndTaskETCForTimeEntryRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeList = TimeList;
            inValue.ETCDoc = ETCDoc;
            EpicorLibrary.TimeService.UpdateTimeAndTaskETCForTimeEntryResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTimeAndTaskETCForTimeEntry(inValue);
            UpdateTimeAndTaskETCForTimeEntryResult = retVal.UpdateTimeAndTaskETCForTimeEntryResult;
            FailedRecallTrx = retVal.FailedRecallTrx;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetInvalidTimeTransactionForRecallResponse EpicorLibrary.TimeService.TimeWSSoap.GetInvalidTimeTransactionForRecall(EpicorLibrary.TimeService.GetInvalidTimeTransactionForRecallRequest request) {
            return base.Channel.GetInvalidTimeTransactionForRecall(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetInvalidTimeTransactionForRecall(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeIDList, string SiteLocalOrRemote, out string GetInvalidTimeTransactionForRecallResult) {
            EpicorLibrary.TimeService.GetInvalidTimeTransactionForRecallRequest inValue = new EpicorLibrary.TimeService.GetInvalidTimeTransactionForRecallRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeIDList = TimeIDList;
            inValue.SiteLocalOrRemote = SiteLocalOrRemote;
            EpicorLibrary.TimeService.GetInvalidTimeTransactionForRecallResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetInvalidTimeTransactionForRecall(inValue);
            GetInvalidTimeTransactionForRecallResult = retVal.GetInvalidTimeTransactionForRecallResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetPartialTransferReverseAmountsForTimeIDResponse EpicorLibrary.TimeService.TimeWSSoap.GetPartialTransferReverseAmountsForTimeID(EpicorLibrary.TimeService.GetPartialTransferReverseAmountsForTimeIDRequest request) {
            return base.Channel.GetPartialTransferReverseAmountsForTimeID(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetPartialTransferReverseAmountsForTimeID(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int originalTimeID, out System.Xml.XmlNode GetPartialTransferReverseAmountsForTimeIDResult) {
            EpicorLibrary.TimeService.GetPartialTransferReverseAmountsForTimeIDRequest inValue = new EpicorLibrary.TimeService.GetPartialTransferReverseAmountsForTimeIDRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.originalTimeID = originalTimeID;
            EpicorLibrary.TimeService.GetPartialTransferReverseAmountsForTimeIDResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetPartialTransferReverseAmountsForTimeID(inValue);
            GetPartialTransferReverseAmountsForTimeIDResult = retVal.GetPartialTransferReverseAmountsForTimeIDResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTimeAndTaskETCForBatchTimeEntryResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateTimeAndTaskETCForBatchTimeEntry(EpicorLibrary.TimeService.UpdateTimeAndTaskETCForBatchTimeEntryRequest request) {
            return base.Channel.UpdateTimeAndTaskETCForBatchTimeEntry(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTimeAndTaskETCForBatchTimeEntry(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeBatchWithDetails, string DocTimeEntryETC, out bool UpdateTimeAndTaskETCForBatchTimeEntryResult) {
            EpicorLibrary.TimeService.UpdateTimeAndTaskETCForBatchTimeEntryRequest inValue = new EpicorLibrary.TimeService.UpdateTimeAndTaskETCForBatchTimeEntryRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeBatchWithDetails = TimeBatchWithDetails;
            inValue.DocTimeEntryETC = DocTimeEntryETC;
            EpicorLibrary.TimeService.UpdateTimeAndTaskETCForBatchTimeEntryResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTimeAndTaskETCForBatchTimeEntry(inValue);
            UpdateTimeAndTaskETCForBatchTimeEntryResult = retVal.UpdateTimeAndTaskETCForBatchTimeEntryResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTimeEntryForICE3Response EpicorLibrary.TimeService.TimeWSSoap.UpdateTimeEntryForICE3(EpicorLibrary.TimeService.UpdateTimeEntryForICE3Request request) {
            return base.Channel.UpdateTimeEntryForICE3(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTimeEntryForICE3(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string QuickEntryList, string ResourceID, out System.Xml.XmlNode UpdateTimeEntryForICE3Result) {
            EpicorLibrary.TimeService.UpdateTimeEntryForICE3Request inValue = new EpicorLibrary.TimeService.UpdateTimeEntryForICE3Request();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.QuickEntryList = QuickEntryList;
            inValue.ResourceID = ResourceID;
            EpicorLibrary.TimeService.UpdateTimeEntryForICE3Response retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTimeEntryForICE3(inValue);
            UpdateTimeEntryForICE3Result = retVal.UpdateTimeEntryForICE3Result;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTimeDetailForICE3Response EpicorLibrary.TimeService.TimeWSSoap.UpdateTimeDetailForICE3(EpicorLibrary.TimeService.UpdateTimeDetailForICE3Request request) {
            return base.Channel.UpdateTimeDetailForICE3(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTimeDetailForICE3(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeDetailDoc, string ResourceID, out System.Xml.XmlNode UpdateTimeDetailForICE3Result) {
            EpicorLibrary.TimeService.UpdateTimeDetailForICE3Request inValue = new EpicorLibrary.TimeService.UpdateTimeDetailForICE3Request();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeDetailDoc = TimeDetailDoc;
            inValue.ResourceID = ResourceID;
            EpicorLibrary.TimeService.UpdateTimeDetailForICE3Response retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTimeDetailForICE3(inValue);
            UpdateTimeDetailForICE3Result = retVal.UpdateTimeDetailForICE3Result;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.ApproveAllTimeForICE3Response EpicorLibrary.TimeService.TimeWSSoap.ApproveAllTimeForICE3(EpicorLibrary.TimeService.ApproveAllTimeForICE3Request request) {
            return base.Channel.ApproveAllTimeForICE3(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader ApproveAllTimeForICE3(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ApproveDoc, string ResourceID, out System.Xml.XmlNode ApproveAllTimeForICE3Result) {
            EpicorLibrary.TimeService.ApproveAllTimeForICE3Request inValue = new EpicorLibrary.TimeService.ApproveAllTimeForICE3Request();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ApproveDoc = ApproveDoc;
            inValue.ResourceID = ResourceID;
            EpicorLibrary.TimeService.ApproveAllTimeForICE3Response retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).ApproveAllTimeForICE3(inValue);
            ApproveAllTimeForICE3Result = retVal.ApproveAllTimeForICE3Result;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeEntryByIDsResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeEntryByIDs(EpicorLibrary.TimeService.GetTimeEntryByIDsRequest request) {
            return base.Channel.GetTimeEntryByIDs(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeEntryByIDs(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeIDList, out System.Xml.XmlNode GetTimeEntryByIDsResult) {
            EpicorLibrary.TimeService.GetTimeEntryByIDsRequest inValue = new EpicorLibrary.TimeService.GetTimeEntryByIDsRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeIDList = TimeIDList;
            EpicorLibrary.TimeService.GetTimeEntryByIDsResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeEntryByIDs(inValue);
            GetTimeEntryByIDsResult = retVal.GetTimeEntryByIDsResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeDetailResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeDetail(EpicorLibrary.TimeService.GetTimeDetailRequest request) {
            return base.Channel.GetTimeDetail(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeDetail(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ResourceID, string ResourceSiteURN, System.DateTime FromDate, System.DateTime ToDate, string ApproverID, string projList, out System.Xml.XmlNode GetTimeDetailResult) {
            EpicorLibrary.TimeService.GetTimeDetailRequest inValue = new EpicorLibrary.TimeService.GetTimeDetailRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ResourceID = ResourceID;
            inValue.ResourceSiteURN = ResourceSiteURN;
            inValue.FromDate = FromDate;
            inValue.ToDate = ToDate;
            inValue.ApproverID = ApproverID;
            inValue.projList = projList;
            EpicorLibrary.TimeService.GetTimeDetailResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeDetail(inValue);
            GetTimeDetailResult = retVal.GetTimeDetailResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTimeDetailResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateTimeDetail(EpicorLibrary.TimeService.UpdateTimeDetailRequest request) {
            return base.Channel.UpdateTimeDetail(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTimeDetail(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeDetailDoc, string remoteFlag, out System.Xml.XmlNode UpdateTimeDetailResult, out System.Xml.XmlNode TimeDetailDocUpdated) {
            EpicorLibrary.TimeService.UpdateTimeDetailRequest inValue = new EpicorLibrary.TimeService.UpdateTimeDetailRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeDetailDoc = TimeDetailDoc;
            inValue.remoteFlag = remoteFlag;
            EpicorLibrary.TimeService.UpdateTimeDetailResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTimeDetail(inValue);
            UpdateTimeDetailResult = retVal.UpdateTimeDetailResult;
            TimeDetailDocUpdated = retVal.TimeDetailDocUpdated;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdatePreviewTimeDetailResponse EpicorLibrary.TimeService.TimeWSSoap.UpdatePreviewTimeDetail(EpicorLibrary.TimeService.UpdatePreviewTimeDetailRequest request) {
            return base.Channel.UpdatePreviewTimeDetail(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdatePreviewTimeDetail(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeDetailDoc, string remoteFlag, out System.Xml.XmlNode UpdatePreviewTimeDetailResult, out System.Xml.XmlNode TimeDetailDocUpdated) {
            EpicorLibrary.TimeService.UpdatePreviewTimeDetailRequest inValue = new EpicorLibrary.TimeService.UpdatePreviewTimeDetailRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeDetailDoc = TimeDetailDoc;
            inValue.remoteFlag = remoteFlag;
            EpicorLibrary.TimeService.UpdatePreviewTimeDetailResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdatePreviewTimeDetail(inValue);
            UpdatePreviewTimeDetailResult = retVal.UpdatePreviewTimeDetailResult;
            TimeDetailDocUpdated = retVal.TimeDetailDocUpdated;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetNumOfApprovesForTimeIDResponse EpicorLibrary.TimeService.TimeWSSoap.GetNumOfApprovesForTimeID(EpicorLibrary.TimeService.GetNumOfApprovesForTimeIDRequest request) {
            return base.Channel.GetNumOfApprovesForTimeID(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetNumOfApprovesForTimeID(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int TimeID, out int GetNumOfApprovesForTimeIDResult) {
            EpicorLibrary.TimeService.GetNumOfApprovesForTimeIDRequest inValue = new EpicorLibrary.TimeService.GetNumOfApprovesForTimeIDRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeID = TimeID;
            EpicorLibrary.TimeService.GetNumOfApprovesForTimeIDResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetNumOfApprovesForTimeID(inValue);
            GetNumOfApprovesForTimeIDResult = retVal.GetNumOfApprovesForTimeIDResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.ExistTimeApproverResponse EpicorLibrary.TimeService.TimeWSSoap.ExistTimeApprover(EpicorLibrary.TimeService.ExistTimeApproverRequest request) {
            return base.Channel.ExistTimeApprover(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader ExistTimeApprover(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, int TimeID, string ApproverID, string ApproverSiteURN, out bool ExistTimeApproverResult) {
            EpicorLibrary.TimeService.ExistTimeApproverRequest inValue = new EpicorLibrary.TimeService.ExistTimeApproverRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeID = TimeID;
            inValue.ApproverID = ApproverID;
            inValue.ApproverSiteURN = ApproverSiteURN;
            EpicorLibrary.TimeService.ExistTimeApproverResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).ExistTimeApprover(inValue);
            ExistTimeApproverResult = retVal.ExistTimeApproverResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetResourceListForProjectTimeResponse EpicorLibrary.TimeService.TimeWSSoap.GetResourceListForProjectTime(EpicorLibrary.TimeService.GetResourceListForProjectTimeRequest request) {
            return base.Channel.GetResourceListForProjectTime(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetResourceListForProjectTime(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, System.DateTime FromDate, System.DateTime ToDate, string ApproverID, string sDisplay, out System.Xml.XmlNode GetResourceListForProjectTimeResult) {
            EpicorLibrary.TimeService.GetResourceListForProjectTimeRequest inValue = new EpicorLibrary.TimeService.GetResourceListForProjectTimeRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCode = ProjectCode;
            inValue.FromDate = FromDate;
            inValue.ToDate = ToDate;
            inValue.ApproverID = ApproverID;
            inValue.sDisplay = sDisplay;
            EpicorLibrary.TimeService.GetResourceListForProjectTimeResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetResourceListForProjectTime(inValue);
            GetResourceListForProjectTimeResult = retVal.GetResourceListForProjectTimeResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetTimeDetailForProjectResponse EpicorLibrary.TimeService.TimeWSSoap.GetTimeDetailForProject(EpicorLibrary.TimeService.GetTimeDetailForProjectRequest request) {
            return base.Channel.GetTimeDetailForProject(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetTimeDetailForProject(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ProjectCode, System.DateTime FromDate, System.DateTime ToDate, string ApproverID, out System.Xml.XmlNode GetTimeDetailForProjectResult) {
            EpicorLibrary.TimeService.GetTimeDetailForProjectRequest inValue = new EpicorLibrary.TimeService.GetTimeDetailForProjectRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ProjectCode = ProjectCode;
            inValue.FromDate = FromDate;
            inValue.ToDate = ToDate;
            inValue.ApproverID = ApproverID;
            EpicorLibrary.TimeService.GetTimeDetailForProjectResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetTimeDetailForProject(inValue);
            GetTimeDetailForProjectResult = retVal.GetTimeDetailForProjectResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdatePreviewTimeDetailForProjectResponse EpicorLibrary.TimeService.TimeWSSoap.UpdatePreviewTimeDetailForProject(EpicorLibrary.TimeService.UpdatePreviewTimeDetailForProjectRequest request) {
            return base.Channel.UpdatePreviewTimeDetailForProject(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdatePreviewTimeDetailForProject(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeDetailForProjectDoc, string remoteFlag, out System.Xml.XmlNode UpdatePreviewTimeDetailForProjectResult) {
            EpicorLibrary.TimeService.UpdatePreviewTimeDetailForProjectRequest inValue = new EpicorLibrary.TimeService.UpdatePreviewTimeDetailForProjectRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeDetailForProjectDoc = TimeDetailForProjectDoc;
            inValue.remoteFlag = remoteFlag;
            EpicorLibrary.TimeService.UpdatePreviewTimeDetailForProjectResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdatePreviewTimeDetailForProject(inValue);
            UpdatePreviewTimeDetailForProjectResult = retVal.UpdatePreviewTimeDetailForProjectResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateTimeDetailForProjectResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateTimeDetailForProject(EpicorLibrary.TimeService.UpdateTimeDetailForProjectRequest request) {
            return base.Channel.UpdateTimeDetailForProject(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateTimeDetailForProject(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string TimeDetailForProjectDoc, string remoteFlag, out System.Xml.XmlNode UpdateTimeDetailForProjectResult) {
            EpicorLibrary.TimeService.UpdateTimeDetailForProjectRequest inValue = new EpicorLibrary.TimeService.UpdateTimeDetailForProjectRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.TimeDetailForProjectDoc = TimeDetailForProjectDoc;
            inValue.remoteFlag = remoteFlag;
            EpicorLibrary.TimeService.UpdateTimeDetailForProjectResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateTimeDetailForProject(inValue);
            UpdateTimeDetailForProjectResult = retVal.UpdateTimeDetailForProjectResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActivityResponse EpicorLibrary.TimeService.TimeWSSoap.GetActivity(EpicorLibrary.TimeService.GetActivityRequest request) {
            return base.Channel.GetActivity(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActivity(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string activityCode, out System.Xml.XmlNode GetActivityResult) {
            EpicorLibrary.TimeService.GetActivityRequest inValue = new EpicorLibrary.TimeService.GetActivityRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.activityCode = activityCode;
            EpicorLibrary.TimeService.GetActivityResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActivity(inValue);
            GetActivityResult = retVal.GetActivityResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetAllActivitiesResponse EpicorLibrary.TimeService.TimeWSSoap.GetAllActivities(EpicorLibrary.TimeService.GetAllActivitiesRequest request) {
            return base.Channel.GetAllActivities(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetAllActivities(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, out System.Xml.XmlNode GetAllActivitiesResult) {
            EpicorLibrary.TimeService.GetAllActivitiesRequest inValue = new EpicorLibrary.TimeService.GetAllActivitiesRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            EpicorLibrary.TimeService.GetAllActivitiesResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetAllActivities(inValue);
            GetAllActivitiesResult = retVal.GetAllActivitiesResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActiveActivitiesResponse EpicorLibrary.TimeService.TimeWSSoap.GetActiveActivities(EpicorLibrary.TimeService.GetActiveActivitiesRequest request) {
            return base.Channel.GetActiveActivities(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActiveActivities(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, out System.Xml.XmlNode GetActiveActivitiesResult) {
            EpicorLibrary.TimeService.GetActiveActivitiesRequest inValue = new EpicorLibrary.TimeService.GetActiveActivitiesRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            EpicorLibrary.TimeService.GetActiveActivitiesResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActiveActivities(inValue);
            GetActiveActivitiesResult = retVal.GetActiveActivitiesResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActivityGroupResponse EpicorLibrary.TimeService.TimeWSSoap.GetActivityGroup(EpicorLibrary.TimeService.GetActivityGroupRequest request) {
            return base.Channel.GetActivityGroup(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActivityGroup(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityGroupCode, out System.Xml.XmlNode GetActivityGroupResult) {
            EpicorLibrary.TimeService.GetActivityGroupRequest inValue = new EpicorLibrary.TimeService.GetActivityGroupRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ActivityGroupCode = ActivityGroupCode;
            EpicorLibrary.TimeService.GetActivityGroupResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActivityGroup(inValue);
            GetActivityGroupResult = retVal.GetActivityGroupResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.UpdateActivityGroupResponse EpicorLibrary.TimeService.TimeWSSoap.UpdateActivityGroup(EpicorLibrary.TimeService.UpdateActivityGroupRequest request) {
            return base.Channel.UpdateActivityGroup(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader UpdateActivityGroup(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityGroup) {
            EpicorLibrary.TimeService.UpdateActivityGroupRequest inValue = new EpicorLibrary.TimeService.UpdateActivityGroupRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ActivityGroup = ActivityGroup;
            EpicorLibrary.TimeService.UpdateActivityGroupResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).UpdateActivityGroup(inValue);
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.DeleteActivityGroupResponse EpicorLibrary.TimeService.TimeWSSoap.DeleteActivityGroup(EpicorLibrary.TimeService.DeleteActivityGroupRequest request) {
            return base.Channel.DeleteActivityGroup(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader DeleteActivityGroup(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string ActivityGroupCode) {
            EpicorLibrary.TimeService.DeleteActivityGroupRequest inValue = new EpicorLibrary.TimeService.DeleteActivityGroupRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.ActivityGroupCode = ActivityGroupCode;
            EpicorLibrary.TimeService.DeleteActivityGroupResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).DeleteActivityGroup(inValue);
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActiveActivitiesForSiteResponse EpicorLibrary.TimeService.TimeWSSoap.GetActiveActivitiesForSite(EpicorLibrary.TimeService.GetActiveActivitiesForSiteRequest request) {
            return base.Channel.GetActiveActivitiesForSite(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActiveActivitiesForSite(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, string SiteURN, out System.Xml.XmlNode GetActiveActivitiesForSiteResult) {
            EpicorLibrary.TimeService.GetActiveActivitiesForSiteRequest inValue = new EpicorLibrary.TimeService.GetActiveActivitiesForSiteRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            inValue.SiteURN = SiteURN;
            EpicorLibrary.TimeService.GetActiveActivitiesForSiteResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActiveActivitiesForSite(inValue);
            GetActiveActivitiesForSiteResult = retVal.GetActiveActivitiesForSiteResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetActiveInternalActivitiesResponse EpicorLibrary.TimeService.TimeWSSoap.GetActiveInternalActivities(EpicorLibrary.TimeService.GetActiveInternalActivitiesRequest request) {
            return base.Channel.GetActiveInternalActivities(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetActiveInternalActivities(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, out System.Xml.XmlNode GetActiveInternalActivitiesResult) {
            EpicorLibrary.TimeService.GetActiveInternalActivitiesRequest inValue = new EpicorLibrary.TimeService.GetActiveInternalActivitiesRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            EpicorLibrary.TimeService.GetActiveInternalActivitiesResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetActiveInternalActivities(inValue);
            GetActiveInternalActivitiesResult = retVal.GetActiveInternalActivitiesResult;
            return retVal.ICEResponseHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorLibrary.TimeService.GetExternalActivitiesResponse EpicorLibrary.TimeService.TimeWSSoap.GetExternalActivities(EpicorLibrary.TimeService.GetExternalActivitiesRequest request) {
            return base.Channel.GetExternalActivities(request);
        }
        
        public EpicorLibrary.TimeService.ICEResponseHeader GetExternalActivities(EpicorLibrary.TimeService.ICERequestHeader ICERequestHeader, out System.Xml.XmlNode GetExternalActivitiesResult) {
            EpicorLibrary.TimeService.GetExternalActivitiesRequest inValue = new EpicorLibrary.TimeService.GetExternalActivitiesRequest();
            inValue.ICERequestHeader = ICERequestHeader;
            EpicorLibrary.TimeService.GetExternalActivitiesResponse retVal = ((EpicorLibrary.TimeService.TimeWSSoap)(this)).GetExternalActivities(inValue);
            GetExternalActivitiesResult = retVal.GetExternalActivitiesResult;
            return retVal.ICEResponseHeader;
        }
    }
}
